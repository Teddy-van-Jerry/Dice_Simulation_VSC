{
	"information_for_contributor": [
    "This code is modified based on",
    "https://github.com/jeff-hykin/better-cpp-syntax/blob/master/syntaxes/cpp.tmLanguage.json"
  ],
	"name": "Dice Simulation",
  "scopeName": "source.ds",
  "fileTypes": [
    "ds",
    "ds-cpp",
    "ds-h"
  ],
	"patterns": [
		{
		  "include": "#ever_present_context"
		},
		{
		  "include": "#constructor_root"
		},
		{
		  "include": "#destructor_root"
		},
		{
		  "include": "#function_definition"
		},
		{
		  "include": "#operator_overload"
		},
		{
		  "include": "#using_namespace"
		},
		{
		  "include": "#type_alias"
		},
		{
		  "include": "#using_name"
		},
		{
		  "include": "#namespace_alias"
		},
		{
		  "include": "#namespace_block"
		},
		{
		  "include": "#extern_block"
		},
		{
		  "include": "#typedef_class"
		},
		{
		  "include": "#typedef_struct"
		},
		{
		  "include": "#typedef_union"
		},
		{
		  "include": "#misc_keywords"
		},
		{
		  "include": "#standard_declares"
		},
		{
		  "include": "#class_block"
		},
		{
		  "include": "#struct_block"
		},
		{
		  "include": "#union_block"
		},
		{
		  "include": "#enum_block"
		},
		{
		  "include": "#template_isolated_definition"
		},
		{
		  "include": "#template_definition"
		},
		{
		  "include": "#access_control_keywords"
		},
		{
		  "include": "#block"
		},
		{
		  "include": "#static_assert"
		},
		{
		  "include": "#assembly"
		},
		{
		  "include": "#function_pointer"
		},
		{
		  "include": "#evaluation_context"
		}
	  ],
	  "repository": {
		"access_control_keywords": {
		  "match": "((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(((?:(?:protected)|(?:private)|(?:public)))(?:(?:\\s)+)?(:))",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"3": {
			  "name": "storage.type.modifier.access.control.$4.ds"
			},
			"4": {
			},
			"5": {
			  "name": "punctuation.separator.colon.access.control.ds"
			}
		  }
		},
		"alignas_attribute": {
		  "begin": "alignas\\(",
		  "end": "\\)",
		  "beginCaptures": {
			"0": {
			  "name": "punctuation.section.attribute.begin.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.attribute.end.ds"
			}
		  },
		  "name": "support.other.attribute.ds",
		  "patterns": [
			{
			  "include": "#attributes_context"
			},
			{
			  "begin": "\\(",
			  "end": "\\)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#string_context"
				}
			  ]
			},
			{
			  "match": "(using)(?:\\s)+((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))",
			  "captures": {
				"1": {
				  "name": "keyword.other.using.directive.ds"
				},
				"2": {
				  "name": "entity.name.namespace.ds"
				}
			  }
			},
			{
			  "match": ",",
			  "name": "punctuation.separator.attribute.ds"
			},
			{
			  "match": ":",
			  "name": "punctuation.accessor.attribute.ds"
			},
			{
			  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)(?=::)",
			  "name": "entity.name.namespace.ds"
			},
			{
			  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
			  "name": "entity.other.attribute.$0.ds"
			},
			{
			  "include": "#number_literal"
			}
		  ]
		},
		"alignas_operator": {
		  "begin": "((?<!\\w)alignas(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()",
		  "end": "\\)",
		  "beginCaptures": {
			"1": {
			  "name": "keyword.operator.functionlike.ds keyword.operator.alignas.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"4": {
			  "name": "comment.block.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"6": {
			  "name": "punctuation.section.arguments.begin.bracket.round.operator.alignas.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.arguments.end.bracket.round.operator.alignas.ds"
			}
		  },
		  "contentName": "meta.arguments.operator.alignas",
		  "patterns": [
			{
			  "include": "#evaluation_context"
			}
		  ]
		},
		"alignof_operator": {
		  "begin": "((?<!\\w)alignof(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()",
		  "end": "\\)",
		  "beginCaptures": {
			"1": {
			  "name": "keyword.operator.functionlike.ds keyword.operator.alignof.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"4": {
			  "name": "comment.block.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"6": {
			  "name": "punctuation.section.arguments.begin.bracket.round.operator.alignof.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.arguments.end.bracket.round.operator.alignof.ds"
			}
		  },
		  "contentName": "meta.arguments.operator.alignof",
		  "patterns": [
			{
			  "include": "#evaluation_context"
			}
		  ]
		},
		"assembly": {
		  "begin": "(\\b(?:__asm__|asm)\\b)(?:(?:\\s)+)?((?:volatile)?)",
		  "end": "(?!\\G)",
		  "beginCaptures": {
			"1": {
			  "name": "storage.type.asm.ds"
			},
			"2": {
			  "name": "storage.modifier.ds"
			}
		  },
		  "endCaptures": {
		  },
		  "name": "meta.asm.ds",
		  "patterns": [
			{
			  "match": "^((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:\\n)|$)",
			  "captures": {
				"1": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"2": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"3": {
				  "name": "comment.block.ds"
				},
				"4": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				}
			  }
			},
			{
			  "include": "#comments"
			},
			{
			  "begin": "((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\(",
			  "end": "\\)",
			  "beginCaptures": {
				"0": {
				  "name": "punctuation.section.parens.begin.bracket.round.assembly.ds"
				},
				"1": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"2": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"3": {
				  "name": "comment.block.ds"
				},
				"4": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				}
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.parens.end.bracket.round.assembly.ds"
				}
			  },
			  "patterns": [
				{
				  "begin": "(R?)(\")",
				  "end": "\"",
				  "beginCaptures": {
					"1": {
					  "name": "meta.encoding.ds"
					},
					"2": {
					  "name": "punctuation.definition.string.begin.assembly.ds"
					}
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.definition.string.end.assembly.ds"
					}
				  },
				  "name": "string.quoted.double.ds",
				  "contentName": "meta.embedded.assembly",
				  "patterns": [
					{
					  "include": "source.asm"
					},
					{
					  "include": "source.x86"
					},
					{
					  "include": "source.x86_64"
					},
					{
					  "include": "source.arm"
					},
					{
					  "include": "#backslash_escapes"
					},
					{
					  "include": "#string_escaped_char"
					}
				  ]
				},
				{
				  "begin": "\\(",
				  "end": "\\)",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.section.parens.begin.bracket.round.assembly.inner.ds"
					}
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.parens.end.bracket.round.assembly.inner.ds"
					}
				  },
				  "patterns": [
					{
					  "include": "#evaluation_context"
					}
				  ]
				},
				{
				  "match": "\\[((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\]",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					},
					"5": {
					  "name": "variable.other.asm.label.ds"
					},
					"6": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"7": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"8": {
					  "name": "comment.block.ds"
					},
					"9": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				},
				{
				  "match": ":",
				  "name": "punctuation.separator.delimiter.colon.assembly.ds"
				},
				{
				  "include": "#comments"
				}
			  ]
			}
		  ]
		},
		"assignment_operator": {
		  "match": "\\=",
		  "name": "keyword.operator.assignment.ds"
		},
		"attributes_context": {
		  "patterns": [
			{
			  "include": "#cpp_attributes"
			},
			{
			  "include": "#gcc_attributes"
			},
			{
			  "include": "#ms_attributes"
			},
			{
			  "include": "#alignas_attribute"
			}
		  ]
		},
		"backslash_escapes": {
		  "match": "(?x)\\\\ (\n\\\\\t\t\t |\n[abefnprtv'\"?]   |\n[0-3][0-7]{,2}\t |\n[4-7]\\d?\t\t|\nx[a-fA-F0-9]{,2} |\nu[a-fA-F0-9]{,4} |\nU[a-fA-F0-9]{,8} )",
		  "name": "constant.character.escape"
		},
		"block": {
		  "begin": "{",
		  "end": "}|(?=\\s*#\\s*(?:elif|else|endif)\\b)",
		  "beginCaptures": {
			"0": {
			  "name": "punctuation.section.block.begin.bracket.curly.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.block.end.bracket.curly.ds"
			}
		  },
		  "name": "meta.block.ds",
		  "patterns": [
			{
			  "include": "#function_body_context"
			}
		  ]
		},
		"block_comment": {
		  "begin": "\\s*+(\\/\\*)",
		  "end": "\\*\\/",
		  "beginCaptures": {
			"1": {
			  "name": "punctuation.definition.comment.begin.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.definition.comment.end.ds"
			}
		  },
		  "name": "comment.block.ds"
		},
		"builtin_storage_type_initilizer": {
		  "begin": "(?:\\s)*+(?<!\\w)(?:(?:(?:((?:(?:unsigned)|(?:wchar_t)|(?:double)|(?:signed)|(?:short)|(?:float)|(?:auto)|(?:void)|(?:long)|(?:char)|(?:bool)|(?:int)))|((?:(?:uint_least32_t)|(?:uint_least64_t)|(?:uint_least16_t)|(?:uint_fast64_t)|(?:uint_least8_t)|(?:int_least64_t)|(?:int_least32_t)|(?:int_least16_t)|(?:uint_fast16_t)|(?:uint_fast32_t)|(?:int_least8_t)|(?:int_fast16_t)|(?:int_fast32_t)|(?:int_fast64_t)|(?:uint_fast8_t)|(?:int_fast8_t)|(?:suseconds_t)|(?:useconds_t)|(?:uintmax_t)|(?:uintmax_t)|(?:in_port_t)|(?:uintmax_t)|(?:in_addr_t)|(?:blksize_t)|(?:uintptr_t)|(?:intmax_t)|(?:intptr_t)|(?:blkcnt_t)|(?:intmax_t)|(?:u_quad_t)|(?:uint16_t)|(?:uint32_t)|(?:uint64_t)|(?:ssize_t)|(?:fixpt_t)|(?:qaddr_t)|(?:u_short)|(?:int16_t)|(?:int32_t)|(?:int64_t)|(?:uint8_t)|(?:daddr_t)|(?:caddr_t)|(?:swblk_t)|(?:clock_t)|(?:segsz_t)|(?:nlink_t)|(?:time_t)|(?:u_long)|(?:ushort)|(?:quad_t)|(?:mode_t)|(?:size_t)|(?:u_char)|(?:int8_t)|(?:u_int)|(?:uid_t)|(?:off_t)|(?:pid_t)|(?:gid_t)|(?:dev_t)|(?:div_t)|(?:key_t)|(?:ino_t)|(?:id_t)|(?:id_t)|(?:uint))))|((?:(?:pthread_rwlockattr_t)|(?:pthread_mutexattr_t)|(?:pthread_condattr_t)|(?:pthread_rwlock_t)|(?:pthread_mutex_t)|(?:pthread_cond_t)|(?:pthread_attr_t)|(?:pthread_once_t)|(?:pthread_key_t)|(?:pthread_t))))|([a-zA-Z_](?:\\w)*_t))(?!\\w)(?:\\s)*+(?<!\\w)(\\()",
		  "end": "\\)",
		  "beginCaptures": {
			"1": {
			  "name": "storage.type.primitive.ds storage.type.built-in.primitive.ds"
			},
			"2": {
			  "name": "storage.type.ds storage.type.built-in.ds"
			},
			"3": {
			  "name": "support.type.posix-reserved.pthread.ds support.type.built-in.posix-reserved.pthread.ds"
			},
			"4": {
			  "name": "support.type.posix-reserved.ds support.type.built-in.posix-reserved.ds"
			},
			"5": {
			  "name": "punctuation.section.arguments.begin.bracket.round.initializer.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.arguments.end.bracket.round.initializer.ds"
			}
		  },
		  "patterns": [
			{
			  "include": "#evaluation_context"
			}
		  ]
		},
		"case_statement": {
		  "begin": "((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)case(?!\\w))",
		  "end": ":",
		  "beginCaptures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"3": {
			  "name": "comment.block.ds"
			},
			"4": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"5": {
			  "name": "keyword.control.case.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.separator.colon.case.ds"
			}
		  },
		  "name": "meta.conditional.case.ds",
		  "patterns": [
			{
			  "include": "#evaluation_context"
			},
			{
			  "include": "#c_conditional_context"
			}
		  ]
		},
		"class_block": {
		  "begin": "((?<!\\w)class(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?={)|(?:((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?((?:(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*+)?(?:((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(:(?!:)))?)",
		  "end": "(?:(?:(?<=\\}|%>|\\?\\?>)(?:(?:\\s)+)?(;)|(;))|(?=[;>\\[\\]=]))",
		  "beginCaptures": {
			"0": {
			  "name": "meta.head.class.ds"
			},
			"1": {
			  "name": "storage.type.$1.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"4": {
			  "name": "comment.block.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"6": {
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#number_literal"
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"8": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"9": {
			  "name": "comment.block.ds"
			},
			"10": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "match": "((?<!\\w)final(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))",
				  "captures": {
					"1": {
					  "name": "storage.type.modifier.final.ds"
					},
					"2": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"3": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"4": {
					  "name": "comment.block.ds"
					},
					"5": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				},
				{
				  "match": "((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:((?<!\\w)final(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?(?=:|{|$)",
				  "captures": {
					"1": {
					  "name": "entity.name.type.class.ds"
					},
					"2": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"3": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"4": {
					  "name": "comment.block.ds"
					},
					"5": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					},
					"6": {
					  "name": "storage.type.modifier.final.ds"
					},
					"7": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"8": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"9": {
					  "name": "comment.block.ds"
					},
					"10": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				},
				{
				  "match": "DLLEXPORT",
				  "name": "entity.name.other.preprocessor.macro.predefined.DLLEXPORT.ds"
				},
				{
				  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
				  "name": "entity.name.other.preprocessor.macro.predefined.probably.$0.ds"
				}
			  ]
			},
			"12": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"13": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"14": {
			  "name": "comment.block.ds"
			},
			"15": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"16": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"17": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"18": {
			  "name": "comment.block.ds"
			},
			"19": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"20": {
			  "name": "punctuation.separator.colon.inheritance.ds"
			}
		  },
		  "endCaptures": {
			"1": {
			  "name": "punctuation.terminator.statement.ds"
			},
			"2": {
			  "name": "punctuation.terminator.statement.ds"
			}
		  },
		  "name": "meta.block.class.ds",
		  "patterns": [
			{
			  "begin": "\\G ?",
			  "end": "(?:\\{|<%|\\?\\?<|(?=;))",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.begin.bracket.curly.class.ds"
				}
			  },
			  "name": "meta.head.class.ds",
			  "patterns": [
				{
				  "include": "#ever_present_context"
				},
				{
				  "include": "#inheritance_context"
				},
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			{
			  "begin": "(?<=\\{|<%|\\?\\?<)",
			  "end": "\\}|%>|\\?\\?>",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.end.bracket.curly.class.ds"
				}
			  },
			  "name": "meta.body.class.ds",
			  "patterns": [
				{
				  "include": "#function_pointer"
				},
				{
				  "include": "#static_assert"
				},
				{
				  "include": "#constructor_inline"
				},
				{
				  "include": "#destructor_inline"
				},
				{
				  "include": "$self"
				}
			  ]
			},
			{
			  "begin": "(?<=\\}|%>|\\?\\?>)[\\s]*",
			  "end": "[\\s]*(?=;)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "name": "meta.tail.class.ds",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ]
			}
		  ]
		},
		"class_declare": {
		  "match": "((?<!\\w)class(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\b(?!override\\W|override\\$|final\\W|final\\$)((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=\\S)(?![:{a-zA-Z])",
		  "captures": {
			"1": {
			  "name": "storage.type.class.declare.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"4": {
			  "name": "entity.name.type.class.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*",
				  "name": "storage.modifier.pointer.ds"
				},
				{
				  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  },
				  "name": "invalid.illegal.reference-type.ds"
				},
				{
				  "match": "\\&",
				  "name": "storage.modifier.reference.ds"
				}
			  ]
			},
			"6": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"8": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"9": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"10": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"12": {
			  "name": "variable.other.object.declare.ds"
			},
			"13": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"14": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			}
		  }
		},
		"comma": {
		  "match": ",",
		  "name": "punctuation.separator.delimiter.comma.ds"
		},
		"comma_in_template_argument": {
		  "match": ",",
		  "name": "punctuation.separator.delimiter.comma.template.argument.ds"
		},
		"comments": {
		  "patterns": [
			{
			  "begin": "^(?:(?:\\s)+)?+(\\/\\/[!\\/]+)",
			  "end": "(?<=\\n)(?<!\\\\\\n)",
			  "beginCaptures": {
				"1": {
				  "name": "punctuation.definition.comment.documentation.ds"
				}
			  },
			  "endCaptures": {
			  },
			  "name": "comment.line.double-slash.documentation.ds",
			  "patterns": [
				{
				  "include": "#line_continuation_character"
				},
				{
				  "match": "(?<=[\\s*!\\/])[\\\\@](?:callergraph|callgraph|else|endif|f\\$|f\\[|f\\]|hidecallergraph|hidecallgraph|hiderefby|hiderefs|hideinitializer|htmlinclude|n|nosubgrouping|private|privatesection|protected|protectedsection|public|publicsection|pure|showinitializer|showrefby|showrefs|tableofcontents|\\$|\\#|<|>|%|\"|\\.|=|::|\\||\\-\\-|\\-\\-\\-)\\b(?:\\{[^}]*\\})?",
				  "name": "storage.type.class.doxygen.ds"
				},
				{
				  "match": "((?<=[\\s*!\\/])[\\\\@](?:a|em|e))(?:\\s)+(\\S+)",
				  "captures": {
					"1": {
					  "name": "storage.type.class.doxygen.ds"
					},
					"2": {
					  "name": "markup.italic.doxygen.ds"
					}
				  }
				},
				{
				  "match": "((?<=[\\s*!\\/])[\\\\@]b)(?:\\s)+(\\S+)",
				  "captures": {
					"1": {
					  "name": "storage.type.class.doxygen.ds"
					},
					"2": {
					  "name": "markup.bold.doxygen.ds"
					}
				  }
				},
				{
				  "match": "((?<=[\\s*!\\/])[\\\\@](?:c|p))(?:\\s)+(\\S+)",
				  "captures": {
					"1": {
					  "name": "storage.type.class.doxygen.ds"
					},
					"2": {
					  "name": "markup.inline.raw.string.ds"
					}
				  }
				},
				{
				  "match": "(?<=[\\s*!\\/])[\\\\@](?:a|anchor|b|c|cite|copybrief|copydetail|copydoc|def|dir|dontinclude|e|em|emoji|enum|example|extends|file|idlexcept|implements|include|includedoc|includelineno|latexinclude|link|memberof|namespace|p|package|ref|refitem|related|relates|relatedalso|relatesalso|verbinclude)\\b(?:\\{[^}]*\\})?",
				  "name": "storage.type.class.doxygen.ds"
				},
				{
				  "match": "(?<=[\\s*!\\/])[\\\\@](?:addindex|addtogroup|category|class|defgroup|diafile|dotfile|elseif|fn|headerfile|if|ifnot|image|ingroup|interface|line|mainpage|mscfile|name|overload|page|property|protocol|section|skip|skipline|snippet|snippetdoc|snippetlineno|struct|subpage|subsection|subsubsection|typedef|union|until|vhdlflow|weakgroup)\\b(?:\\{[^}]*\\})?",
				  "name": "storage.type.class.doxygen.ds"
				},
				{
				  "match": "((?<=[\\s*!\\/])[\\\\@]param)(?:\\s*\\[((?:,?(?:(?:\\s)+)?(?:in|out)(?:(?:\\s)+)?)+)\\])?(?:\\s)+(\\b\\w+\\b)",
				  "captures": {
					"1": {
					  "name": "storage.type.class.doxygen.ds"
					},
					"2": {
					  "patterns": [
						{
						  "match": "in|out",
						  "name": "keyword.other.parameter.direction.$0.ds"
						}
					  ]
					},
					"3": {
					  "name": "variable.parameter.ds"
					}
				  }
				},
				{
				  "match": "(?<=[\\s*!\\/])[\\\\@](?:arg|attention|author|authors|brief|bug|copyright|date|deprecated|details|exception|invariant|li|note|par|paragraph|param|post|pre|remark|remarks|result|return|returns|retval|sa|see|short|since|test|throw|throws|todo|tparam|version|warning|xrefitem)\\b(?:\\{[^}]*\\})?",
				  "name": "storage.type.class.doxygen.ds"
				},
				{
				  "match": "(?<=[\\s*!\\/])[\\\\@](?:code|cond|docbookonly|dot|htmlonly|internal|latexonly|link|manonly|msc|parblock|rtfonly|secreflist|startuml|verbatim|xmlonly|endcode|endcond|enddocbookonly|enddot|endhtmlonly|endinternal|endlatexonly|endlink|endmanonly|endmsc|endparblock|endrtfonly|endsecreflist|enduml|endverbatim|endxmlonly)\\b(?:\\{[^}]*\\})?",
				  "name": "storage.type.class.doxygen.ds"
				},
				{
				  "match": "(?:\\b[A-Z]+:|@[a-z_]+:)",
				  "name": "storage.type.class.gtkdoc.ds"
				}
			  ]
			},
			{
			  "match": "(\\/\\*[!*]+(?=\\s))(.+)([!*]*\\*\\/)",
			  "captures": {
				"1": {
				  "name": "punctuation.definition.comment.begin.documentation.ds"
				},
				"2": {
				  "patterns": [
					{
					  "match": "(?<=[\\s*!\\/])[\\\\@](?:callergraph|callgraph|else|endif|f\\$|f\\[|f\\]|hidecallergraph|hidecallgraph|hiderefby|hiderefs|hideinitializer|htmlinclude|n|nosubgrouping|private|privatesection|protected|protectedsection|public|publicsection|pure|showinitializer|showrefby|showrefs|tableofcontents|\\$|\\#|<|>|%|\"|\\.|=|::|\\||\\-\\-|\\-\\-\\-)\\b(?:\\{[^}]*\\})?",
					  "name": "storage.type.class.doxygen.ds"
					},
					{
					  "match": "((?<=[\\s*!\\/])[\\\\@](?:a|em|e))(?:\\s)+(\\S+)",
					  "captures": {
						"1": {
						  "name": "storage.type.class.doxygen.ds"
						},
						"2": {
						  "name": "markup.italic.doxygen.ds"
						}
					  }
					},
					{
					  "match": "((?<=[\\s*!\\/])[\\\\@]b)(?:\\s)+(\\S+)",
					  "captures": {
						"1": {
						  "name": "storage.type.class.doxygen.ds"
						},
						"2": {
						  "name": "markup.bold.doxygen.ds"
						}
					  }
					},
					{
					  "match": "((?<=[\\s*!\\/])[\\\\@](?:c|p))(?:\\s)+(\\S+)",
					  "captures": {
						"1": {
						  "name": "storage.type.class.doxygen.ds"
						},
						"2": {
						  "name": "markup.inline.raw.string.ds"
						}
					  }
					},
					{
					  "match": "(?<=[\\s*!\\/])[\\\\@](?:a|anchor|b|c|cite|copybrief|copydetail|copydoc|def|dir|dontinclude|e|em|emoji|enum|example|extends|file|idlexcept|implements|include|includedoc|includelineno|latexinclude|link|memberof|namespace|p|package|ref|refitem|related|relates|relatedalso|relatesalso|verbinclude)\\b(?:\\{[^}]*\\})?",
					  "name": "storage.type.class.doxygen.ds"
					},
					{
					  "match": "(?<=[\\s*!\\/])[\\\\@](?:addindex|addtogroup|category|class|defgroup|diafile|dotfile|elseif|fn|headerfile|if|ifnot|image|ingroup|interface|line|mainpage|mscfile|name|overload|page|property|protocol|section|skip|skipline|snippet|snippetdoc|snippetlineno|struct|subpage|subsection|subsubsection|typedef|union|until|vhdlflow|weakgroup)\\b(?:\\{[^}]*\\})?",
					  "name": "storage.type.class.doxygen.ds"
					},
					{
					  "match": "((?<=[\\s*!\\/])[\\\\@]param)(?:\\s*\\[((?:,?(?:(?:\\s)+)?(?:in|out)(?:(?:\\s)+)?)+)\\])?(?:\\s)+(\\b\\w+\\b)",
					  "captures": {
						"1": {
						  "name": "storage.type.class.doxygen.ds"
						},
						"2": {
						  "patterns": [
							{
							  "match": "in|out",
							  "name": "keyword.other.parameter.direction.$0.ds"
							}
						  ]
						},
						"3": {
						  "name": "variable.parameter.ds"
						}
					  }
					},
					{
					  "match": "(?<=[\\s*!\\/])[\\\\@](?:arg|attention|author|authors|brief|bug|copyright|date|deprecated|details|exception|invariant|li|note|par|paragraph|param|post|pre|remark|remarks|result|return|returns|retval|sa|see|short|since|test|throw|throws|todo|tparam|version|warning|xrefitem)\\b(?:\\{[^}]*\\})?",
					  "name": "storage.type.class.doxygen.ds"
					},
					{
					  "match": "(?<=[\\s*!\\/])[\\\\@](?:code|cond|docbookonly|dot|htmlonly|internal|latexonly|link|manonly|msc|parblock|rtfonly|secreflist|startuml|verbatim|xmlonly|endcode|endcond|enddocbookonly|enddot|endhtmlonly|endinternal|endlatexonly|endlink|endmanonly|endmsc|endparblock|endrtfonly|endsecreflist|enduml|endverbatim|endxmlonly)\\b(?:\\{[^}]*\\})?",
					  "name": "storage.type.class.doxygen.ds"
					},
					{
					  "match": "(?:\\b[A-Z]+:|@[a-z_]+:)",
					  "name": "storage.type.class.gtkdoc.ds"
					}
				  ]
				},
				"3": {
				  "name": "punctuation.definition.comment.end.documentation.ds"
				}
			  },
			  "name": "comment.block.documentation.ds"
			},
			{
			  "begin": "(?:(?:\\s)+)?+\\/\\*[!*]+(?:(?:(?:\\n)|$)|(?=\\s))",
			  "end": "[!*]*\\*\\/",
			  "beginCaptures": {
				"0": {
				  "name": "punctuation.definition.comment.begin.documentation.ds"
				}
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.definition.comment.end.documentation.ds"
				}
			  },
			  "name": "comment.block.documentation.ds",
			  "patterns": [
				{
				  "match": "(?<=[\\s*!\\/])[\\\\@](?:callergraph|callgraph|else|endif|f\\$|f\\[|f\\]|hidecallergraph|hidecallgraph|hiderefby|hiderefs|hideinitializer|htmlinclude|n|nosubgrouping|private|privatesection|protected|protectedsection|public|publicsection|pure|showinitializer|showrefby|showrefs|tableofcontents|\\$|\\#|<|>|%|\"|\\.|=|::|\\||\\-\\-|\\-\\-\\-)\\b(?:\\{[^}]*\\})?",
				  "name": "storage.type.class.doxygen.ds"
				},
				{
				  "match": "((?<=[\\s*!\\/])[\\\\@](?:a|em|e))(?:\\s)+(\\S+)",
				  "captures": {
					"1": {
					  "name": "storage.type.class.doxygen.ds"
					},
					"2": {
					  "name": "markup.italic.doxygen.ds"
					}
				  }
				},
				{
				  "match": "((?<=[\\s*!\\/])[\\\\@]b)(?:\\s)+(\\S+)",
				  "captures": {
					"1": {
					  "name": "storage.type.class.doxygen.ds"
					},
					"2": {
					  "name": "markup.bold.doxygen.ds"
					}
				  }
				},
				{
				  "match": "((?<=[\\s*!\\/])[\\\\@](?:c|p))(?:\\s)+(\\S+)",
				  "captures": {
					"1": {
					  "name": "storage.type.class.doxygen.ds"
					},
					"2": {
					  "name": "markup.inline.raw.string.ds"
					}
				  }
				},
				{
				  "match": "(?<=[\\s*!\\/])[\\\\@](?:a|anchor|b|c|cite|copybrief|copydetail|copydoc|def|dir|dontinclude|e|em|emoji|enum|example|extends|file|idlexcept|implements|include|includedoc|includelineno|latexinclude|link|memberof|namespace|p|package|ref|refitem|related|relates|relatedalso|relatesalso|verbinclude)\\b(?:\\{[^}]*\\})?",
				  "name": "storage.type.class.doxygen.ds"
				},
				{
				  "match": "(?<=[\\s*!\\/])[\\\\@](?:addindex|addtogroup|category|class|defgroup|diafile|dotfile|elseif|fn|headerfile|if|ifnot|image|ingroup|interface|line|mainpage|mscfile|name|overload|page|property|protocol|section|skip|skipline|snippet|snippetdoc|snippetlineno|struct|subpage|subsection|subsubsection|typedef|union|until|vhdlflow|weakgroup)\\b(?:\\{[^}]*\\})?",
				  "name": "storage.type.class.doxygen.ds"
				},
				{
				  "match": "((?<=[\\s*!\\/])[\\\\@]param)(?:\\s*\\[((?:,?(?:(?:\\s)+)?(?:in|out)(?:(?:\\s)+)?)+)\\])?(?:\\s)+(\\b\\w+\\b)",
				  "captures": {
					"1": {
					  "name": "storage.type.class.doxygen.ds"
					},
					"2": {
					  "patterns": [
						{
						  "match": "in|out",
						  "name": "keyword.other.parameter.direction.$0.ds"
						}
					  ]
					},
					"3": {
					  "name": "variable.parameter.ds"
					}
				  }
				},
				{
				  "match": "(?<=[\\s*!\\/])[\\\\@](?:arg|attention|author|authors|brief|bug|copyright|date|deprecated|details|exception|invariant|li|note|par|paragraph|param|post|pre|remark|remarks|result|return|returns|retval|sa|see|short|since|test|throw|throws|todo|tparam|version|warning|xrefitem)\\b(?:\\{[^}]*\\})?",
				  "name": "storage.type.class.doxygen.ds"
				},
				{
				  "match": "(?<=[\\s*!\\/])[\\\\@](?:code|cond|docbookonly|dot|htmlonly|internal|latexonly|link|manonly|msc|parblock|rtfonly|secreflist|startuml|verbatim|xmlonly|endcode|endcond|enddocbookonly|enddot|endhtmlonly|endinternal|endlatexonly|endlink|endmanonly|endmsc|endparblock|endrtfonly|endsecreflist|enduml|endverbatim|endxmlonly)\\b(?:\\{[^}]*\\})?",
				  "name": "storage.type.class.doxygen.ds"
				},
				{
				  "match": "(?:\\b[A-Z]+:|@[a-z_]+:)",
				  "name": "storage.type.class.gtkdoc.ds"
				}
			  ]
			},
			{
			  "include": "#emacs_file_banner"
			},
			{
			  "include": "#block_comment"
			},
			{
			  "include": "#line_comment"
			},
			{
			  "include": "#invalid_comment_end"
			}
		  ]
		},
		"constructor_inline": {
		  "begin": "^((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:(?:(?:constexpr)|(?:explicit)|(?:mutable)|(?:virtual)|(?:inline)|(?:friend))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:__cdecl|__clrcall|__stdcall|__fastcall|__thiscall|__vectorcall)?)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)(?=\\())",
		  "end": "(?:(?<=\\}|%>|\\?\\?>)|(?=[;>\\[\\]=]))",
		  "beginCaptures": {
			"0": {
			  "name": "meta.head.function.definition.special.constructor.ds"
			},
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"3": {
			  "name": "comment.block.ds"
			},
			"4": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"5": {
			  "patterns": [
				{
				  "include": "#functional_specifiers_pre_parameters"
				}
			  ]
			},
			"6": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"7": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"8": {
			  "name": "comment.block.ds"
			},
			"9": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"10": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"11": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"12": {
			  "name": "comment.block.ds"
			},
			"13": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"14": {
			  "name": "storage.type.modifier.calling-convention.ds"
			},
			"15": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"16": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"17": {
			  "name": "comment.block.ds"
			},
			"18": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"19": {
			  "name": "entity.name.function.constructor.ds entity.name.function.definition.special.constructor.ds"
			}
		  },
		  "endCaptures": {
		  },
		  "name": "meta.function.definition.special.constructor.ds",
		  "patterns": [
			{
			  "begin": "\\G ?",
			  "end": "(?:\\{|<%|\\?\\?<|(?=;))",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.begin.bracket.curly.function.definition.special.constructor.ds"
				}
			  },
			  "name": "meta.head.function.definition.special.constructor.ds",
			  "patterns": [
				{
				  "include": "#ever_present_context"
				},
				{
				  "match": "(\\=)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(default)|(delete))",
				  "captures": {
					"1": {
					  "name": "keyword.operator.assignment.ds"
					},
					"2": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"3": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"4": {
					  "name": "comment.block.ds"
					},
					"5": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					},
					"6": {
					  "name": "keyword.other.default.constructor.ds"
					},
					"7": {
					  "name": "keyword.other.delete.constructor.ds"
					}
				  }
				},
				{
				  "include": "#functional_specifiers_pre_parameters"
				},
				{
				  "begin": ":",
				  "end": "(?=\\{)",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.separator.initializers.ds"
					}
				  },
				  "endCaptures": {
				  },
				  "patterns": [
					{
					  "begin": "((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<3>?)+>)(?:\\s)*+)?(\\()",
					  "end": "\\)",
					  "beginCaptures": {
						"1": {
						  "name": "entity.name.function.call.initializer.ds"
						},
						"2": {
						  "name": "meta.template.call.ds",
						  "patterns": [
							{
							  "include": "#template_call_range"
							}
						  ]
						},
						"3": {
						},
						"4": {
						  "name": "punctuation.section.arguments.begin.bracket.round.function.call.initializer.ds"
						}
					  },
					  "endCaptures": {
						"0": {
						  "name": "punctuation.section.arguments.end.bracket.round.function.call.initializer.ds"
						}
					  },
					  "contentName": "meta.parameter.initialization",
					  "patterns": [
						{
						  "include": "#evaluation_context"
						}
					  ]
					},
					{
					  "begin": "((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))(\\{)",
					  "end": "\\}",
					  "beginCaptures": {
						"1": {
						  "name": "entity.name.function.call.initializer.ds"
						},
						"2": {
						  "name": "punctuation.section.arguments.begin.bracket.round.function.call.initializer.ds"
						}
					  },
					  "endCaptures": {
						"0": {
						  "name": "punctuation.section.arguments.end.bracket.round.function.call.initializer.ds"
						}
					  },
					  "contentName": "meta.parameter.initialization",
					  "patterns": [
						{
						  "include": "#evaluation_context"
						}
					  ]
					},
					{
					  "match": ",",
					  "name": "punctuation.separator.delimiter.comma.ds"
					},
					{
					  "include": "#comments"
					}
				  ]
				},
				{
				  "begin": "\\(",
				  "end": "\\)",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.section.parameters.begin.bracket.round.special.constructor.ds"
					}
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.parameters.end.bracket.round.special.constructor.ds"
					}
				  },
				  "contentName": "meta.function.definition.parameters.special.constructor",
				  "patterns": [
					{
					  "include": "#function_parameter_context"
					},
					{
					  "include": "#evaluation_context"
					}
				  ]
				},
				{
				  "match": "((?:(?:final)|(?:override)))+",
				  "captures": {
					"1": {
					  "name": "keyword.operator.$1.ds"
					}
				  }
				},
				{
				  "include": "$self"
				}
			  ]
			},
			{
			  "begin": "(?<=\\{|<%|\\?\\?<)",
			  "end": "\\}|%>|\\?\\?>",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.end.bracket.curly.function.definition.special.constructor.ds"
				}
			  },
			  "name": "meta.body.function.definition.special.constructor.ds",
			  "patterns": [
				{
				  "include": "#function_body_context"
				}
			  ]
			},
			{
			  "begin": "(?<=\\}|%>|\\?\\?>)[\\s]*",
			  "end": "[\\s]*(?=;)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "name": "meta.tail.function.definition.special.constructor.ds",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ]
			}
		  ]
		},
		"constructor_root": {
		  "begin": "\\s*+((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:__cdecl|__clrcall|__stdcall|__fastcall|__thiscall|__vectorcall)?)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<12>?)+>)(?:\\s)*+)?::)*+)(((?>(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))::((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\14((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=\\())",
		  "end": "(?:(?<=\\}|%>|\\?\\?>)|(?=[;>\\[\\]=]))",
		  "beginCaptures": {
			"0": {
			  "name": "meta.head.function.definition.special.constructor.ds"
			},
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"3": {
			  "name": "comment.block.ds"
			},
			"4": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"5": {
			  "name": "storage.type.modifier.calling-convention.ds"
			},
			"6": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"7": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"8": {
			  "name": "comment.block.ds"
			},
			"9": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"10": {
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.constructor.ds"
				},
				{
				  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
				  "name": "entity.name.scope-resolution.constructor.ds"
				},
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"12": {
			},
			"13": {
			  "patterns": [
				{
				  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?=:)",
				  "name": "entity.name.type.constructor.ds"
				},
				{
				  "match": "(?<=:)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
				  "name": "entity.name.function.definition.special.constructor.ds"
				},
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.constructor.ds"
				}
			  ]
			},
			"14": {
			},
			"15": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"16": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"17": {
			  "name": "comment.block.ds"
			},
			"18": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"19": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"20": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"21": {
			  "name": "comment.block.ds"
			},
			"22": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"23": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"24": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"25": {
			  "name": "comment.block.ds"
			},
			"26": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			}
		  },
		  "endCaptures": {
		  },
		  "name": "meta.function.definition.special.constructor.ds",
		  "patterns": [
			{
			  "begin": "\\G ?",
			  "end": "(?:\\{|<%|\\?\\?<|(?=;))",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.begin.bracket.curly.function.definition.special.constructor.ds"
				}
			  },
			  "name": "meta.head.function.definition.special.constructor.ds",
			  "patterns": [
				{
				  "include": "#ever_present_context"
				},
				{
				  "match": "(\\=)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(default)|(delete))",
				  "captures": {
					"1": {
					  "name": "keyword.operator.assignment.ds"
					},
					"2": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"3": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"4": {
					  "name": "comment.block.ds"
					},
					"5": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					},
					"6": {
					  "name": "keyword.other.default.constructor.ds"
					},
					"7": {
					  "name": "keyword.other.delete.constructor.ds"
					}
				  }
				},
				{
				  "include": "#functional_specifiers_pre_parameters"
				},
				{
				  "begin": ":",
				  "end": "(?=\\{)",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.separator.initializers.ds"
					}
				  },
				  "endCaptures": {
				  },
				  "patterns": [
					{
					  "begin": "((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<3>?)+>)(?:\\s)*+)?(\\()",
					  "end": "\\)",
					  "beginCaptures": {
						"1": {
						  "name": "entity.name.function.call.initializer.ds"
						},
						"2": {
						  "name": "meta.template.call.ds",
						  "patterns": [
							{
							  "include": "#template_call_range"
							}
						  ]
						},
						"3": {
						},
						"4": {
						  "name": "punctuation.section.arguments.begin.bracket.round.function.call.initializer.ds"
						}
					  },
					  "endCaptures": {
						"0": {
						  "name": "punctuation.section.arguments.end.bracket.round.function.call.initializer.ds"
						}
					  },
					  "contentName": "meta.parameter.initialization",
					  "patterns": [
						{
						  "include": "#evaluation_context"
						}
					  ]
					},
					{
					  "begin": "((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))(\\{)",
					  "end": "\\}",
					  "beginCaptures": {
						"1": {
						  "name": "entity.name.function.call.initializer.ds"
						},
						"2": {
						  "name": "punctuation.section.arguments.begin.bracket.round.function.call.initializer.ds"
						}
					  },
					  "endCaptures": {
						"0": {
						  "name": "punctuation.section.arguments.end.bracket.round.function.call.initializer.ds"
						}
					  },
					  "contentName": "meta.parameter.initialization",
					  "patterns": [
						{
						  "include": "#evaluation_context"
						}
					  ]
					},
					{
					  "match": ",",
					  "name": "punctuation.separator.delimiter.comma.ds"
					},
					{
					  "include": "#comments"
					}
				  ]
				},
				{
				  "begin": "\\(",
				  "end": "\\)",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.section.parameters.begin.bracket.round.special.constructor.ds"
					}
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.parameters.end.bracket.round.special.constructor.ds"
					}
				  },
				  "contentName": "meta.function.definition.parameters.special.constructor",
				  "patterns": [
					{
					  "include": "#function_parameter_context"
					},
					{
					  "include": "#evaluation_context"
					}
				  ]
				},
				{
				  "match": "((?:(?:final)|(?:override)))+",
				  "captures": {
					"1": {
					  "name": "keyword.operator.$1.ds"
					}
				  }
				},
				{
				  "include": "$self"
				}
			  ]
			},
			{
			  "begin": "(?<=\\{|<%|\\?\\?<)",
			  "end": "\\}|%>|\\?\\?>",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.end.bracket.curly.function.definition.special.constructor.ds"
				}
			  },
			  "name": "meta.body.function.definition.special.constructor.ds",
			  "patterns": [
				{
				  "include": "#function_body_context"
				}
			  ]
			},
			{
			  "begin": "(?<=\\}|%>|\\?\\?>)[\\s]*",
			  "end": "[\\s]*(?=;)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "name": "meta.tail.function.definition.special.constructor.ds",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ]
			}
		  ]
		},
		"control_flow_keywords": {
		  "match": "((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:(?:co_return)|(?:co_yield)|(?:co_await)|(?:continue)|(?:default)|(?:switch)|(?:return)|(?:catch)|(?:while)|(?:throw)|(?:break)|(?:case)|(?:goto)|(?:else)|(?:for)|(?:try)|(?:if)|(?:do))(?!\\w))",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"3": {
			  "name": "keyword.control.$3.ds"
			}
		  }
		},
		"cpp_attributes": {
		  "begin": "\\[\\[",
		  "end": "\\]\\]",
		  "beginCaptures": {
			"0": {
			  "name": "punctuation.section.attribute.begin.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.attribute.end.ds"
			}
		  },
		  "name": "support.other.attribute.ds",
		  "patterns": [
			{
			  "include": "#attributes_context"
			},
			{
			  "begin": "\\(",
			  "end": "\\)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#string_context"
				}
			  ]
			},
			{
			  "match": "(using)(?:\\s)+((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))",
			  "captures": {
				"1": {
				  "name": "keyword.other.using.directive.ds"
				},
				"2": {
				  "name": "entity.name.namespace.ds"
				}
			  }
			},
			{
			  "match": ",",
			  "name": "punctuation.separator.attribute.ds"
			},
			{
			  "match": ":",
			  "name": "punctuation.accessor.attribute.ds"
			},
			{
			  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)(?=::)",
			  "name": "entity.name.namespace.ds"
			},
			{
			  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
			  "name": "entity.other.attribute.$0.ds"
			},
			{
			  "include": "#number_literal"
			}
		  ]
		},
		"curly_initializer": {
		  "begin": "(\\s*+((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:(?:unsigned)|(?:signed)|(?:short)|(?:long))|(?:(?:struct)|(?:class)|(?:union)|(?:enum)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*((?:::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<18>?)+>)(?:\\s)*+)?::)*+)?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?!(?:(?:transaction_safe_dynamic)|(?:__has_cpp_attribute)|(?:reinterpret_cast)|(?:transaction_safe)|(?:atomic_noexcept)|(?:atomic_commit)|(?:atomic_cancel)|(?:__has_include)|(?:dynamic_cast)|(?:synchronized)|(?:thread_local)|(?:static_cast)|(?:const_cast)|(?:constexpr)|(?:consteval)|(?:co_return)|(?:co_return)|(?:constexpr)|(?:protected)|(?:constexpr)|(?:namespace)|(?:noexcept)|(?:typename)|(?:decltype)|(?:template)|(?:operator)|(?:noexcept)|(?:co_yield)|(?:co_await)|(?:continue)|(?:co_await)|(?:co_yield)|(?:volatile)|(?:register)|(?:restrict)|(?:explicit)|(?:override)|(?:volatile)|(?:reflexpr)|(?:noexcept)|(?:requires)|(?:alignas)|(?:typedef)|(?:nullptr)|(?:alignof)|(?:mutable)|(?:concept)|(?:virtual)|(?:defined)|(?:__asm__)|(?:include)|(?:_Pragma)|(?:mutable)|(?:default)|(?:warning)|(?:private)|(?:module)|(?:return)|(?:not_eq)|(?:xor_eq)|(?:and_eq)|(?:ifndef)|(?:pragma)|(?:export)|(?:import)|(?:sizeof)|(?:static)|(?:delete)|(?:public)|(?:define)|(?:extern)|(?:inline)|(?:typeid)|(?:switch)|(?:friend)|(?:bitand)|(?:false)|(?:compl)|(?:bitor)|(?:throw)|(?:or_eq)|(?:while)|(?:catch)|(?:break)|(?:const)|(?:final)|(?:const)|(?:endif)|(?:ifdef)|(?:undef)|(?:error)|(?:using)|(?:audit)|(?:axiom)|(?:line)|(?:else)|(?:elif)|(?:true)|(?:NULL)|(?:case)|(?:goto)|(?:else)|(?:this)|(?:new)|(?:asm)|(?:not)|(?:and)|(?:xor)|(?:try)|(?:for)|(?:if)|(?:do)|(?:or)|(?:if))\\b)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*\\b((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<18>?)+>)?(?![\\w<:.]))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\{)",
		  "end": "\\}",
		  "beginCaptures": {
			"1": {
			  "name": "meta.qualified_type.ds",
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.ds"
				},
				{
				  "match": "(?<!\\w)(?:(?:struct)|(?:class)|(?:union)|(?:enum))(?!\\w)",
				  "name": "storage.type.$0.ds"
				},
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#storage_types"
				},
				{
				  "include": "#number_literal"
				},
				{
				  "include": "#string_context"
				},
				{
				  "include": "#comma"
				},
				{
				  "include": "#scope_resolution_inner_generated"
				},
				{
				  "begin": "<",
				  "end": ">",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.begin.template.call.ds"
					}
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.end.template.call.ds"
					}
				  },
				  "name": "meta.template.call.ds",
				  "patterns": [
					{
					  "include": "#template_call_context"
					}
				  ]
				},
				{
				  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
				  "name": "entity.name.type.ds"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#number_literal"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"4": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"5": {
			  "name": "comment.block.ds"
			},
			"6": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"8": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"9": {
			  "name": "comment.block.ds"
			},
			"10": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.type.ds"
				},
				{
				  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
				  "name": "entity.name.scope-resolution.type.ds"
				},
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"12": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"13": {
			},
			"14": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"15": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"16": {
			  "name": "comment.block.ds"
			},
			"17": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"18": {
			},
			"19": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"20": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"21": {
			  "name": "comment.block.ds"
			},
			"22": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"23": {
			  "name": "punctuation.section.arguments.begin.bracket.curly.initializer.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.arguments.end.bracket.curly.initializer.ds"
			}
		  },
		  "name": "meta.initialization.ds",
		  "patterns": [
			{
			  "include": "#evaluation_context"
			},
			{
			  "include": "#comma"
			}
		  ]
		},
		"d9bc4796b0b_module_import": {
		  "match": "^((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((import))(?:(?:\\s)+)?(?:(?:(?:((<)[^>]*(>?)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:\\n)|$)|(?=\\/\\/)))|((\\\")[^\\\"]*((?:\\\")?)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:\\n)|$)|(?=\\/\\/))))|(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?:\\.(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*)*((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:\\n)|$)|(?=(?:\\/\\/|;)))))|((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:\\n)|$)|(?=(?:\\/\\/|;))))(?:(?:\\s)+)?(;?)",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"3": {
			  "name": "keyword.control.directive.import.ds"
			},
			"5": {
			  "name": "string.quoted.other.lt-gt.include.ds"
			},
			"6": {
			  "name": "punctuation.definition.string.begin.ds"
			},
			"7": {
			  "name": "punctuation.definition.string.end.ds"
			},
			"8": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"9": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"10": {
			  "name": "string.quoted.double.include.ds"
			},
			"11": {
			  "name": "punctuation.definition.string.begin.ds"
			},
			"12": {
			  "name": "punctuation.definition.string.end.ds"
			},
			"13": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"14": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"15": {
			  "name": "entity.name.other.preprocessor.macro.include.ds"
			},
			"16": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"17": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"18": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"19": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"20": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"21": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"22": {
			  "name": "punctuation.terminator.statement.ds"
			}
		  },
		  "name": "meta.preprocessor.import.ds"
		},
		"d9bc4796b0b_preprocessor_number_literal": {
		  "match": "(?<!\\w)\\.?\\d(?:(?:[0-9a-zA-Z_\\.]|')|(?<=[eEpP])[+-])*",
		  "captures": {
			"0": {
			  "patterns": [
				{
				  "begin": "(?=.)",
				  "end": "$",
				  "beginCaptures": {
				  },
				  "endCaptures": {
				  },
				  "patterns": [
					{
					  "match": "(\\G0[xX])([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?:(?<=[0-9a-fA-F])\\.|\\.(?=[0-9a-fA-F])))([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?(?:(?<!')([pP])((?:\\+)?)((?:\\-)?)([0-9](?:[0-9]|(?<=[0-9a-fA-F])'(?=[0-9a-fA-F]))*))?([lLfF](?!\\w))?$",
					  "captures": {
						"1": {
						  "name": "keyword.other.unit.hexadecimal.ds"
						},
						"2": {
						  "name": "constant.numeric.hexadecimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"3": {
						  "name": "punctuation.separator.constant.numeric.ds"
						},
						"4": {
						  "name": "constant.numeric.hexadecimal.ds"
						},
						"5": {
						  "name": "constant.numeric.hexadecimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"6": {
						  "name": "punctuation.separator.constant.numeric.ds"
						},
						"7": {
						  "name": "keyword.other.unit.exponent.hexadecimal.ds"
						},
						"8": {
						  "name": "keyword.operator.plus.exponent.hexadecimal.ds"
						},
						"9": {
						  "name": "keyword.operator.minus.exponent.hexadecimal.ds"
						},
						"10": {
						  "name": "constant.numeric.exponent.hexadecimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"11": {
						  "name": "keyword.other.unit.suffix.floating-point.ds"
						}
					  }
					},
					{
					  "match": "\\G(?=[0-9.])(?!0[xXbB])([0-9](?:[0-9]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?:(?<=[0-9])\\.|\\.(?=[0-9])))([0-9](?:[0-9]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?(?:(?<!')([eE])((?:\\+)?)((?:\\-)?)([0-9](?:[0-9]|(?<=[0-9a-fA-F])'(?=[0-9a-fA-F]))*))?([lLfF](?!\\w))?$",
					  "captures": {
						"1": {
						  "name": "constant.numeric.decimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"2": {
						  "name": "punctuation.separator.constant.numeric.ds"
						},
						"3": {
						  "name": "constant.numeric.decimal.point.ds"
						},
						"4": {
						  "name": "constant.numeric.decimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"5": {
						  "name": "punctuation.separator.constant.numeric.ds"
						},
						"6": {
						  "name": "keyword.other.unit.exponent.decimal.ds"
						},
						"7": {
						  "name": "keyword.operator.plus.exponent.decimal.ds"
						},
						"8": {
						  "name": "keyword.operator.minus.exponent.decimal.ds"
						},
						"9": {
						  "name": "constant.numeric.exponent.decimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"10": {
						  "name": "keyword.other.unit.suffix.floating-point.ds"
						}
					  }
					},
					{
					  "match": "(\\G0[bB])([01](?:[01]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)((?:[uU]|(?:[uU]ll?)|(?:[uU]LL?)|(?:ll?[uU]?)|(?:LL?[uU]?)|[fF])(?!\\w))?$",
					  "captures": {
						"1": {
						  "name": "keyword.other.unit.binary.ds"
						},
						"2": {
						  "name": "constant.numeric.binary.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"3": {
						  "name": "punctuation.separator.constant.numeric.ds"
						},
						"4": {
						  "name": "keyword.other.unit.suffix.integer.ds"
						}
					  }
					},
					{
					  "match": "(\\G0)((?:[0-7]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))+)((?:[uU]|(?:[uU]ll?)|(?:[uU]LL?)|(?:ll?[uU]?)|(?:LL?[uU]?)|[fF])(?!\\w))?$",
					  "captures": {
						"1": {
						  "name": "keyword.other.unit.octal.ds"
						},
						"2": {
						  "name": "constant.numeric.octal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"3": {
						  "name": "punctuation.separator.constant.numeric.ds"
						},
						"4": {
						  "name": "keyword.other.unit.suffix.integer.ds"
						}
					  }
					},
					{
					  "match": "(\\G0[xX])([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)(?:(?<!')([pP])((?:\\+)?)((?:\\-)?)([0-9](?:[0-9]|(?<=[0-9a-fA-F])'(?=[0-9a-fA-F]))*))?((?:[uU]|(?:[uU]ll?)|(?:[uU]LL?)|(?:ll?[uU]?)|(?:LL?[uU]?)|[fF])(?!\\w))?$",
					  "captures": {
						"1": {
						  "name": "keyword.other.unit.hexadecimal.ds"
						},
						"2": {
						  "name": "constant.numeric.hexadecimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"3": {
						  "name": "punctuation.separator.constant.numeric.ds"
						},
						"4": {
						  "name": "keyword.other.unit.exponent.hexadecimal.ds"
						},
						"5": {
						  "name": "keyword.operator.plus.exponent.hexadecimal.ds"
						},
						"6": {
						  "name": "keyword.operator.minus.exponent.hexadecimal.ds"
						},
						"7": {
						  "name": "constant.numeric.exponent.hexadecimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"8": {
						  "name": "keyword.other.unit.suffix.integer.ds"
						}
					  }
					},
					{
					  "match": "\\G(?=[0-9.])(?!0[xXbB])([0-9](?:[0-9]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)(?:(?<!')([eE])((?:\\+)?)((?:\\-)?)([0-9](?:[0-9]|(?<=[0-9a-fA-F])'(?=[0-9a-fA-F]))*))?((?:[uU]|(?:[uU]ll?)|(?:[uU]LL?)|(?:ll?[uU]?)|(?:LL?[uU]?)|[fF])(?!\\w))?$",
					  "captures": {
						"1": {
						  "name": "constant.numeric.decimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"2": {
						  "name": "punctuation.separator.constant.numeric.ds"
						},
						"3": {
						  "name": "keyword.other.unit.exponent.decimal.ds"
						},
						"4": {
						  "name": "keyword.operator.plus.exponent.decimal.ds"
						},
						"5": {
						  "name": "keyword.operator.minus.exponent.decimal.ds"
						},
						"6": {
						  "name": "constant.numeric.exponent.decimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"7": {
						  "name": "keyword.other.unit.suffix.integer.ds"
						}
					  }
					},
					{
					  "match": "(?:(?:[0-9a-zA-Z_\\.]|')|(?<=[eEpP])[+-])+",
					  "name": "invalid.illegal.constant.numeric.ds"
					}
				  ]
				}
			  ]
			}
		  }
		},
		"decltype": {
		  "begin": "((?<!\\w)decltype(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()",
		  "end": "\\)",
		  "beginCaptures": {
			"1": {
			  "name": "keyword.operator.functionlike.ds keyword.other.decltype.ds storage.type.decltype.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"4": {
			  "name": "comment.block.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"6": {
			  "name": "punctuation.section.arguments.begin.bracket.round.decltype.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.arguments.end.bracket.round.decltype.ds"
			}
		  },
		  "contentName": "meta.arguments.decltype",
		  "patterns": [
			{
			  "include": "#evaluation_context"
			}
		  ]
		},
		"decltype_specifier": {
		  "begin": "((?<!\\w)decltype(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()",
		  "end": "\\)",
		  "beginCaptures": {
			"1": {
			  "name": "keyword.operator.functionlike.ds keyword.other.decltype.ds storage.type.decltype.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"4": {
			  "name": "comment.block.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"6": {
			  "name": "punctuation.section.arguments.begin.bracket.round.decltype.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.arguments.end.bracket.round.decltype.ds"
			}
		  },
		  "contentName": "meta.arguments.decltype",
		  "patterns": [
			{
			  "include": "#evaluation_context"
			}
		  ]
		},
		"default_statement": {
		  "begin": "((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)default(?!\\w))",
		  "end": ":",
		  "beginCaptures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"3": {
			  "name": "comment.block.ds"
			},
			"4": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"5": {
			  "name": "keyword.control.default.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.separator.colon.case.default.ds"
			}
		  },
		  "name": "meta.conditional.case.ds",
		  "patterns": [
			{
			  "include": "#evaluation_context"
			},
			{
			  "include": "#c_conditional_context"
			}
		  ]
		},
		"destructor_inline": {
		  "begin": "^((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:__cdecl|__clrcall|__stdcall|__fastcall|__thiscall|__vectorcall)?)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:(?:(?:constexpr)|(?:explicit)|(?:mutable)|(?:virtual)|(?:inline)|(?:friend))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*)(~(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)(?=\\())",
		  "end": "(?:(?<=\\}|%>|\\?\\?>)|(?=[;>\\[\\]=]))",
		  "beginCaptures": {
			"0": {
			  "name": "meta.head.function.definition.special.member.destructor.ds"
			},
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"3": {
			  "name": "comment.block.ds"
			},
			"4": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"5": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"6": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"7": {
			  "name": "comment.block.ds"
			},
			"8": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"9": {
			  "name": "storage.type.modifier.calling-convention.ds"
			},
			"10": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"11": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"12": {
			  "name": "comment.block.ds"
			},
			"13": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"14": {
			  "patterns": [
				{
				  "include": "#functional_specifiers_pre_parameters"
				}
			  ]
			},
			"15": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"16": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"17": {
			  "name": "comment.block.ds"
			},
			"18": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"19": {
			  "name": "entity.name.function.destructor.ds entity.name.function.definition.special.member.destructor.ds"
			}
		  },
		  "endCaptures": {
		  },
		  "name": "meta.function.definition.special.member.destructor.ds",
		  "patterns": [
			{
			  "begin": "\\G ?",
			  "end": "(?:\\{|<%|\\?\\?<|(?=;))",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.begin.bracket.curly.function.definition.special.member.destructor.ds"
				}
			  },
			  "name": "meta.head.function.definition.special.member.destructor.ds",
			  "patterns": [
				{
				  "include": "#ever_present_context"
				},
				{
				  "match": "(\\=)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(default)|(delete))",
				  "captures": {
					"1": {
					  "name": "keyword.operator.assignment.ds"
					},
					"2": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"3": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"4": {
					  "name": "comment.block.ds"
					},
					"5": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					},
					"6": {
					  "name": "keyword.other.default.constructor.ds"
					},
					"7": {
					  "name": "keyword.other.delete.constructor.ds"
					}
				  }
				},
				{
				  "begin": "\\(",
				  "end": "\\)",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.section.parameters.begin.bracket.round.special.member.destructor.ds"
					}
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.parameters.end.bracket.round.special.member.destructor.ds"
					}
				  },
				  "contentName": "meta.function.definition.parameters.special.member.destructor",
				  "patterns": [
	
				  ]
				},
				{
				  "match": "((?:(?:final)|(?:override)))+",
				  "captures": {
					"1": {
					  "name": "keyword.operator.wordlike.ds keyword.operator.$1.ds"
					}
				  }
				},
				{
				  "include": "$self"
				}
			  ]
			},
			{
			  "begin": "(?<=\\{|<%|\\?\\?<)",
			  "end": "\\}|%>|\\?\\?>",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.end.bracket.curly.function.definition.special.member.destructor.ds"
				}
			  },
			  "name": "meta.body.function.definition.special.member.destructor.ds",
			  "patterns": [
				{
				  "include": "#function_body_context"
				}
			  ]
			},
			{
			  "begin": "(?<=\\}|%>|\\?\\?>)[\\s]*",
			  "end": "[\\s]*(?=;)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "name": "meta.tail.function.definition.special.member.destructor.ds",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ]
			}
		  ]
		},
		"destructor_root": {
		  "begin": "((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:__cdecl|__clrcall|__stdcall|__fastcall|__thiscall|__vectorcall)?)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<12>?)+>)(?:\\s)*+)?::)*+)(((?>(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))::((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))~\\14((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=\\())",
		  "end": "(?:(?<=\\}|%>|\\?\\?>)|(?=[;>\\[\\]=]))",
		  "beginCaptures": {
			"0": {
			  "name": "meta.head.function.definition.special.member.destructor.ds"
			},
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"3": {
			  "name": "comment.block.ds"
			},
			"4": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"5": {
			  "name": "storage.type.modifier.calling-convention.ds"
			},
			"6": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"7": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"8": {
			  "name": "comment.block.ds"
			},
			"9": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"10": {
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.destructor.ds"
				},
				{
				  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
				  "name": "entity.name.scope-resolution.destructor.ds"
				},
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"12": {
			},
			"13": {
			  "patterns": [
				{
				  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?=:)",
				  "name": "entity.name.type.destructor.ds"
				},
				{
				  "match": "(?<=:)~(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
				  "name": "entity.name.function.definition.special.member.destructor.ds"
				},
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.destructor.ds"
				}
			  ]
			},
			"14": {
			},
			"15": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"16": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"17": {
			  "name": "comment.block.ds"
			},
			"18": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"19": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"20": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"21": {
			  "name": "comment.block.ds"
			},
			"22": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"23": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"24": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"25": {
			  "name": "comment.block.ds"
			},
			"26": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			}
		  },
		  "endCaptures": {
		  },
		  "name": "meta.function.definition.special.member.destructor.ds",
		  "patterns": [
			{
			  "begin": "\\G ?",
			  "end": "(?:\\{|<%|\\?\\?<|(?=;))",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.begin.bracket.curly.function.definition.special.member.destructor.ds"
				}
			  },
			  "name": "meta.head.function.definition.special.member.destructor.ds",
			  "patterns": [
				{
				  "include": "#ever_present_context"
				},
				{
				  "match": "(\\=)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(default)|(delete))",
				  "captures": {
					"1": {
					  "name": "keyword.operator.assignment.ds"
					},
					"2": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"3": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"4": {
					  "name": "comment.block.ds"
					},
					"5": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					},
					"6": {
					  "name": "keyword.other.default.constructor.ds"
					},
					"7": {
					  "name": "keyword.other.delete.constructor.ds"
					}
				  }
				},
				{
				  "begin": "\\(",
				  "end": "\\)",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.section.parameters.begin.bracket.round.special.member.destructor.ds"
					}
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.parameters.end.bracket.round.special.member.destructor.ds"
					}
				  },
				  "contentName": "meta.function.definition.parameters.special.member.destructor",
				  "patterns": [
	
				  ]
				},
				{
				  "match": "((?:(?:final)|(?:override)))+",
				  "captures": {
					"1": {
					  "name": "keyword.operator.wordlike.ds keyword.operator.$1.ds"
					}
				  }
				},
				{
				  "include": "$self"
				}
			  ]
			},
			{
			  "begin": "(?<=\\{|<%|\\?\\?<)",
			  "end": "\\}|%>|\\?\\?>",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.end.bracket.curly.function.definition.special.member.destructor.ds"
				}
			  },
			  "name": "meta.body.function.definition.special.member.destructor.ds",
			  "patterns": [
				{
				  "include": "#function_body_context"
				}
			  ]
			},
			{
			  "begin": "(?<=\\}|%>|\\?\\?>)[\\s]*",
			  "end": "[\\s]*(?=;)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "name": "meta.tail.function.definition.special.member.destructor.ds",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ]
			}
		  ]
		},
		"diagnostic": {
		  "begin": "(^((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(#)(?:(?:\\s)+)?((?:error|warning)))\\b(?:(?:\\s)+)?",
		  "end": "(?<!\\\\)(?=\\n)",
		  "beginCaptures": {
			"1": {
			  "name": "keyword.control.directive.diagnostic.$7.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"4": {
			  "name": "comment.block.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"6": {
			  "name": "punctuation.definition.directive.ds"
			},
			"7": {
			}
		  },
		  "endCaptures": {
		  },
		  "name": "meta.preprocessor.diagnostic.$reference(directive).ds",
		  "patterns": [
			{
			  "begin": "\"",
			  "end": "(?:(\")|(?<!\\\\)(?=\\n))",
			  "beginCaptures": {
				"0": {
				  "name": "punctuation.definition.string.begin.ds"
				}
			  },
			  "endCaptures": {
				"1": {
				  "name": "punctuation.definition.string.end.ds"
				}
			  },
			  "name": "string.quoted.double.ds",
			  "patterns": [
				{
				  "include": "#line_continuation_character"
				}
			  ]
			},
			{
			  "begin": "'",
			  "end": "(?:(')|(?<!\\\\)(?=\\n))",
			  "beginCaptures": {
				"0": {
				  "name": "punctuation.definition.string.begin.ds"
				}
			  },
			  "endCaptures": {
				"1": {
				  "name": "punctuation.definition.string.end.ds"
				}
			  },
			  "name": "string.quoted.single.ds",
			  "patterns": [
				{
				  "include": "#line_continuation_character"
				}
			  ]
			},
			{
			  "begin": "[^'\"]",
			  "end": "(?<!\\\\)(?=\\n)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "name": "string.unquoted.ds",
			  "patterns": [
				{
				  "include": "#line_continuation_character"
				},
				{
				  "include": "#comments"
				}
			  ]
			}
		  ]
		},
		"emacs_file_banner": {
		  "match": "(?:(^(?:(?:\\s)+)?((\\/\\/)(?:(?:\\s)+)?((?:[#;\\/=*C~]+)++(?![#;\\/=*C~]))(?:(?:\\s)+)?.+(?:(?:\\s)+)?\\4(?:(?:\\s)+)?(?:\\n|$)))|(^(?:(?:\\s)+)?((\\/\\*)(?:(?:\\s)+)?((?:[#;\\/=*C~]+)++(?![#;\\/=*C~]))(?:(?:\\s)+)?.+(?:(?:\\s)+)?\\8(?:(?:\\s)+)?\\*\\/)))",
		  "captures": {
			"1": {
			  "name": "meta.toc-list.banner.double-slash.ds"
			},
			"2": {
			  "name": "comment.line.double-slash.ds"
			},
			"3": {
			  "name": "punctuation.definition.comment.ds"
			},
			"4": {
			  "name": "meta.banner.character.ds"
			},
			"5": {
			  "name": "meta.toc-list.banner.block.ds"
			},
			"6": {
			  "name": "comment.line.banner.ds"
			},
			"7": {
			  "name": "punctuation.definition.comment.ds"
			},
			"8": {
			  "name": "meta.banner.character.ds"
			}
		  }
		},
		"empty_square_brackets": {
		  "name": "storage.modifier.array.bracket.square",
		  "match": "(?<!delete)\\[(?:(?:\\s)+)?\\]"
		},
		"enum_block": {
		  "begin": "((?<!\\w)enum(?!\\w))(?:(?:\\s)+(class|struct))?(?:(?:(?:\\s)+|((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\))))|(?={))(?:(?:\\s)+)?((?:(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))?)(?:(?:(?:\\s)+)?(:)(?:(?:\\s)+)?(?:((::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<12>?)+>)(?:\\s)*+)?::)*\\s*+)((?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<12>?)+>)(?:\\s)*+)?(::))?(?:(?:\\s)+)?((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)))?",
		  "end": "(?:(?:(?<=\\}|%>|\\?\\?>)(?:(?:\\s)+)?(;)|(;))|(?=[;>\\[\\]=]))",
		  "beginCaptures": {
			"0": {
			  "name": "meta.head.enum.ds"
			},
			"1": {
			  "name": "storage.type.enum.ds"
			},
			"2": {
			  "name": "storage.type.enum.enum-key.$2.ds"
			},
			"3": {
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#number_literal"
				}
			  ]
			},
			"4": {
			  "name": "entity.name.type.enum.ds"
			},
			"5": {
			  "name": "punctuation.separator.colon.type-specifier.ds"
			},
			"6": {
			  "patterns": [
				{
				  "include": "#scope_resolution_inner_generated"
				}
			  ]
			},
			"7": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.ds"
			},
			"8": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"9": {
			},
			"10": {
			  "name": "entity.name.scope-resolution.ds"
			},
			"11": {
			  "name": "meta.template.call.ds",
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"12": {
			},
			"13": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.ds"
			},
			"14": {
			  "name": "storage.type.integral.$14.ds"
			}
		  },
		  "endCaptures": {
			"1": {
			  "name": "punctuation.terminator.statement.ds"
			},
			"2": {
			  "name": "punctuation.terminator.statement.ds"
			}
		  },
		  "name": "meta.block.enum.ds",
		  "patterns": [
			{
			  "begin": "\\G ?",
			  "end": "(?:\\{|<%|\\?\\?<|(?=;))",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.begin.bracket.curly.enum.ds"
				}
			  },
			  "name": "meta.head.enum.ds",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ]
			},
			{
			  "begin": "(?<=\\{|<%|\\?\\?<)",
			  "end": "\\}|%>|\\?\\?>",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.end.bracket.curly.enum.ds"
				}
			  },
			  "name": "meta.body.enum.ds",
			  "patterns": [
				{
				  "include": "#ever_present_context"
				},
				{
				  "include": "#enumerator_list"
				},
				{
				  "include": "#comments"
				},
				{
				  "include": "#comma"
				},
				{
				  "include": "#semicolon"
				}
			  ]
			},
			{
			  "begin": "(?<=\\}|%>|\\?\\?>)[\\s]*",
			  "end": "[\\s]*(?=;)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "name": "meta.tail.enum.ds",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ]
			}
		  ]
		},
		"enum_declare": {
		  "match": "((?<!\\w)enum(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\b(?!override\\W|override\\$|final\\W|final\\$)((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=\\S)(?![:{a-zA-Z])",
		  "captures": {
			"1": {
			  "name": "storage.type.enum.declare.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"4": {
			  "name": "entity.name.type.enum.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*",
				  "name": "storage.modifier.pointer.ds"
				},
				{
				  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  },
				  "name": "invalid.illegal.reference-type.ds"
				},
				{
				  "match": "\\&",
				  "name": "storage.modifier.reference.ds"
				}
			  ]
			},
			"6": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"8": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"9": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"10": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"12": {
			  "name": "variable.other.object.declare.ds"
			},
			"13": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"14": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			}
		  }
		},
		"enumerator_list": {
		  "match": "((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))(?:(?:\\s)+)?((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))?(?:(?:\\s)+)?(?:(\\=)(?:(?:\\s)+)?(.+?)(?:(?:\\s)+)?)?(?:(?:((?:[,;](?!')|\\n))|(?=\\}[^']))|(?=(?:\\/\\/|\\/\\*)))",
		  "captures": {
			"1": {
			  "name": "variable.other.enummember.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#number_literal"
				}
			  ]
			},
			"3": {
			  "name": "keyword.operator.assignment.ds"
			},
			"4": {
			  "patterns": [
				{
				  "include": "#evaluation_context"
				}
			  ]
			},
			"5": {
			  "patterns": [
				{
				  "include": "#comma"
				},
				{
				  "include": "#semicolon"
				}
			  ]
			}
		  },
		  "name": "meta.enum.definition.ds"
		},
		"evaluation_context": {
		  "patterns": [
			{
			  "include": "#ever_present_context"
			},
			{
			  "include": "#string_context"
			},
			{
			  "include": "#number_literal"
			},
			{
			  "include": "#method_access"
			},
			{
			  "include": "#member_access"
			},
			{
			  "include": "#predefined_macros"
			},
			{
			  "include": "#operators"
			},
			{
			  "include": "#memory_operators"
			},
			{
			  "include": "#wordlike_operators"
			},
			{
			  "include": "#type_casting_operators"
			},
			{
			  "include": "#control_flow_keywords"
			},
			{
			  "include": "#exception_keywords"
			},
			{
			  "include": "#the_this_keyword"
			},
			{
			  "include": "#language_constants"
			},
			{
			  "include": "#builtin_storage_type_initilizer"
			},
			{
			  "include": "#qualifiers_and_specifiers_post_parameters"
			},
			{
			  "include": "#functional_specifiers_pre_parameters"
			},
			{
			  "include": "#storage_types"
			},
			{
			  "include": "#lambdas"
			},
			{
			  "include": "#attributes_context"
			},
			{
			  "include": "#parentheses"
			},
			{
			  "include": "#function_call"
			},
			{
			  "include": "#scope_resolution_inner_generated"
			},
			{
			  "include": "#square_brackets"
			},
			{
			  "include": "#semicolon"
			},
			{
			  "include": "#comma"
			}
		  ]
		},
		"ever_present_context": {
		  "patterns": [
			{
			  "include": "#pragma_mark"
			},
			{
			  "include": "#pragma"
			},
			{
			  "include": "#include"
			},
			{
			  "include": "#line"
			},
			{
			  "include": "#diagnostic"
			},
			{
			  "include": "#undef"
			},
			{
			  "include": "#preprocessor_conditional_range"
			},
			{
			  "include": "#single_line_macro"
			},
			{
			  "include": "#macro"
			},
			{
			  "include": "#preprocessor_conditional_standalone"
			},
			{
			  "include": "#macro_argument"
			},
			{
			  "include": "#comments"
			},
			{
			  "include": "#line_continuation_character"
			}
		  ]
		},
		"exception_keywords": {
		  "match": "((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:(?:throw)|(?:catch)|(?:try))(?!\\w))",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"3": {
			  "name": "keyword.control.exception.$3.ds"
			}
		  }
		},
		"extern_block": {
		  "begin": "((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(extern)(?=\\s*\\\")",
		  "end": "(?:(?:(?<=\\}|%>|\\?\\?>)(?:(?:\\s)+)?(;)|(;))|(?=[;>\\[\\]=]))",
		  "beginCaptures": {
			"0": {
			  "name": "meta.head.extern.ds"
			},
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"3": {
			  "name": "comment.block.ds"
			},
			"4": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"5": {
			  "name": "storage.type.extern.ds"
			}
		  },
		  "endCaptures": {
			"1": {
			  "name": "punctuation.terminator.statement.ds"
			},
			"2": {
			  "name": "punctuation.terminator.statement.ds"
			}
		  },
		  "name": "meta.block.extern.ds",
		  "patterns": [
			{
			  "begin": "\\G ?",
			  "end": "(?:\\{|<%|\\?\\?<|(?=;))",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.begin.bracket.curly.extern.ds"
				}
			  },
			  "name": "meta.head.extern.ds",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ]
			},
			{
			  "begin": "(?<=\\{|<%|\\?\\?<)",
			  "end": "\\}|%>|\\?\\?>",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.end.bracket.curly.extern.ds"
				}
			  },
			  "name": "meta.body.extern.ds",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ]
			},
			{
			  "begin": "(?<=\\}|%>|\\?\\?>)[\\s]*",
			  "end": "[\\s]*(?=;)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "name": "meta.tail.extern.ds",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ]
			},
			{
			  "include": "$self"
			}
		  ]
		},
		"function_body_context": {
		  "patterns": [
			{
			  "include": "#ever_present_context"
			},
			{
			  "include": "#using_namespace"
			},
			{
			  "include": "#type_alias"
			},
			{
			  "include": "#using_name"
			},
			{
			  "include": "#namespace_alias"
			},
			{
			  "include": "#typedef_class"
			},
			{
			  "include": "#typedef_struct"
			},
			{
			  "include": "#typedef_union"
			},
			{
			  "include": "#misc_keywords"
			},
			{
			  "include": "#standard_declares"
			},
			{
			  "include": "#class_block"
			},
			{
			  "include": "#struct_block"
			},
			{
			  "include": "#union_block"
			},
			{
			  "include": "#enum_block"
			},
			{
			  "include": "#access_control_keywords"
			},
			{
			  "include": "#block"
			},
			{
			  "include": "#static_assert"
			},
			{
			  "include": "#assembly"
			},
			{
			  "include": "#function_pointer"
			},
			{
			  "include": "#switch_statement"
			},
			{
			  "include": "#goto_statement"
			},
			{
			  "include": "#evaluation_context"
			},
			{
			  "include": "#label"
			}
		  ]
		},
		"function_call": {
		  "begin": "((::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<11>?)+>)(?:\\s)*+)?::)*\\s*+)((?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*)\\b(?<!\\Wreinterpret_cast|^reinterpret_cast|\\Watomic_noexcept|^atomic_noexcept|\\Wuint_least16_t|^uint_least16_t|\\Wuint_least32_t|^uint_least32_t|\\Wuint_least64_t|^uint_least64_t|\\Wuint_fast16_t|^uint_fast16_t|\\Wint_least16_t|^int_least16_t|\\Watomic_commit|^atomic_commit|\\Watomic_cancel|^atomic_cancel|\\Wuint_fast64_t|^uint_fast64_t|\\Wuint_least8_t|^uint_least8_t|\\Wint_least64_t|^int_least64_t|\\Wint_least32_t|^int_least32_t|\\Wuint_fast32_t|^uint_fast32_t|\\Wdynamic_cast|^dynamic_cast|\\Wthread_local|^thread_local|\\Wuint_fast8_t|^uint_fast8_t|\\Wint_fast64_t|^int_fast64_t|\\Wint_fast32_t|^int_fast32_t|\\Wint_fast16_t|^int_fast16_t|\\Wsynchronized|^synchronized|\\Wint_least8_t|^int_least8_t|\\Wsuseconds_t|^suseconds_t|\\Wint_fast8_t|^int_fast8_t|\\Wstatic_cast|^static_cast|\\Wconst_cast|^const_cast|\\Wuseconds_t|^useconds_t|\\Wnamespace|^namespace|\\Wco_return|^co_return|\\Wblksize_t|^blksize_t|\\Win_addr_t|^in_addr_t|\\Win_port_t|^in_port_t|\\Wuintptr_t|^uintptr_t|\\Wuintmax_t|^uintmax_t|\\Wuintmax_t|^uintmax_t|\\Wuintmax_t|^uintmax_t|\\Wconstexpr|^constexpr|\\Wconstexpr|^constexpr|\\Wconstexpr|^constexpr|\\Wconsteval|^consteval|\\Wprotected|^protected|\\Wco_return|^co_return|\\Wco_await|^co_await|\\Wnoexcept|^noexcept|\\Wrestrict|^restrict|\\Wnoexcept|^noexcept|\\Wdecltype|^decltype|\\Wintmax_t|^intmax_t|\\Wuint64_t|^uint64_t|\\Wintmax_t|^intmax_t|\\Wcontinue|^continue|\\Wreflexpr|^reflexpr|\\Wintptr_t|^intptr_t|\\Wuint32_t|^uint32_t|\\Wuint16_t|^uint16_t|\\Wexplicit|^explicit|\\Wtypename|^typename|\\Wu_quad_t|^u_quad_t|\\Wvolatile|^volatile|\\Wtemplate|^template|\\Wnoexcept|^noexcept|\\Wco_yield|^co_yield|\\Wco_await|^co_await|\\Wvolatile|^volatile|\\Woperator|^operator|\\Wunsigned|^unsigned|\\Wregister|^register|\\Wblkcnt_t|^blkcnt_t|\\Wrequires|^requires|\\Wco_yield|^co_yield|\\Wnullptr|^nullptr|\\Wqaddr_t|^qaddr_t|\\Wcaddr_t|^caddr_t|\\Wmutable|^mutable|\\Wvirtual|^virtual|\\Wmutable|^mutable|\\Wdaddr_t|^daddr_t|\\Wfixpt_t|^fixpt_t|\\Wconcept|^concept|\\Wnlink_t|^nlink_t|\\Wdefault|^default|\\Wwchar_t|^wchar_t|\\Wsegsz_t|^segsz_t|\\Wswblk_t|^swblk_t|\\Wclock_t|^clock_t|\\Wssize_t|^ssize_t|\\W__asm__|^__asm__|\\Wint16_t|^int16_t|\\Wint32_t|^int32_t|\\Wint64_t|^int64_t|\\Wuint8_t|^uint8_t|\\Wu_short|^u_short|\\Walignas|^alignas|\\Walignof|^alignof|\\Wtypedef|^typedef|\\Wprivate|^private|\\Wu_char|^u_char|\\Wmode_t|^mode_t|\\Wstatic|^static|\\Wdouble|^double|\\Wnot_eq|^not_eq|\\Wtypeid|^typeid|\\Wmodule|^module|\\Wstruct|^struct|\\Wexport|^export|\\Wxor_eq|^xor_eq|\\Wand_eq|^and_eq|\\Wu_long|^u_long|\\Wquad_t|^quad_t|\\Wsigned|^signed|\\Wushort|^ushort|\\Wimport|^import|\\Wbitand|^bitand|\\Wfriend|^friend|\\Wtime_t|^time_t|\\Wdelete|^delete|\\Wsize_t|^size_t|\\Wint8_t|^int8_t|\\Winline|^inline|\\Wextern|^extern|\\Wpublic|^public|\\Wsizeof|^sizeof|\\Wswitch|^switch|\\Wreturn|^return|\\Wconst|^const|\\Wshort|^short|\\Wfloat|^float|\\Wu_int|^u_int|\\Wdiv_t|^div_t|\\Wdev_t|^dev_t|\\Wgid_t|^gid_t|\\Wino_t|^ino_t|\\Wkey_t|^key_t|\\Wpid_t|^pid_t|\\Woff_t|^off_t|\\Wuid_t|^uid_t|\\Wwhile|^while|\\Wor_eq|^or_eq|\\Wthrow|^throw|\\Wbitor|^bitor|\\Wfalse|^false|\\Wclass|^class|\\Wunion|^union|\\Wconst|^const|\\Wcompl|^compl|\\Wusing|^using|\\Wcatch|^catch|\\Wbreak|^break|\\Wtrue|^true|\\Wid_t|^id_t|\\Wchar|^char|\\Wid_t|^id_t|\\Wauto|^auto|\\Wcase|^case|\\Wuint|^uint|\\Wbool|^bool|\\Wlong|^long|\\Wvoid|^void|\\Wenum|^enum|\\WNULL|^NULL|\\Wthis|^this|\\Welse|^else|\\Wgoto|^goto|\\Wnew|^new|\\Wtry|^try|\\Wxor|^xor|\\Wnot|^not|\\Wint|^int|\\Wand|^and|\\Wfor|^for|\\Wasm|^asm|\\Wdo|^do|\\Wor|^or|\\Wif|^if)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<11>?)+>)(?:\\s)*+)?(\\()",
		  "end": "\\)",
		  "beginCaptures": {
			"1": {
			  "patterns": [
				{
				  "include": "#scope_resolution_function_call_inner_generated"
				}
			  ]
			},
			"2": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.function.call.ds"
			},
			"3": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"4": {
			},
			"5": {
			  "name": "entity.name.function.call.ds"
			},
			"6": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"7": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"8": {
			  "name": "comment.block.ds"
			},
			"9": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"10": {
			  "name": "meta.template.call.ds",
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"11": {
			},
			"12": {
			  "name": "punctuation.section.arguments.begin.bracket.round.function.call.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.arguments.end.bracket.round.function.call.ds"
			}
		  },
		  "patterns": [
			{
			  "include": "#evaluation_context"
			}
		  ]
		},
		"function_definition": {
		  "begin": "(?:(?:^|\\G|(?<=;|\\}))|(?<=>))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:((?<!\\w)template(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))?((?:((?<!\\w)(?:(?:(?:constexpr)|(?:explicit)|(?:mutable)|(?:virtual)|(?:inline)|(?:friend))|(?:(?:volatile)|(?:register)|(?:restrict)|(?:static)|(?:extern)|(?:const)))(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*)(\\s*+((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:(?:unsigned)|(?:signed)|(?:short)|(?:long))|(?:(?:struct)|(?:class)|(?:union)|(?:enum)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*((?:::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<60>?)+>)(?:\\s)*+)?::)*+)?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?!(?:(?:transaction_safe_dynamic)|(?:__has_cpp_attribute)|(?:reinterpret_cast)|(?:transaction_safe)|(?:atomic_noexcept)|(?:atomic_commit)|(?:atomic_cancel)|(?:__has_include)|(?:dynamic_cast)|(?:synchronized)|(?:thread_local)|(?:static_cast)|(?:const_cast)|(?:constexpr)|(?:consteval)|(?:co_return)|(?:co_return)|(?:constexpr)|(?:protected)|(?:constexpr)|(?:namespace)|(?:noexcept)|(?:typename)|(?:decltype)|(?:template)|(?:operator)|(?:noexcept)|(?:co_yield)|(?:co_await)|(?:continue)|(?:co_await)|(?:co_yield)|(?:volatile)|(?:register)|(?:restrict)|(?:explicit)|(?:override)|(?:volatile)|(?:reflexpr)|(?:noexcept)|(?:requires)|(?:alignas)|(?:typedef)|(?:nullptr)|(?:alignof)|(?:mutable)|(?:concept)|(?:virtual)|(?:defined)|(?:__asm__)|(?:include)|(?:_Pragma)|(?:mutable)|(?:default)|(?:warning)|(?:private)|(?:module)|(?:return)|(?:not_eq)|(?:xor_eq)|(?:and_eq)|(?:ifndef)|(?:pragma)|(?:export)|(?:import)|(?:sizeof)|(?:static)|(?:delete)|(?:public)|(?:define)|(?:extern)|(?:inline)|(?:typeid)|(?:switch)|(?:friend)|(?:bitand)|(?:false)|(?:compl)|(?:bitor)|(?:throw)|(?:or_eq)|(?:while)|(?:catch)|(?:break)|(?:const)|(?:final)|(?:const)|(?:endif)|(?:ifdef)|(?:undef)|(?:error)|(?:using)|(?:audit)|(?:axiom)|(?:line)|(?:else)|(?:elif)|(?:true)|(?:NULL)|(?:case)|(?:goto)|(?:else)|(?:this)|(?:new)|(?:asm)|(?:not)|(?:and)|(?:xor)|(?:try)|(?:for)|(?:if)|(?:do)|(?:or)|(?:if))\\b)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*\\b((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<60>?)+>)?(?![\\w<:.]))(((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:__cdecl|__clrcall|__stdcall|__fastcall|__thiscall|__vectorcall)?)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<60>?)+>)(?:\\s)*+)?::)*\\s*+)((?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*)\\b(?<!\\Wreinterpret_cast|^reinterpret_cast|\\Watomic_noexcept|^atomic_noexcept|\\Wuint_least16_t|^uint_least16_t|\\Wuint_least32_t|^uint_least32_t|\\Wuint_least64_t|^uint_least64_t|\\Wuint_fast16_t|^uint_fast16_t|\\Wint_least16_t|^int_least16_t|\\Watomic_commit|^atomic_commit|\\Watomic_cancel|^atomic_cancel|\\Wuint_fast64_t|^uint_fast64_t|\\Wuint_least8_t|^uint_least8_t|\\Wint_least64_t|^int_least64_t|\\Wint_least32_t|^int_least32_t|\\Wuint_fast32_t|^uint_fast32_t|\\Wdynamic_cast|^dynamic_cast|\\Wthread_local|^thread_local|\\Wuint_fast8_t|^uint_fast8_t|\\Wint_fast64_t|^int_fast64_t|\\Wint_fast32_t|^int_fast32_t|\\Wint_fast16_t|^int_fast16_t|\\Wsynchronized|^synchronized|\\Wint_least8_t|^int_least8_t|\\Wsuseconds_t|^suseconds_t|\\Wint_fast8_t|^int_fast8_t|\\Wstatic_cast|^static_cast|\\Wconst_cast|^const_cast|\\Wuseconds_t|^useconds_t|\\Wnamespace|^namespace|\\Wco_return|^co_return|\\Wblksize_t|^blksize_t|\\Win_addr_t|^in_addr_t|\\Win_port_t|^in_port_t|\\Wuintptr_t|^uintptr_t|\\Wuintmax_t|^uintmax_t|\\Wuintmax_t|^uintmax_t|\\Wuintmax_t|^uintmax_t|\\Wconstexpr|^constexpr|\\Wconstexpr|^constexpr|\\Wconstexpr|^constexpr|\\Wconsteval|^consteval|\\Wprotected|^protected|\\Wco_return|^co_return|\\Wco_await|^co_await|\\Wnoexcept|^noexcept|\\Wrestrict|^restrict|\\Wnoexcept|^noexcept|\\Wdecltype|^decltype|\\Wintmax_t|^intmax_t|\\Wuint64_t|^uint64_t|\\Wintmax_t|^intmax_t|\\Wcontinue|^continue|\\Wreflexpr|^reflexpr|\\Wintptr_t|^intptr_t|\\Wuint32_t|^uint32_t|\\Wuint16_t|^uint16_t|\\Wexplicit|^explicit|\\Wtypename|^typename|\\Wu_quad_t|^u_quad_t|\\Wvolatile|^volatile|\\Wtemplate|^template|\\Wnoexcept|^noexcept|\\Wco_yield|^co_yield|\\Wco_await|^co_await|\\Wvolatile|^volatile|\\Woperator|^operator|\\Wunsigned|^unsigned|\\Wregister|^register|\\Wblkcnt_t|^blkcnt_t|\\Wrequires|^requires|\\Wco_yield|^co_yield|\\Wnullptr|^nullptr|\\Wqaddr_t|^qaddr_t|\\Wcaddr_t|^caddr_t|\\Wmutable|^mutable|\\Wvirtual|^virtual|\\Wmutable|^mutable|\\Wdaddr_t|^daddr_t|\\Wfixpt_t|^fixpt_t|\\Wconcept|^concept|\\Wnlink_t|^nlink_t|\\Wdefault|^default|\\Wwchar_t|^wchar_t|\\Wsegsz_t|^segsz_t|\\Wswblk_t|^swblk_t|\\Wclock_t|^clock_t|\\Wssize_t|^ssize_t|\\W__asm__|^__asm__|\\Wint16_t|^int16_t|\\Wint32_t|^int32_t|\\Wint64_t|^int64_t|\\Wuint8_t|^uint8_t|\\Wu_short|^u_short|\\Walignas|^alignas|\\Walignof|^alignof|\\Wtypedef|^typedef|\\Wprivate|^private|\\Wu_char|^u_char|\\Wmode_t|^mode_t|\\Wstatic|^static|\\Wdouble|^double|\\Wnot_eq|^not_eq|\\Wtypeid|^typeid|\\Wmodule|^module|\\Wstruct|^struct|\\Wexport|^export|\\Wxor_eq|^xor_eq|\\Wand_eq|^and_eq|\\Wu_long|^u_long|\\Wquad_t|^quad_t|\\Wsigned|^signed|\\Wushort|^ushort|\\Wimport|^import|\\Wbitand|^bitand|\\Wfriend|^friend|\\Wtime_t|^time_t|\\Wdelete|^delete|\\Wsize_t|^size_t|\\Wint8_t|^int8_t|\\Winline|^inline|\\Wextern|^extern|\\Wpublic|^public|\\Wsizeof|^sizeof|\\Wswitch|^switch|\\Wreturn|^return|\\Wconst|^const|\\Wshort|^short|\\Wfloat|^float|\\Wu_int|^u_int|\\Wdiv_t|^div_t|\\Wdev_t|^dev_t|\\Wgid_t|^gid_t|\\Wino_t|^ino_t|\\Wkey_t|^key_t|\\Wpid_t|^pid_t|\\Woff_t|^off_t|\\Wuid_t|^uid_t|\\Wwhile|^while|\\Wor_eq|^or_eq|\\Wthrow|^throw|\\Wbitor|^bitor|\\Wfalse|^false|\\Wclass|^class|\\Wunion|^union|\\Wconst|^const|\\Wcompl|^compl|\\Wusing|^using|\\Wcatch|^catch|\\Wbreak|^break|\\Wtrue|^true|\\Wid_t|^id_t|\\Wchar|^char|\\Wid_t|^id_t|\\Wauto|^auto|\\Wcase|^case|\\Wuint|^uint|\\Wbool|^bool|\\Wlong|^long|\\Wvoid|^void|\\Wenum|^enum|\\WNULL|^NULL|\\Wthis|^this|\\Welse|^else|\\Wgoto|^goto|\\Wnew|^new|\\Wtry|^try|\\Wxor|^xor|\\Wnot|^not|\\Wint|^int|\\Wand|^and|\\Wfor|^for|\\Wasm|^asm|\\Wdo|^do|\\Wor|^or|\\Wif|^if)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=\\()",
		  "end": "(?:(?<=\\}|%>|\\?\\?>)|(?=[;>\\[\\]=]))",
		  "beginCaptures": {
			"0": {
			  "name": "meta.head.function.definition.ds"
			},
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"3": {
			  "name": "comment.block.ds"
			},
			"4": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"5": {
			  "name": "storage.type.template.ds"
			},
			"6": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"7": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"8": {
			  "name": "comment.block.ds"
			},
			"9": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"10": {
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#number_literal"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "match": "((?<!\\w)(?:(?:(?:constexpr)|(?:explicit)|(?:mutable)|(?:virtual)|(?:inline)|(?:friend))|(?:(?:volatile)|(?:register)|(?:restrict)|(?:static)|(?:extern)|(?:const)))(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))",
				  "captures": {
					"1": {
					  "name": "storage.modifier.$1.ds"
					},
					"2": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"3": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"4": {
					  "name": "comment.block.ds"
					},
					"5": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"12": {
			  "name": "storage.modifier.$12.ds"
			},
			"13": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"14": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"15": {
			  "name": "comment.block.ds"
			},
			"16": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"17": {
			  "name": "meta.qualified_type.ds",
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.ds"
				},
				{
				  "match": "(?<!\\w)(?:(?:struct)|(?:class)|(?:union)|(?:enum))(?!\\w)",
				  "name": "storage.type.$0.ds"
				},
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#storage_types"
				},
				{
				  "include": "#number_literal"
				},
				{
				  "include": "#string_context"
				},
				{
				  "include": "#comma"
				},
				{
				  "include": "#scope_resolution_inner_generated"
				},
				{
				  "begin": "<",
				  "end": ">",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.begin.template.call.ds"
					}
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.end.template.call.ds"
					}
				  },
				  "name": "meta.template.call.ds",
				  "patterns": [
					{
					  "include": "#template_call_context"
					}
				  ]
				},
				{
				  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
				  "name": "entity.name.type.ds"
				}
			  ]
			},
			"18": {
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#number_literal"
				}
			  ]
			},
			"19": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"20": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"21": {
			  "name": "comment.block.ds"
			},
			"22": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"23": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"24": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"25": {
			  "name": "comment.block.ds"
			},
			"26": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"27": {
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.type.ds"
				},
				{
				  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
				  "name": "entity.name.scope-resolution.type.ds"
				},
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"28": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"29": {
			},
			"30": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"31": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"32": {
			  "name": "comment.block.ds"
			},
			"33": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"34": {
			},
			"35": {
			  "patterns": [
				{
				  "match": "\\*",
				  "name": "storage.modifier.pointer.ds"
				},
				{
				  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  },
				  "name": "invalid.illegal.reference-type.ds"
				},
				{
				  "match": "\\&",
				  "name": "storage.modifier.reference.ds"
				}
			  ]
			},
			"36": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"37": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"38": {
			  "name": "comment.block.ds"
			},
			"39": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"40": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"41": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"42": {
			  "name": "comment.block.ds"
			},
			"43": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"44": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"45": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"46": {
			  "name": "comment.block.ds"
			},
			"47": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"48": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"49": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"50": {
			  "name": "comment.block.ds"
			},
			"51": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"52": {
			  "name": "storage.type.modifier.calling-convention.ds"
			},
			"53": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"54": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"55": {
			  "name": "comment.block.ds"
			},
			"56": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"57": {
			  "patterns": [
				{
				  "include": "#scope_resolution_function_definition_inner_generated"
				}
			  ]
			},
			"58": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.function.definition.ds"
			},
			"59": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"60": {
			},
			"61": {
			  "name": "entity.name.function.definition.ds"
			},
			"62": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"63": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"64": {
			  "name": "comment.block.ds"
			},
			"65": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			}
		  },
		  "endCaptures": {
		  },
		  "name": "meta.function.definition.ds",
		  "patterns": [
			{
			  "begin": "\\G ?",
			  "end": "(?:\\{|<%|\\?\\?<|(?=;))",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.begin.bracket.curly.function.definition.ds"
				}
			  },
			  "name": "meta.head.function.definition.ds",
			  "patterns": [
				{
				  "include": "#ever_present_context"
				},
				{
				  "begin": "\\(",
				  "end": "\\)",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.section.parameters.begin.bracket.round.ds"
					}
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.parameters.end.bracket.round.ds"
					}
				  },
				  "contentName": "meta.function.definition.parameters",
				  "patterns": [
					{
					  "include": "#ever_present_context"
					},
					{
					  "include": "#parameter_or_maybe_value"
					},
					{
					  "include": "#comma"
					},
					{
					  "include": "#evaluation_context"
					}
				  ]
				},
				{
				  "match": "(?<=^|\\))(?:(?:\\s)+)?(->)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\s*+((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:(?:unsigned)|(?:signed)|(?:short)|(?:long))|(?:(?:struct)|(?:class)|(?:union)|(?:enum)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*((?:::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<23>?)+>)(?:\\s)*+)?::)*+)?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?!(?:(?:transaction_safe_dynamic)|(?:__has_cpp_attribute)|(?:reinterpret_cast)|(?:transaction_safe)|(?:atomic_noexcept)|(?:atomic_commit)|(?:atomic_cancel)|(?:__has_include)|(?:dynamic_cast)|(?:synchronized)|(?:thread_local)|(?:static_cast)|(?:const_cast)|(?:constexpr)|(?:consteval)|(?:co_return)|(?:co_return)|(?:constexpr)|(?:protected)|(?:constexpr)|(?:namespace)|(?:noexcept)|(?:typename)|(?:decltype)|(?:template)|(?:operator)|(?:noexcept)|(?:co_yield)|(?:co_await)|(?:continue)|(?:co_await)|(?:co_yield)|(?:volatile)|(?:register)|(?:restrict)|(?:explicit)|(?:override)|(?:volatile)|(?:reflexpr)|(?:noexcept)|(?:requires)|(?:alignas)|(?:typedef)|(?:nullptr)|(?:alignof)|(?:mutable)|(?:concept)|(?:virtual)|(?:defined)|(?:__asm__)|(?:include)|(?:_Pragma)|(?:mutable)|(?:default)|(?:warning)|(?:private)|(?:module)|(?:return)|(?:not_eq)|(?:xor_eq)|(?:and_eq)|(?:ifndef)|(?:pragma)|(?:export)|(?:import)|(?:sizeof)|(?:static)|(?:delete)|(?:public)|(?:define)|(?:extern)|(?:inline)|(?:typeid)|(?:switch)|(?:friend)|(?:bitand)|(?:false)|(?:compl)|(?:bitor)|(?:throw)|(?:or_eq)|(?:while)|(?:catch)|(?:break)|(?:const)|(?:final)|(?:const)|(?:endif)|(?:ifdef)|(?:undef)|(?:error)|(?:using)|(?:audit)|(?:axiom)|(?:line)|(?:else)|(?:elif)|(?:true)|(?:NULL)|(?:case)|(?:goto)|(?:else)|(?:this)|(?:new)|(?:asm)|(?:not)|(?:and)|(?:xor)|(?:try)|(?:for)|(?:if)|(?:do)|(?:or)|(?:if))\\b)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*\\b((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<23>?)+>)?(?![\\w<:.]))",
				  "captures": {
					"1": {
					  "name": "punctuation.definition.function.return-type.ds"
					},
					"2": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"3": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"4": {
					  "name": "comment.block.ds"
					},
					"5": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					},
					"6": {
					  "name": "meta.qualified_type.ds",
					  "patterns": [
						{
						  "match": "::",
						  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.ds"
						},
						{
						  "match": "(?<!\\w)(?:(?:struct)|(?:class)|(?:union)|(?:enum))(?!\\w)",
						  "name": "storage.type.$0.ds"
						},
						{
						  "include": "#attributes_context"
						},
						{
						  "include": "#storage_types"
						},
						{
						  "include": "#number_literal"
						},
						{
						  "include": "#string_context"
						},
						{
						  "include": "#comma"
						},
						{
						  "include": "#scope_resolution_inner_generated"
						},
						{
						  "begin": "<",
						  "end": ">",
						  "beginCaptures": {
							"0": {
							  "name": "punctuation.section.angle-brackets.begin.template.call.ds"
							}
						  },
						  "endCaptures": {
							"0": {
							  "name": "punctuation.section.angle-brackets.end.template.call.ds"
							}
						  },
						  "name": "meta.template.call.ds",
						  "patterns": [
							{
							  "include": "#template_call_context"
							}
						  ]
						},
						{
						  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
						  "name": "entity.name.type.ds"
						}
					  ]
					},
					"7": {
					  "patterns": [
						{
						  "include": "#attributes_context"
						},
						{
						  "include": "#number_literal"
						}
					  ]
					},
					"8": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"9": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"10": {
					  "name": "comment.block.ds"
					},
					"11": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					},
					"12": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"13": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"14": {
					  "name": "comment.block.ds"
					},
					"15": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					},
					"16": {
					  "patterns": [
						{
						  "match": "::",
						  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.type.ds"
						},
						{
						  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
						  "name": "entity.name.scope-resolution.type.ds"
						},
						{
						  "include": "#template_call_range"
						}
					  ]
					},
					"17": {
					  "patterns": [
						{
						  "include": "#template_call_range"
						}
					  ]
					},
					"18": {
					},
					"19": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"20": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"21": {
					  "name": "comment.block.ds"
					},
					"22": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					},
					"23": {
					}
				  }
				},
				{
				  "include": "$self"
				}
			  ]
			},
			{
			  "begin": "(?<=\\{|<%|\\?\\?<)",
			  "end": "\\}|%>|\\?\\?>",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.end.bracket.curly.function.definition.ds"
				}
			  },
			  "name": "meta.body.function.definition.ds",
			  "patterns": [
				{
				  "include": "#function_body_context"
				}
			  ]
			},
			{
			  "begin": "(?<=\\}|%>|\\?\\?>)[\\s]*",
			  "end": "[\\s]*(?=;)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "name": "meta.tail.function.definition.ds",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ]
			}
		  ]
		},
		"function_parameter_context": {
		  "patterns": [
			{
			  "include": "#ever_present_context"
			},
			{
			  "include": "#string_context"
			},
			{
			  "include": "#parameter"
			},
			{
			  "include": "#comma"
			}
		  ]
		},
		"function_pointer": {
		  "begin": "(\\s*+((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:(?:unsigned)|(?:signed)|(?:short)|(?:long))|(?:(?:struct)|(?:class)|(?:union)|(?:enum)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*((?:::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<18>?)+>)(?:\\s)*+)?::)*+)?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?!(?:(?:transaction_safe_dynamic)|(?:__has_cpp_attribute)|(?:reinterpret_cast)|(?:transaction_safe)|(?:atomic_noexcept)|(?:atomic_commit)|(?:atomic_cancel)|(?:__has_include)|(?:dynamic_cast)|(?:synchronized)|(?:thread_local)|(?:static_cast)|(?:const_cast)|(?:constexpr)|(?:consteval)|(?:co_return)|(?:co_return)|(?:constexpr)|(?:protected)|(?:constexpr)|(?:namespace)|(?:noexcept)|(?:typename)|(?:decltype)|(?:template)|(?:operator)|(?:noexcept)|(?:co_yield)|(?:co_await)|(?:continue)|(?:co_await)|(?:co_yield)|(?:volatile)|(?:register)|(?:restrict)|(?:explicit)|(?:override)|(?:volatile)|(?:reflexpr)|(?:noexcept)|(?:requires)|(?:alignas)|(?:typedef)|(?:nullptr)|(?:alignof)|(?:mutable)|(?:concept)|(?:virtual)|(?:defined)|(?:__asm__)|(?:include)|(?:_Pragma)|(?:mutable)|(?:default)|(?:warning)|(?:private)|(?:module)|(?:return)|(?:not_eq)|(?:xor_eq)|(?:and_eq)|(?:ifndef)|(?:pragma)|(?:export)|(?:import)|(?:sizeof)|(?:static)|(?:delete)|(?:public)|(?:define)|(?:extern)|(?:inline)|(?:typeid)|(?:switch)|(?:friend)|(?:bitand)|(?:false)|(?:compl)|(?:bitor)|(?:throw)|(?:or_eq)|(?:while)|(?:catch)|(?:break)|(?:const)|(?:final)|(?:const)|(?:endif)|(?:ifdef)|(?:undef)|(?:error)|(?:using)|(?:audit)|(?:axiom)|(?:line)|(?:else)|(?:elif)|(?:true)|(?:NULL)|(?:case)|(?:goto)|(?:else)|(?:this)|(?:new)|(?:asm)|(?:not)|(?:and)|(?:xor)|(?:try)|(?:for)|(?:if)|(?:do)|(?:or)|(?:if))\\b)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*\\b((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<18>?)+>)?(?![\\w<:.]))(((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()(\\*)(?:(?:\\s)+)?((?:(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*)?)(?:(?:\\s)+)?(?:(\\[)(\\w*)(\\])(?:(?:\\s)+)?)*(\\))(?:(?:\\s)+)?(\\()",
		  "end": "(\\))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=[{=,);>]|\\n)(?!\\()",
		  "beginCaptures": {
			"1": {
			  "name": "meta.qualified_type.ds",
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.ds"
				},
				{
				  "match": "(?<!\\w)(?:(?:struct)|(?:class)|(?:union)|(?:enum))(?!\\w)",
				  "name": "storage.type.$0.ds"
				},
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#storage_types"
				},
				{
				  "include": "#number_literal"
				},
				{
				  "include": "#string_context"
				},
				{
				  "include": "#comma"
				},
				{
				  "include": "#scope_resolution_inner_generated"
				},
				{
				  "begin": "<",
				  "end": ">",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.begin.template.call.ds"
					}
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.end.template.call.ds"
					}
				  },
				  "name": "meta.template.call.ds",
				  "patterns": [
					{
					  "include": "#template_call_context"
					}
				  ]
				},
				{
				  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
				  "name": "entity.name.type.ds"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#number_literal"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"4": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"5": {
			  "name": "comment.block.ds"
			},
			"6": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"8": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"9": {
			  "name": "comment.block.ds"
			},
			"10": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.type.ds"
				},
				{
				  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
				  "name": "entity.name.scope-resolution.type.ds"
				},
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"12": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"13": {
			},
			"14": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"15": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"16": {
			  "name": "comment.block.ds"
			},
			"17": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"18": {
			},
			"19": {
			  "patterns": [
				{
				  "match": "\\*",
				  "name": "storage.modifier.pointer.ds"
				},
				{
				  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  },
				  "name": "invalid.illegal.reference-type.ds"
				},
				{
				  "match": "\\&",
				  "name": "storage.modifier.reference.ds"
				}
			  ]
			},
			"20": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"21": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"22": {
			  "name": "comment.block.ds"
			},
			"23": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"24": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"25": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"26": {
			  "name": "comment.block.ds"
			},
			"27": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"28": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"29": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"30": {
			  "name": "comment.block.ds"
			},
			"31": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"32": {
			  "name": "punctuation.section.parens.begin.bracket.round.function.pointer.ds"
			},
			"33": {
			  "name": "punctuation.definition.function.pointer.dereference.ds"
			},
			"34": {
			  "name": "variable.other.definition.pointer.function.ds"
			},
			"35": {
			  "name": "punctuation.definition.begin.bracket.square.ds"
			},
			"36": {
			  "patterns": [
				{
				  "include": "#evaluation_context"
				}
			  ]
			},
			"37": {
			  "name": "punctuation.definition.end.bracket.square.ds"
			},
			"38": {
			  "name": "punctuation.section.parens.end.bracket.round.function.pointer.ds"
			},
			"39": {
			  "name": "punctuation.section.parameters.begin.bracket.round.function.pointer.ds"
			}
		  },
		  "endCaptures": {
			"1": {
			  "name": "punctuation.section.parameters.end.bracket.round.function.pointer.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"4": {
			  "name": "comment.block.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			}
		  },
		  "patterns": [
			{
			  "include": "#function_parameter_context"
			}
		  ]
		},
		"function_pointer_parameter": {
		  "begin": "(\\s*+((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:(?:unsigned)|(?:signed)|(?:short)|(?:long))|(?:(?:struct)|(?:class)|(?:union)|(?:enum)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*((?:::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<18>?)+>)(?:\\s)*+)?::)*+)?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?!(?:(?:transaction_safe_dynamic)|(?:__has_cpp_attribute)|(?:reinterpret_cast)|(?:transaction_safe)|(?:atomic_noexcept)|(?:atomic_commit)|(?:atomic_cancel)|(?:__has_include)|(?:dynamic_cast)|(?:synchronized)|(?:thread_local)|(?:static_cast)|(?:const_cast)|(?:constexpr)|(?:consteval)|(?:co_return)|(?:co_return)|(?:constexpr)|(?:protected)|(?:constexpr)|(?:namespace)|(?:noexcept)|(?:typename)|(?:decltype)|(?:template)|(?:operator)|(?:noexcept)|(?:co_yield)|(?:co_await)|(?:continue)|(?:co_await)|(?:co_yield)|(?:volatile)|(?:register)|(?:restrict)|(?:explicit)|(?:override)|(?:volatile)|(?:reflexpr)|(?:noexcept)|(?:requires)|(?:alignas)|(?:typedef)|(?:nullptr)|(?:alignof)|(?:mutable)|(?:concept)|(?:virtual)|(?:defined)|(?:__asm__)|(?:include)|(?:_Pragma)|(?:mutable)|(?:default)|(?:warning)|(?:private)|(?:module)|(?:return)|(?:not_eq)|(?:xor_eq)|(?:and_eq)|(?:ifndef)|(?:pragma)|(?:export)|(?:import)|(?:sizeof)|(?:static)|(?:delete)|(?:public)|(?:define)|(?:extern)|(?:inline)|(?:typeid)|(?:switch)|(?:friend)|(?:bitand)|(?:false)|(?:compl)|(?:bitor)|(?:throw)|(?:or_eq)|(?:while)|(?:catch)|(?:break)|(?:const)|(?:final)|(?:const)|(?:endif)|(?:ifdef)|(?:undef)|(?:error)|(?:using)|(?:audit)|(?:axiom)|(?:line)|(?:else)|(?:elif)|(?:true)|(?:NULL)|(?:case)|(?:goto)|(?:else)|(?:this)|(?:new)|(?:asm)|(?:not)|(?:and)|(?:xor)|(?:try)|(?:for)|(?:if)|(?:do)|(?:or)|(?:if))\\b)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*\\b((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<18>?)+>)?(?![\\w<:.]))(((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()(\\*)(?:(?:\\s)+)?((?:(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*)?)(?:(?:\\s)+)?(?:(\\[)(\\w*)(\\])(?:(?:\\s)+)?)*(\\))(?:(?:\\s)+)?(\\()",
		  "end": "(\\))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=[{=,);>]|\\n)(?!\\()",
		  "beginCaptures": {
			"1": {
			  "name": "meta.qualified_type.ds",
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.ds"
				},
				{
				  "match": "(?<!\\w)(?:(?:struct)|(?:class)|(?:union)|(?:enum))(?!\\w)",
				  "name": "storage.type.$0.ds"
				},
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#storage_types"
				},
				{
				  "include": "#number_literal"
				},
				{
				  "include": "#string_context"
				},
				{
				  "include": "#comma"
				},
				{
				  "include": "#scope_resolution_inner_generated"
				},
				{
				  "begin": "<",
				  "end": ">",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.begin.template.call.ds"
					}
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.end.template.call.ds"
					}
				  },
				  "name": "meta.template.call.ds",
				  "patterns": [
					{
					  "include": "#template_call_context"
					}
				  ]
				},
				{
				  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
				  "name": "entity.name.type.ds"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#number_literal"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"4": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"5": {
			  "name": "comment.block.ds"
			},
			"6": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"8": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"9": {
			  "name": "comment.block.ds"
			},
			"10": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.type.ds"
				},
				{
				  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
				  "name": "entity.name.scope-resolution.type.ds"
				},
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"12": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"13": {
			},
			"14": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"15": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"16": {
			  "name": "comment.block.ds"
			},
			"17": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"18": {
			},
			"19": {
			  "patterns": [
				{
				  "match": "\\*",
				  "name": "storage.modifier.pointer.ds"
				},
				{
				  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  },
				  "name": "invalid.illegal.reference-type.ds"
				},
				{
				  "match": "\\&",
				  "name": "storage.modifier.reference.ds"
				}
			  ]
			},
			"20": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"21": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"22": {
			  "name": "comment.block.ds"
			},
			"23": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"24": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"25": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"26": {
			  "name": "comment.block.ds"
			},
			"27": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"28": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"29": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"30": {
			  "name": "comment.block.ds"
			},
			"31": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"32": {
			  "name": "punctuation.section.parens.begin.bracket.round.function.pointer.ds"
			},
			"33": {
			  "name": "punctuation.definition.function.pointer.dereference.ds"
			},
			"34": {
			  "name": "variable.parameter.pointer.function.ds"
			},
			"35": {
			  "name": "punctuation.definition.begin.bracket.square.ds"
			},
			"36": {
			  "patterns": [
				{
				  "include": "#evaluation_context"
				}
			  ]
			},
			"37": {
			  "name": "punctuation.definition.end.bracket.square.ds"
			},
			"38": {
			  "name": "punctuation.section.parens.end.bracket.round.function.pointer.ds"
			},
			"39": {
			  "name": "punctuation.section.parameters.begin.bracket.round.function.pointer.ds"
			}
		  },
		  "endCaptures": {
			"1": {
			  "name": "punctuation.section.parameters.end.bracket.round.function.pointer.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"4": {
			  "name": "comment.block.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			}
		  },
		  "patterns": [
			{
			  "include": "#function_parameter_context"
			}
		  ]
		},
		"functional_specifiers_pre_parameters": {
		  "match": "(?<!\\w)(?:(?:constexpr)|(?:explicit)|(?:mutable)|(?:virtual)|(?:inline)|(?:friend))(?!\\w)",
		  "name": "storage.modifier.specifier.functional.pre-parameters.$0.ds"
		},
		"gcc_attributes": {
		  "begin": "__attribute(?:__)?\\s*\\(\\s*\\(",
		  "end": "\\)\\s*\\)",
		  "beginCaptures": {
			"0": {
			  "name": "punctuation.section.attribute.begin.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.attribute.end.ds"
			}
		  },
		  "name": "support.other.attribute.ds",
		  "patterns": [
			{
			  "include": "#attributes_context"
			},
			{
			  "begin": "\\(",
			  "end": "\\)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#string_context"
				}
			  ]
			},
			{
			  "match": "(using)(?:\\s)+((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))",
			  "captures": {
				"1": {
				  "name": "keyword.other.using.directive.ds"
				},
				"2": {
				  "name": "entity.name.namespace.ds"
				}
			  }
			},
			{
			  "match": ",",
			  "name": "punctuation.separator.attribute.ds"
			},
			{
			  "match": ":",
			  "name": "punctuation.accessor.attribute.ds"
			},
			{
			  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)(?=::)",
			  "name": "entity.name.namespace.ds"
			},
			{
			  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
			  "name": "entity.other.attribute.$0.ds"
			},
			{
			  "include": "#number_literal"
			}
		  ]
		},
		"goto_statement": {
		  "match": "((?<!\\w)goto(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*)",
		  "captures": {
			"1": {
			  "name": "keyword.control.goto.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"4": {
			  "name": "entity.name.label.call.ds"
			}
		  }
		},
		"identifier": {
		  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*"
		},
		"include": {
		  "match": "^((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((#)(?:(?:\\s)+)?((?:include|include_next))\\b)(?:(?:\\s)+)?(?:(?:(?:((<)[^>]*(>?)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:\\n)|$)|(?=\\/\\/)))|((\\\")[^\\\"]*((?:\\\")?)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:\\n)|$)|(?=\\/\\/))))|(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?:\\.(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*)*((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:\\n)|$)|(?=(?:\\/\\/|;)))))|((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:\\n)|$)|(?=(?:\\/\\/|;))))",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"3": {
			  "name": "keyword.control.directive.$5.ds"
			},
			"4": {
			  "name": "punctuation.definition.directive.ds"
			},
			"6": {
			  "name": "string.quoted.other.lt-gt.include.ds"
			},
			"7": {
			  "name": "punctuation.definition.string.begin.ds"
			},
			"8": {
			  "name": "punctuation.definition.string.end.ds"
			},
			"9": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"10": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"11": {
			  "name": "string.quoted.double.include.ds"
			},
			"12": {
			  "name": "punctuation.definition.string.begin.ds"
			},
			"13": {
			  "name": "punctuation.definition.string.end.ds"
			},
			"14": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"15": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"16": {
			  "name": "entity.name.other.preprocessor.macro.include.ds"
			},
			"17": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"18": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"19": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"20": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"21": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"22": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			}
		  },
		  "name": "meta.preprocessor.include.ds"
		},
		"inheritance_context": {
		  "patterns": [
			{
			  "include": "#ever_present_context"
			},
			{
			  "match": ",",
			  "name": "punctuation.separator.delimiter.comma.inheritance.ds"
			},
			{
			  "match": "(?<!\\w)(?:(?:protected)|(?:private)|(?:public))(?!\\w)",
			  "name": "storage.type.modifier.access.$0.ds"
			},
			{
			  "match": "(?<!\\w)virtual(?!\\w)",
			  "name": "storage.type.modifier.virtual.ds"
			},
			{
			  "match": "(?<=protected|virtual|private|public|,|:)(?:(?:\\s)+)?(?!(?:(?:(?:protected)|(?:private)|(?:public))|virtual))(\\s*+((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:(?:unsigned)|(?:signed)|(?:short)|(?:long))|(?:(?:struct)|(?:class)|(?:union)|(?:enum)))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*((?:::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<12>?)+>)(?:\\s)*+)?::)*+)?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?!(?:(?:transaction_safe_dynamic)|(?:__has_cpp_attribute)|(?:reinterpret_cast)|(?:transaction_safe)|(?:atomic_noexcept)|(?:atomic_commit)|(?:atomic_cancel)|(?:__has_include)|(?:dynamic_cast)|(?:synchronized)|(?:thread_local)|(?:static_cast)|(?:const_cast)|(?:constexpr)|(?:consteval)|(?:co_return)|(?:co_return)|(?:constexpr)|(?:protected)|(?:constexpr)|(?:namespace)|(?:noexcept)|(?:typename)|(?:decltype)|(?:template)|(?:operator)|(?:noexcept)|(?:co_yield)|(?:co_await)|(?:continue)|(?:co_await)|(?:co_yield)|(?:volatile)|(?:register)|(?:restrict)|(?:explicit)|(?:override)|(?:volatile)|(?:reflexpr)|(?:noexcept)|(?:requires)|(?:alignas)|(?:typedef)|(?:nullptr)|(?:alignof)|(?:mutable)|(?:concept)|(?:virtual)|(?:defined)|(?:__asm__)|(?:include)|(?:_Pragma)|(?:mutable)|(?:default)|(?:warning)|(?:private)|(?:module)|(?:return)|(?:not_eq)|(?:xor_eq)|(?:and_eq)|(?:ifndef)|(?:pragma)|(?:export)|(?:import)|(?:sizeof)|(?:static)|(?:delete)|(?:public)|(?:define)|(?:extern)|(?:inline)|(?:typeid)|(?:switch)|(?:friend)|(?:bitand)|(?:false)|(?:compl)|(?:bitor)|(?:throw)|(?:or_eq)|(?:while)|(?:catch)|(?:break)|(?:const)|(?:final)|(?:const)|(?:endif)|(?:ifdef)|(?:undef)|(?:error)|(?:using)|(?:audit)|(?:axiom)|(?:line)|(?:else)|(?:elif)|(?:true)|(?:NULL)|(?:case)|(?:goto)|(?:else)|(?:this)|(?:new)|(?:asm)|(?:not)|(?:and)|(?:xor)|(?:try)|(?:for)|(?:if)|(?:do)|(?:or)|(?:if))\\b)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*\\b((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<12>?)+>)?(?![\\w<:.]))",
			  "captures": {
				"1": {
				  "name": "meta.qualified_type.ds",
				  "patterns": [
					{
					  "match": "::",
					  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.ds"
					},
					{
					  "match": "(?<!\\w)(?:(?:struct)|(?:class)|(?:union)|(?:enum))(?!\\w)",
					  "name": "storage.type.$0.ds"
					},
					{
					  "include": "#attributes_context"
					},
					{
					  "include": "#storage_types"
					},
					{
					  "include": "#number_literal"
					},
					{
					  "include": "#string_context"
					},
					{
					  "include": "#comma"
					},
					{
					  "include": "#scope_resolution_inner_generated"
					},
					{
					  "begin": "<",
					  "end": ">",
					  "beginCaptures": {
						"0": {
						  "name": "punctuation.section.angle-brackets.begin.template.call.ds"
						}
					  },
					  "endCaptures": {
						"0": {
						  "name": "punctuation.section.angle-brackets.end.template.call.ds"
						}
					  },
					  "name": "meta.template.call.ds",
					  "patterns": [
						{
						  "include": "#template_call_context"
						}
					  ]
					},
					{
					  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
					  "name": "entity.name.type.ds"
					}
				  ]
				},
				"2": {
				  "patterns": [
					{
					  "include": "#attributes_context"
					},
					{
					  "include": "#number_literal"
					}
				  ]
				},
				"3": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"4": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"5": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"6": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"7": {
				  "patterns": [
					{
					  "match": "::",
					  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.type.ds"
					},
					{
					  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
					  "name": "entity.name.scope-resolution.type.ds"
					},
					{
					  "include": "#template_call_range"
					}
				  ]
				},
				"8": {
				  "patterns": [
					{
					  "include": "#template_call_range"
					}
				  ]
				},
				"9": {
				},
				"10": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"11": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"12": {
				}
			  }
			}
		  ]
		},
		"inline_builtin_storage_type": {
		  "match": "(?:\\s)*+(?<!\\w)(?:(?:(?:((?:(?:unsigned)|(?:wchar_t)|(?:double)|(?:signed)|(?:short)|(?:float)|(?:auto)|(?:void)|(?:long)|(?:char)|(?:bool)|(?:int)))|((?:(?:uint_least32_t)|(?:uint_least64_t)|(?:uint_least16_t)|(?:uint_fast64_t)|(?:uint_least8_t)|(?:int_least64_t)|(?:int_least32_t)|(?:int_least16_t)|(?:uint_fast16_t)|(?:uint_fast32_t)|(?:int_least8_t)|(?:int_fast16_t)|(?:int_fast32_t)|(?:int_fast64_t)|(?:uint_fast8_t)|(?:int_fast8_t)|(?:suseconds_t)|(?:useconds_t)|(?:uintmax_t)|(?:uintmax_t)|(?:in_port_t)|(?:uintmax_t)|(?:in_addr_t)|(?:blksize_t)|(?:uintptr_t)|(?:intmax_t)|(?:intptr_t)|(?:blkcnt_t)|(?:intmax_t)|(?:u_quad_t)|(?:uint16_t)|(?:uint32_t)|(?:uint64_t)|(?:ssize_t)|(?:fixpt_t)|(?:qaddr_t)|(?:u_short)|(?:int16_t)|(?:int32_t)|(?:int64_t)|(?:uint8_t)|(?:daddr_t)|(?:caddr_t)|(?:swblk_t)|(?:clock_t)|(?:segsz_t)|(?:nlink_t)|(?:time_t)|(?:u_long)|(?:ushort)|(?:quad_t)|(?:mode_t)|(?:size_t)|(?:u_char)|(?:int8_t)|(?:u_int)|(?:uid_t)|(?:off_t)|(?:pid_t)|(?:gid_t)|(?:dev_t)|(?:div_t)|(?:key_t)|(?:ino_t)|(?:id_t)|(?:id_t)|(?:uint))))|((?:(?:pthread_rwlockattr_t)|(?:pthread_mutexattr_t)|(?:pthread_condattr_t)|(?:pthread_rwlock_t)|(?:pthread_mutex_t)|(?:pthread_cond_t)|(?:pthread_attr_t)|(?:pthread_once_t)|(?:pthread_key_t)|(?:pthread_t))))|([a-zA-Z_](?:\\w)*_t))(?!\\w)",
		  "captures": {
			"1": {
			  "name": "storage.type.primitive.ds storage.type.built-in.primitive.ds"
			},
			"2": {
			  "name": "storage.type.ds storage.type.built-in.ds"
			},
			"3": {
			  "name": "support.type.posix-reserved.pthread.ds support.type.built-in.posix-reserved.pthread.ds"
			},
			"4": {
			  "name": "support.type.posix-reserved.ds support.type.built-in.posix-reserved.ds"
			}
		  }
		},
		"inline_comment": {
		  "match": "(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/))",
		  "captures": {
			"1": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"2": {
			  "name": "comment.block.ds"
			},
			"3": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			}
		  }
		},
		"invalid_comment_end": {
		  "match": "\\*\\/",
		  "name": "invalid.illegal.unexpected.punctuation.definition.comment.end.ds"
		},
		"label": {
		  "match": "((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))\\b(?<!case|default)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(:)",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"3": {
			  "name": "entity.name.label.ds"
			},
			"4": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"5": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"6": {
			  "name": "punctuation.separator.label.ds"
			}
		  }
		},
		"lambdas": {
		  "begin": "(?:(?<=[^\\s]|^)(?<![\\w\\]\\)\\[\\*&\">])|(?<=\\Wreturn|^return))(?:(?:\\s)+)?(\\[(?!\\[| *+\"| *+\\d))((?:[^\\[\\]]|((?<!\\[)\\[(?!\\[)(?:[^\\[\\]]*+\\g<3>?)++\\]))*+)(\\](?!((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))[\\[\\];]))",
		  "end": "(?<=[;}])",
		  "beginCaptures": {
			"1": {
			  "name": "punctuation.definition.capture.begin.lambda.ds"
			},
			"2": {
			  "name": "meta.lambda.capture.ds",
			  "patterns": [
				{
				  "include": "#the_this_keyword"
				},
				{
				  "match": "((?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?=\\]|\\z|$)|(,))|(\\=))",
				  "captures": {
					"1": {
					  "name": "variable.parameter.capture.ds"
					},
					"2": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"3": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"4": {
					  "name": "comment.block.ds"
					},
					"5": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					},
					"6": {
					  "name": "punctuation.separator.delimiter.comma.ds"
					},
					"7": {
					  "name": "keyword.operator.assignment.ds"
					}
				  }
				},
				{
				  "include": "#evaluation_context"
				}
			  ]
			},
			"3": {
			},
			"4": {
			  "name": "punctuation.definition.capture.end.lambda.ds"
			},
			"5": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"6": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"7": {
			  "name": "comment.block.ds"
			},
			"8": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			}
		  },
		  "endCaptures": {
		  },
		  "patterns": [
			{
			  "begin": "\\(",
			  "end": "\\)",
			  "beginCaptures": {
				"0": {
				  "name": "punctuation.definition.parameters.begin.lambda.ds"
				}
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.definition.parameters.end.lambda.ds"
				}
			  },
			  "name": "meta.function.definition.parameters.lambda.ds",
			  "patterns": [
				{
				  "include": "#function_parameter_context"
				}
			  ]
			},
			{
			  "match": "(?<!\\w)(?:(?:constexpr)|(?:consteval)|(?:mutable))(?!\\w)",
			  "name": "storage.modifier.lambda.$0.ds"
			},
			{
			  "match": "(->)((?:.+?(?=\\{|$))?)",
			  "captures": {
				"1": {
				  "name": "punctuation.definition.lambda.return-type.ds"
				},
				"2": {
				  "name": "storage.type.return-type.lambda.ds"
				}
			  }
			},
			{
			  "begin": "\\{",
			  "end": "\\}",
			  "beginCaptures": {
				"0": {
				  "name": "punctuation.section.block.begin.bracket.curly.lambda.ds"
				}
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.end.bracket.curly.lambda.ds"
				}
			  },
			  "name": "meta.function.definition.body.lambda.ds",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ]
			}
		  ]
		},
		"language_constants": {
		  "match": "(?<!\\w)(?:(?:nullptr)|(?:false)|(?:NULL)|(?:true))(?!\\w)",
		  "name": "constant.language.$0.ds"
		},
		"line": {
		  "begin": "^((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(#)(?:(?:\\s)+)?line\\b",
		  "end": "(?<!\\\\)(?=\\n)",
		  "beginCaptures": {
			"0": {
			  "name": "keyword.control.directive.line.ds"
			},
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"3": {
			  "name": "comment.block.ds"
			},
			"4": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"5": {
			  "name": "punctuation.definition.directive.ds"
			}
		  },
		  "endCaptures": {
		  },
		  "name": "meta.preprocessor.line.ds",
		  "patterns": [
			{
			  "include": "#string_context"
			},
			{
			  "include": "#preprocessor_number_literal"
			},
			{
			  "include": "#line_continuation_character"
			}
		  ]
		},
		"line_comment": {
		  "begin": "\\s*+(\\/\\/)",
		  "end": "(?<=\\n)(?<!\\\\\\n)",
		  "beginCaptures": {
			"1": {
			  "name": "punctuation.definition.comment.ds"
			}
		  },
		  "endCaptures": {
		  },
		  "name": "comment.line.double-slash.ds",
		  "patterns": [
			{
			  "include": "#line_continuation_character"
			}
		  ]
		},
		"line_continuation_character": {
		  "match": "\\\\\\n",
		  "name": "constant.character.escape.line-continuation.ds"
		},
		"macro": {
		  "begin": "(^((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(#)(?:(?:\\s)+)?define\\b)(?:(?:\\s)+)?((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))",
		  "end": "(?<!\\\\)(?=\\n)",
		  "beginCaptures": {
			"1": {
			  "name": "keyword.control.directive.define.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"4": {
			  "name": "comment.block.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"6": {
			  "name": "punctuation.definition.directive.ds"
			},
			"7": {
			  "name": "entity.name.function.preprocessor.ds"
			}
		  },
		  "endCaptures": {
		  },
		  "name": "meta.preprocessor.macro.ds",
		  "patterns": [
			{
			  "match": "\\G(?:(?:\\s)+)?(\\()([^\\(]*)(\\))",
			  "captures": {
				"1": {
				  "name": "punctuation.definition.parameters.begin.preprocessor.ds"
				},
				"2": {
				  "patterns": [
					{
					  "match": "(?<=[(,])(?:(?:\\s)+)?((?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*)(?:(?:\\s)+)?",
					  "captures": {
						"1": {
						  "name": "variable.parameter.preprocessor.ds"
						}
					  }
					},
					{
					  "match": ",",
					  "name": "punctuation.separator.parameters.ds"
					},
					{
					  "match": "\\.\\.\\.",
					  "name": "punctuation.vararg-ellipses.variable.parameter.preprocessor.ds"
					}
				  ]
				},
				"3": {
				  "name": "punctuation.definition.parameters.end.preprocessor.ds"
				}
			  }
			},
			{
			  "include": "#macro_context"
			},
			{
			  "include": "#macro_argument"
			}
		  ]
		},
		"macro_argument": {
		  "match": "##?(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
		  "name": "variable.other.macro.argument.ds"
		},
		"macro_context": {
		  "patterns": [
			{
			  "include": "source.ds.embedded.macro"
			}
		  ]
		},
		"macro_name": {
		  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
		  "name": "entity.name.function.preprocessor.ds"
		},
		"member_access": {
		  "match": "(?:((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)this(?!\\w))|((?:(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*|(?<=\\]|\\)))(?:(?:\\s)+)?))(?:((?:\\.\\*|\\.))|((?:->\\*|->)))((?:(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?:(?:\\s)+)?(?:(?:\\.\\*|\\.)|(?:->\\*|->))(?:(?:\\s)+)?)*)(?:(?:\\s)+)?(\\b(?!uint_least32_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|uint_least16_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|uint_least64_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|int_least32_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|int_least64_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|uint_fast32_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|uint_fast64_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|uint_least8_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|uint_fast16_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|int_least16_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|int_fast16_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|int_least8_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|uint_fast8_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|int_fast64_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|int_fast32_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|int_fast8_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|suseconds_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|useconds_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|in_addr_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|uintmax_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|uintmax_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|uintmax_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|in_port_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|uintptr_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|blksize_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|uint32_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|uint64_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|u_quad_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|intmax_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|intmax_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|unsigned[^Pattern.new(\n  match: \\/\\w\\/,\n)]|blkcnt_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|uint16_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|intptr_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|swblk_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|wchar_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|u_short[^Pattern.new(\n  match: \\/\\w\\/,\n)]|qaddr_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|caddr_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|daddr_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|fixpt_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|nlink_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|segsz_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|clock_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|ssize_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|int16_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|int32_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|int64_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|uint8_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|int8_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|mode_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|quad_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|ushort[^Pattern.new(\n  match: \\/\\w\\/,\n)]|u_long[^Pattern.new(\n  match: \\/\\w\\/,\n)]|u_char[^Pattern.new(\n  match: \\/\\w\\/,\n)]|double[^Pattern.new(\n  match: \\/\\w\\/,\n)]|signed[^Pattern.new(\n  match: \\/\\w\\/,\n)]|time_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|size_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|key_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|div_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|ino_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|uid_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|gid_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|off_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|pid_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|float[^Pattern.new(\n  match: \\/\\w\\/,\n)]|dev_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|u_int[^Pattern.new(\n  match: \\/\\w\\/,\n)]|short[^Pattern.new(\n  match: \\/\\w\\/,\n)]|bool[^Pattern.new(\n  match: \\/\\w\\/,\n)]|id_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|uint[^Pattern.new(\n  match: \\/\\w\\/,\n)]|long[^Pattern.new(\n  match: \\/\\w\\/,\n)]|char[^Pattern.new(\n  match: \\/\\w\\/,\n)]|void[^Pattern.new(\n  match: \\/\\w\\/,\n)]|auto[^Pattern.new(\n  match: \\/\\w\\/,\n)]|id_t[^Pattern.new(\n  match: \\/\\w\\/,\n)]|int[^Pattern.new(\n  match: \\/\\w\\/,\n)])(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*\\b(?!\\())",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"3": {
			  "name": "variable.language.this.ds"
			},
			"4": {
			  "name": "variable.other.object.access.ds"
			},
			"5": {
			  "name": "punctuation.separator.dot-access.ds"
			},
			"6": {
			  "name": "punctuation.separator.pointer-access.ds"
			},
			"7": {
			  "patterns": [
				{
				  "match": "(?<=(?:\\.\\*|\\.|->|->\\*))(?:(?:\\s)+)?(?:((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)this(?!\\w))|((?:(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*|(?<=\\]|\\)))(?:(?:\\s)+)?))(?:((?:\\.\\*|\\.))|((?:->\\*|->)))",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					},
					"5": {
					  "name": "variable.language.this.ds"
					},
					"6": {
					  "name": "variable.other.object.property.ds"
					},
					"7": {
					  "name": "punctuation.separator.dot-access.ds"
					},
					"8": {
					  "name": "punctuation.separator.pointer-access.ds"
					}
				  }
				},
				{
				  "match": "(?:((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)this(?!\\w))|((?:(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*|(?<=\\]|\\)))(?:(?:\\s)+)?))(?:((?:\\.\\*|\\.))|((?:->\\*|->)))",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					},
					"5": {
					  "name": "variable.language.this.ds"
					},
					"6": {
					  "name": "variable.other.object.access.ds"
					},
					"7": {
					  "name": "punctuation.separator.dot-access.ds"
					},
					"8": {
					  "name": "punctuation.separator.pointer-access.ds"
					}
				  }
				},
				{
				  "include": "#member_access"
				},
				{
				  "include": "#method_access"
				}
			  ]
			},
			"8": {
			  "name": "variable.other.property.ds"
			}
		  }
		},
		"memory_operators": {
		  "match": "((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:(?:(delete)(?:(?:\\s)+)?(\\[\\])|(delete))|(new))(?!\\w))",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"3": {
			  "name": "keyword.operator.wordlike.ds"
			},
			"4": {
			  "name": "keyword.operator.delete.array.ds"
			},
			"5": {
			  "name": "keyword.operator.delete.array.bracket.ds"
			},
			"6": {
			  "name": "keyword.operator.delete.ds"
			},
			"7": {
			  "name": "keyword.operator.new.ds"
			}
		  }
		},
		"method_access": {
		  "begin": "(?:((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)this(?!\\w))|((?:(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*|(?<=\\]|\\)))(?:(?:\\s)+)?))(?:((?:\\.\\*|\\.))|((?:->\\*|->)))((?:(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?:(?:\\s)+)?(?:(?:\\.\\*|\\.)|(?:->\\*|->))(?:(?:\\s)+)?)*)(?:(?:\\s)+)?(~?(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*)(?:(?:\\s)+)?(\\()",
		  "end": "\\)",
		  "beginCaptures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"3": {
			  "name": "comment.block.ds"
			},
			"4": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"5": {
			  "name": "variable.language.this.ds"
			},
			"6": {
			  "name": "variable.other.object.access.ds"
			},
			"7": {
			  "name": "punctuation.separator.dot-access.ds"
			},
			"8": {
			  "name": "punctuation.separator.pointer-access.ds"
			},
			"9": {
			  "patterns": [
				{
				  "match": "(?<=(?:\\.\\*|\\.|->|->\\*))(?:(?:\\s)+)?(?:((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)this(?!\\w))|((?:(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*|(?<=\\]|\\)))(?:(?:\\s)+)?))(?:((?:\\.\\*|\\.))|((?:->\\*|->)))",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					},
					"5": {
					  "name": "variable.language.this.ds"
					},
					"6": {
					  "name": "variable.other.object.property.ds"
					},
					"7": {
					  "name": "punctuation.separator.dot-access.ds"
					},
					"8": {
					  "name": "punctuation.separator.pointer-access.ds"
					}
				  }
				},
				{
				  "match": "(?:((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)this(?!\\w))|((?:(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*|(?<=\\]|\\)))(?:(?:\\s)+)?))(?:((?:\\.\\*|\\.))|((?:->\\*|->)))",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					},
					"5": {
					  "name": "variable.language.this.ds"
					},
					"6": {
					  "name": "variable.other.object.access.ds"
					},
					"7": {
					  "name": "punctuation.separator.dot-access.ds"
					},
					"8": {
					  "name": "punctuation.separator.pointer-access.ds"
					}
				  }
				},
				{
				  "include": "#member_access"
				},
				{
				  "include": "#method_access"
				}
			  ]
			},
			"10": {
			  "name": "entity.name.function.member.ds"
			},
			"11": {
			  "name": "punctuation.section.arguments.begin.bracket.round.function.member.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.arguments.end.bracket.round.function.member.ds"
			}
		  },
		  "patterns": [
			{
			  "include": "#evaluation_context"
			}
		  ]
		},
		"misc_keywords": {
		  "match": "((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:(?:requires)|(?:typedef)|(?:concept)|(?:export)|(?:module))(?!\\w))",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"3": {
			  "name": "keyword.other.$3.ds"
			}
		  }
		},
		"ms_attributes": {
		  "begin": "__declspec\\(",
		  "end": "\\)",
		  "beginCaptures": {
			"0": {
			  "name": "punctuation.section.attribute.begin.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.attribute.end.ds"
			}
		  },
		  "name": "support.other.attribute.ds",
		  "patterns": [
			{
			  "include": "#attributes_context"
			},
			{
			  "begin": "\\(",
			  "end": "\\)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#string_context"
				}
			  ]
			},
			{
			  "match": "(using)(?:\\s)+((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))",
			  "captures": {
				"1": {
				  "name": "keyword.other.using.directive.ds"
				},
				"2": {
				  "name": "entity.name.namespace.ds"
				}
			  }
			},
			{
			  "match": ",",
			  "name": "punctuation.separator.attribute.ds"
			},
			{
			  "match": ":",
			  "name": "punctuation.accessor.attribute.ds"
			},
			{
			  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)(?=::)",
			  "name": "entity.name.namespace.ds"
			},
			{
			  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
			  "name": "entity.other.attribute.$0.ds"
			},
			{
			  "include": "#number_literal"
			}
		  ]
		},
		"namespace_alias": {
		  "match": "(?<!\\w)(namespace)(?:\\s)+((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))(?:(?:\\s)+)?(\\=)(?:(?:\\s)+)?(((::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<8>?)+>)(?:\\s)*+)?::)*\\s*+)(?:(?:\\s)+)?((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))(?:(?:\\s)+)?(?:(;)|\\n))",
		  "captures": {
			"1": {
			  "name": "keyword.other.namespace.alias.ds storage.type.namespace.alias.ds"
			},
			"2": {
			  "name": "entity.name.namespace.alias.ds"
			},
			"3": {
			  "name": "keyword.operator.assignment.ds"
			},
			"4": {
			  "name": "meta.declaration.namespace.alias.value.ds"
			},
			"5": {
			  "patterns": [
				{
				  "include": "#scope_resolution_namespace_alias_inner_generated"
				}
			  ]
			},
			"6": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.namespace.alias.ds"
			},
			"7": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"9": {
			  "name": "entity.name.namespace.ds"
			},
			"10": {
			  "name": "punctuation.terminator.statement.ds"
			}
		  },
		  "name": "meta.declaration.namespace.alias.ds"
		},
		"namespace_block": {
		  "begin": "((?<!\\w)namespace(?!\\w))",
		  "end": "(?:(?<=\\}|%>|\\?\\?>)|(?=[;>\\[\\]=]))",
		  "beginCaptures": {
			"0": {
			  "name": "meta.head.namespace.ds"
			},
			"1": {
			  "name": "keyword.other.namespace.definition.ds storage.type.namespace.definition.ds"
			}
		  },
		  "endCaptures": {
		  },
		  "name": "meta.block.namespace.ds",
		  "patterns": [
			{
			  "begin": "\\G ?",
			  "end": "(?:\\{|<%|\\?\\?<|(?=;))",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.begin.bracket.curly.namespace.ds"
				}
			  },
			  "name": "meta.head.namespace.ds",
			  "patterns": [
				{
				  "include": "#ever_present_context"
				},
				{
				  "include": "#attributes_context"
				},
				{
				  "match": "((::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<4>?)+>)(?:\\s)*+)?::)*\\s*+)(?:(?:\\s)+)?((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))(?:(?:\\s)+)?(?:(::)(?:(?:\\s)+)?(inline))?",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#scope_resolution_namespace_block_inner_generated"
						}
					  ]
					},
					"2": {
					  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.namespace.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "include": "#template_call_range"
						}
					  ]
					},
					"4": {
					},
					"5": {
					  "name": "entity.name.namespace.ds"
					},
					"6": {
					  "name": "punctuation.separator.scope-resolution.namespace.block.ds"
					},
					"7": {
					  "name": "storage.modifier.inline.ds"
					}
				  }
				}
			  ]
			},
			{
			  "begin": "(?<=\\{|<%|\\?\\?<)",
			  "end": "\\}|%>|\\?\\?>",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.end.bracket.curly.namespace.ds"
				}
			  },
			  "name": "meta.body.namespace.ds",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ]
			},
			{
			  "begin": "(?<=\\}|%>|\\?\\?>)[\\s]*",
			  "end": "[\\s]*(?=;)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "name": "meta.tail.namespace.ds",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ]
			}
		  ]
		},
		"noexcept_operator": {
		  "begin": "((?<!\\w)noexcept(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()",
		  "end": "\\)",
		  "beginCaptures": {
			"1": {
			  "name": "keyword.operator.functionlike.ds keyword.operator.noexcept.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"4": {
			  "name": "comment.block.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"6": {
			  "name": "punctuation.section.arguments.begin.bracket.round.operator.noexcept.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.arguments.end.bracket.round.operator.noexcept.ds"
			}
		  },
		  "contentName": "meta.arguments.operator.noexcept",
		  "patterns": [
			{
			  "include": "#evaluation_context"
			}
		  ]
		},
		"number_literal": {
		  "match": "(?<!\\w)\\.?\\d(?:(?:[0-9a-zA-Z_\\.]|')|(?<=[eEpP])[+-])*",
		  "captures": {
			"0": {
			  "patterns": [
				{
				  "begin": "(?=.)",
				  "end": "$",
				  "beginCaptures": {
				  },
				  "endCaptures": {
				  },
				  "patterns": [
					{
					  "match": "(\\G0[xX])([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?:(?<=[0-9a-fA-F])\\.|\\.(?=[0-9a-fA-F])))([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?(?:(?<!')([pP])((?:\\+)?)((?:\\-)?)([0-9](?:[0-9]|(?<=[0-9a-fA-F])'(?=[0-9a-fA-F]))*))?([lLfF](?!\\w))?((?:\\w(?<![0-9a-fA-FpP])\\w*)?$)",
					  "captures": {
						"1": {
						  "name": "keyword.other.unit.hexadecimal.ds"
						},
						"2": {
						  "name": "constant.numeric.hexadecimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"3": {
						  "name": "punctuation.separator.constant.numeric.ds"
						},
						"4": {
						  "name": "constant.numeric.hexadecimal.ds"
						},
						"5": {
						  "name": "constant.numeric.hexadecimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"6": {
						  "name": "punctuation.separator.constant.numeric.ds"
						},
						"7": {
						  "name": "keyword.other.unit.exponent.hexadecimal.ds"
						},
						"8": {
						  "name": "keyword.operator.plus.exponent.hexadecimal.ds"
						},
						"9": {
						  "name": "keyword.operator.minus.exponent.hexadecimal.ds"
						},
						"10": {
						  "name": "constant.numeric.exponent.hexadecimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"11": {
						  "name": "keyword.other.unit.suffix.floating-point.ds"
						},
						"12": {
						  "name": "keyword.other.unit.user-defined.ds"
						}
					  }
					},
					{
					  "match": "\\G(?=[0-9.])(?!0[xXbB])([0-9](?:[0-9]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?:(?<=[0-9])\\.|\\.(?=[0-9])))([0-9](?:[0-9]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?(?:(?<!')([eE])((?:\\+)?)((?:\\-)?)([0-9](?:[0-9]|(?<=[0-9a-fA-F])'(?=[0-9a-fA-F]))*))?([lLfF](?!\\w))?((?:\\w(?<![0-9eE])\\w*)?$)",
					  "captures": {
						"1": {
						  "name": "constant.numeric.decimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"2": {
						  "name": "punctuation.separator.constant.numeric.ds"
						},
						"3": {
						  "name": "constant.numeric.decimal.point.ds"
						},
						"4": {
						  "name": "constant.numeric.decimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"5": {
						  "name": "punctuation.separator.constant.numeric.ds"
						},
						"6": {
						  "name": "keyword.other.unit.exponent.decimal.ds"
						},
						"7": {
						  "name": "keyword.operator.plus.exponent.decimal.ds"
						},
						"8": {
						  "name": "keyword.operator.minus.exponent.decimal.ds"
						},
						"9": {
						  "name": "constant.numeric.exponent.decimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"10": {
						  "name": "keyword.other.unit.suffix.floating-point.ds"
						},
						"11": {
						  "name": "keyword.other.unit.user-defined.ds"
						}
					  }
					},
					{
					  "match": "(\\G0[bB])([01](?:[01]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)((?:[uU]|(?:[uU]ll?)|(?:[uU]LL?)|(?:ll?[uU]?)|(?:LL?[uU]?)|[fF])(?!\\w))?((?:\\w(?<![0-9])\\w*)?$)",
					  "captures": {
						"1": {
						  "name": "keyword.other.unit.binary.ds"
						},
						"2": {
						  "name": "constant.numeric.binary.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"3": {
						  "name": "punctuation.separator.constant.numeric.ds"
						},
						"4": {
						  "name": "keyword.other.unit.suffix.integer.ds"
						},
						"5": {
						  "name": "keyword.other.unit.user-defined.ds"
						}
					  }
					},
					{
					  "match": "(\\G0)((?:[0-7]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))+)((?:[uU]|(?:[uU]ll?)|(?:[uU]LL?)|(?:ll?[uU]?)|(?:LL?[uU]?)|[fF])(?!\\w))?((?:\\w(?<![0-9])\\w*)?$)",
					  "captures": {
						"1": {
						  "name": "keyword.other.unit.octal.ds"
						},
						"2": {
						  "name": "constant.numeric.octal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"3": {
						  "name": "punctuation.separator.constant.numeric.ds"
						},
						"4": {
						  "name": "keyword.other.unit.suffix.integer.ds"
						},
						"5": {
						  "name": "keyword.other.unit.user-defined.ds"
						}
					  }
					},
					{
					  "match": "(\\G0[xX])([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)(?:(?<!')([pP])((?:\\+)?)((?:\\-)?)([0-9](?:[0-9]|(?<=[0-9a-fA-F])'(?=[0-9a-fA-F]))*))?((?:[uU]|(?:[uU]ll?)|(?:[uU]LL?)|(?:ll?[uU]?)|(?:LL?[uU]?)|[fF])(?!\\w))?((?:\\w(?<![0-9a-fA-FpP])\\w*)?$)",
					  "captures": {
						"1": {
						  "name": "keyword.other.unit.hexadecimal.ds"
						},
						"2": {
						  "name": "constant.numeric.hexadecimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"3": {
						  "name": "punctuation.separator.constant.numeric.ds"
						},
						"4": {
						  "name": "keyword.other.unit.exponent.hexadecimal.ds"
						},
						"5": {
						  "name": "keyword.operator.plus.exponent.hexadecimal.ds"
						},
						"6": {
						  "name": "keyword.operator.minus.exponent.hexadecimal.ds"
						},
						"7": {
						  "name": "constant.numeric.exponent.hexadecimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"8": {
						  "name": "keyword.other.unit.suffix.integer.ds"
						},
						"9": {
						  "name": "keyword.other.unit.user-defined.ds"
						}
					  }
					},
					{
					  "match": "\\G(?=[0-9.])(?!0[xXbB])([0-9](?:[0-9]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)(?:(?<!')([eE])((?:\\+)?)((?:\\-)?)([0-9](?:[0-9]|(?<=[0-9a-fA-F])'(?=[0-9a-fA-F]))*))?((?:[uU]|(?:[uU]ll?)|(?:[uU]LL?)|(?:ll?[uU]?)|(?:LL?[uU]?)|[fF])(?!\\w))?((?:\\w(?<![0-9eE])\\w*)?$)",
					  "captures": {
						"1": {
						  "name": "constant.numeric.decimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"2": {
						  "name": "punctuation.separator.constant.numeric.ds"
						},
						"3": {
						  "name": "keyword.other.unit.exponent.decimal.ds"
						},
						"4": {
						  "name": "keyword.operator.plus.exponent.decimal.ds"
						},
						"5": {
						  "name": "keyword.operator.minus.exponent.decimal.ds"
						},
						"6": {
						  "name": "constant.numeric.exponent.decimal.ds",
						  "patterns": [
							{
							  "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
							  "name": "punctuation.separator.constant.numeric.ds"
							}
						  ]
						},
						"7": {
						  "name": "keyword.other.unit.suffix.integer.ds"
						},
						"8": {
						  "name": "keyword.other.unit.user-defined.ds"
						}
					  }
					},
					{
					  "match": "(?:(?:[0-9a-zA-Z_\\.]|')|(?<=[eEpP])[+-])+",
					  "name": "invalid.illegal.constant.numeric.ds"
					}
				  ]
				}
			  ]
			}
		  }
		},
		"operator_overload": {
		  "begin": "(?:(\\s*+((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:(?:unsigned)|(?:signed)|(?:short)|(?:long))|(?:(?:struct)|(?:class)|(?:union)|(?:enum)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*((?:::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<55>?)+>)(?:\\s)*+)?::)*+)?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?!(?:(?:transaction_safe_dynamic)|(?:__has_cpp_attribute)|(?:reinterpret_cast)|(?:transaction_safe)|(?:atomic_noexcept)|(?:atomic_commit)|(?:atomic_cancel)|(?:__has_include)|(?:dynamic_cast)|(?:synchronized)|(?:thread_local)|(?:static_cast)|(?:const_cast)|(?:constexpr)|(?:consteval)|(?:co_return)|(?:co_return)|(?:constexpr)|(?:protected)|(?:constexpr)|(?:namespace)|(?:noexcept)|(?:typename)|(?:decltype)|(?:template)|(?:operator)|(?:noexcept)|(?:co_yield)|(?:co_await)|(?:continue)|(?:co_await)|(?:co_yield)|(?:volatile)|(?:register)|(?:restrict)|(?:explicit)|(?:override)|(?:volatile)|(?:reflexpr)|(?:noexcept)|(?:requires)|(?:alignas)|(?:typedef)|(?:nullptr)|(?:alignof)|(?:mutable)|(?:concept)|(?:virtual)|(?:defined)|(?:__asm__)|(?:include)|(?:_Pragma)|(?:mutable)|(?:default)|(?:warning)|(?:private)|(?:module)|(?:return)|(?:not_eq)|(?:xor_eq)|(?:and_eq)|(?:ifndef)|(?:pragma)|(?:export)|(?:import)|(?:sizeof)|(?:static)|(?:delete)|(?:public)|(?:define)|(?:extern)|(?:inline)|(?:typeid)|(?:switch)|(?:friend)|(?:bitand)|(?:false)|(?:compl)|(?:bitor)|(?:throw)|(?:or_eq)|(?:while)|(?:catch)|(?:break)|(?:const)|(?:final)|(?:const)|(?:endif)|(?:ifdef)|(?:undef)|(?:error)|(?:using)|(?:audit)|(?:axiom)|(?:line)|(?:else)|(?:elif)|(?:true)|(?:NULL)|(?:case)|(?:goto)|(?:else)|(?:this)|(?:new)|(?:asm)|(?:not)|(?:and)|(?:xor)|(?:try)|(?:for)|(?:if)|(?:do)|(?:or)|(?:if))\\b)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*\\b((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<55>?)+>)?(?![\\w<:.]))(((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:__cdecl|__clrcall|__stdcall|__fastcall|__thiscall|__vectorcall)?)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<55>?)+>)(?:\\s)*+)?::)*+)(operator)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<55>?)+>)(?:\\s)*+)?::)*+)(?:(?:((?:(?:delete\\[\\])|(?:delete)|(?:new\\[\\])|(?:<=>)|(?:<<=)|(?:new)|(?:>>=)|(?:\\->\\*)|(?:\\/=)|(?:%=)|(?:&=)|(?:>=)|(?:\\|=)|(?:\\+\\+)|(?:\\-\\-)|(?:\\(\\))|(?:\\[\\])|(?:\\->)|(?:\\+\\+)|(?:<<)|(?:>>)|(?:\\-\\-)|(?:<=)|(?:\\^=)|(?:==)|(?:!=)|(?:&&)|(?:\\|\\|)|(?:\\+=)|(?:\\-=)|(?:\\*=)|,|(?:\\+)|(?:\\-)|!|~|(?:\\*)|&|(?:\\*)|(?:\\/)|%|(?:\\+)|(?:\\-)|<|>|&|(?:\\^)|(?:\\|)|=))|((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)(((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:\\[\\])?)))|(\"\")((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=\\<|\\()",
		  "end": "(?:(?<=\\}|%>|\\?\\?>)|(?=[;>\\[\\]=]))",
		  "beginCaptures": {
			"0": {
			  "name": "meta.head.function.definition.special.operator-overload.ds"
			},
			"1": {
			  "name": "meta.qualified_type.ds",
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.ds"
				},
				{
				  "match": "(?<!\\w)(?:(?:struct)|(?:class)|(?:union)|(?:enum))(?!\\w)",
				  "name": "storage.type.$0.ds"
				},
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#storage_types"
				},
				{
				  "include": "#number_literal"
				},
				{
				  "include": "#string_context"
				},
				{
				  "include": "#comma"
				},
				{
				  "include": "#scope_resolution_inner_generated"
				},
				{
				  "begin": "<",
				  "end": ">",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.begin.template.call.ds"
					}
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.end.template.call.ds"
					}
				  },
				  "name": "meta.template.call.ds",
				  "patterns": [
					{
					  "include": "#template_call_context"
					}
				  ]
				},
				{
				  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
				  "name": "entity.name.type.ds"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#number_literal"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"4": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"5": {
			  "name": "comment.block.ds"
			},
			"6": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"8": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"9": {
			  "name": "comment.block.ds"
			},
			"10": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.type.ds"
				},
				{
				  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
				  "name": "entity.name.scope-resolution.type.ds"
				},
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"12": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"13": {
			},
			"14": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"15": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"16": {
			  "name": "comment.block.ds"
			},
			"17": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"18": {
			},
			"19": {
			  "patterns": [
				{
				  "match": "\\*",
				  "name": "storage.modifier.pointer.ds"
				},
				{
				  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  },
				  "name": "invalid.illegal.reference-type.ds"
				},
				{
				  "match": "\\&",
				  "name": "storage.modifier.reference.ds"
				}
			  ]
			},
			"20": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"21": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"22": {
			  "name": "comment.block.ds"
			},
			"23": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"24": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"25": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"26": {
			  "name": "comment.block.ds"
			},
			"27": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"28": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"29": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"30": {
			  "name": "comment.block.ds"
			},
			"31": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"32": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"33": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"34": {
			  "name": "comment.block.ds"
			},
			"35": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"36": {
			  "name": "storage.type.modifier.calling-convention.ds"
			},
			"37": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"38": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"39": {
			  "name": "comment.block.ds"
			},
			"40": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"41": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"42": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"43": {
			  "name": "comment.block.ds"
			},
			"44": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"45": {
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.operator.ds"
				},
				{
				  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
				  "name": "entity.name.scope-resolution.operator.ds"
				},
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"46": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"47": {
			},
			"48": {
			  "name": "keyword.other.operator.overload.ds"
			},
			"49": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"50": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"51": {
			  "name": "comment.block.ds"
			},
			"52": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"53": {
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.operator-overload.ds"
				},
				{
				  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
				  "name": "entity.name.scope-resolution.operator-overload.ds"
				},
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"54": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"55": {
			},
			"56": {
			  "name": "entity.name.operator.ds"
			},
			"57": {
			  "name": "entity.name.operator.type.ds"
			},
			"58": {
			  "patterns": [
				{
				  "match": "\\*",
				  "name": "entity.name.operator.type.pointer.ds"
				},
				{
				  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  },
				  "name": "invalid.illegal.reference-type.ds"
				},
				{
				  "match": "\\&",
				  "name": "entity.name.operator.type.reference.ds"
				}
			  ]
			},
			"59": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"60": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"61": {
			  "name": "comment.block.ds"
			},
			"62": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"63": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"64": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"65": {
			  "name": "comment.block.ds"
			},
			"66": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"67": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"68": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"69": {
			  "name": "comment.block.ds"
			},
			"70": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"71": {
			  "name": "entity.name.operator.type.array.ds"
			},
			"72": {
			  "name": "entity.name.operator.custom-literal.ds"
			},
			"73": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"74": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"75": {
			  "name": "comment.block.ds"
			},
			"76": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"77": {
			  "name": "entity.name.operator.custom-literal.ds"
			},
			"78": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"79": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"80": {
			  "name": "comment.block.ds"
			},
			"81": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			}
		  },
		  "endCaptures": {
		  },
		  "name": "meta.function.definition.special.operator-overload.ds",
		  "patterns": [
			{
			  "begin": "\\G ?",
			  "end": "(?:\\{|<%|\\?\\?<|(?=;))",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.begin.bracket.curly.function.definition.special.operator-overload.ds"
				}
			  },
			  "name": "meta.head.function.definition.special.operator-overload.ds",
			  "patterns": [
				{
				  "include": "#ever_present_context"
				},
				{
				  "include": "#template_call_range"
				},
				{
				  "begin": "\\(",
				  "end": "\\)",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.section.parameters.begin.bracket.round.special.operator-overload.ds"
					}
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.parameters.end.bracket.round.special.operator-overload.ds"
					}
				  },
				  "contentName": "meta.function.definition.parameters.special.operator-overload",
				  "patterns": [
					{
					  "include": "#function_parameter_context"
					},
					{
					  "include": "#evaluation_context"
					}
				  ]
				},
				{
				  "include": "#qualifiers_and_specifiers_post_parameters"
				},
				{
				  "include": "$self"
				}
			  ]
			},
			{
			  "begin": "(?<=\\{|<%|\\?\\?<)",
			  "end": "\\}|%>|\\?\\?>",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.end.bracket.curly.function.definition.special.operator-overload.ds"
				}
			  },
			  "name": "meta.body.function.definition.special.operator-overload.ds",
			  "patterns": [
				{
				  "include": "#function_body_context"
				}
			  ]
			},
			{
			  "begin": "(?<=\\}|%>|\\?\\?>)[\\s]*",
			  "end": "[\\s]*(?=;)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "name": "meta.tail.function.definition.special.operator-overload.ds",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ]
			}
		  ]
		},
		"operators": {
		  "patterns": [
			{
			  "begin": "((?<!\\w)sizeof(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()",
			  "end": "\\)",
			  "beginCaptures": {
				"1": {
				  "name": "keyword.operator.functionlike.ds keyword.operator.sizeof.ds"
				},
				"2": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"3": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"4": {
				  "name": "comment.block.ds"
				},
				"5": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"6": {
				  "name": "punctuation.section.arguments.begin.bracket.round.operator.sizeof.ds"
				}
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.arguments.end.bracket.round.operator.sizeof.ds"
				}
			  },
			  "contentName": "meta.arguments.operator.sizeof",
			  "patterns": [
				{
				  "include": "#evaluation_context"
				}
			  ]
			},
			{
			  "begin": "((?<!\\w)alignof(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()",
			  "end": "\\)",
			  "beginCaptures": {
				"1": {
				  "name": "keyword.operator.functionlike.ds keyword.operator.alignof.ds"
				},
				"2": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"3": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"4": {
				  "name": "comment.block.ds"
				},
				"5": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"6": {
				  "name": "punctuation.section.arguments.begin.bracket.round.operator.alignof.ds"
				}
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.arguments.end.bracket.round.operator.alignof.ds"
				}
			  },
			  "contentName": "meta.arguments.operator.alignof",
			  "patterns": [
				{
				  "include": "#evaluation_context"
				}
			  ]
			},
			{
			  "begin": "((?<!\\w)alignas(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()",
			  "end": "\\)",
			  "beginCaptures": {
				"1": {
				  "name": "keyword.operator.functionlike.ds keyword.operator.alignas.ds"
				},
				"2": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"3": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"4": {
				  "name": "comment.block.ds"
				},
				"5": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"6": {
				  "name": "punctuation.section.arguments.begin.bracket.round.operator.alignas.ds"
				}
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.arguments.end.bracket.round.operator.alignas.ds"
				}
			  },
			  "contentName": "meta.arguments.operator.alignas",
			  "patterns": [
				{
				  "include": "#evaluation_context"
				}
			  ]
			},
			{
			  "begin": "((?<!\\w)typeid(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()",
			  "end": "\\)",
			  "beginCaptures": {
				"1": {
				  "name": "keyword.operator.functionlike.ds keyword.operator.typeid.ds"
				},
				"2": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"3": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"4": {
				  "name": "comment.block.ds"
				},
				"5": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"6": {
				  "name": "punctuation.section.arguments.begin.bracket.round.operator.typeid.ds"
				}
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.arguments.end.bracket.round.operator.typeid.ds"
				}
			  },
			  "contentName": "meta.arguments.operator.typeid",
			  "patterns": [
				{
				  "include": "#evaluation_context"
				}
			  ]
			},
			{
			  "begin": "((?<!\\w)noexcept(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()",
			  "end": "\\)",
			  "beginCaptures": {
				"1": {
				  "name": "keyword.operator.functionlike.ds keyword.operator.noexcept.ds"
				},
				"2": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"3": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"4": {
				  "name": "comment.block.ds"
				},
				"5": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"6": {
				  "name": "punctuation.section.arguments.begin.bracket.round.operator.noexcept.ds"
				}
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.arguments.end.bracket.round.operator.noexcept.ds"
				}
			  },
			  "contentName": "meta.arguments.operator.noexcept",
			  "patterns": [
				{
				  "include": "#evaluation_context"
				}
			  ]
			},
			{
			  "begin": "(\\bsizeof\\.\\.\\.)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()",
			  "end": "\\)",
			  "beginCaptures": {
				"1": {
				  "name": "keyword.operator.functionlike.ds keyword.operator.sizeof.variadic.ds"
				},
				"2": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"3": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"4": {
				  "name": "comment.block.ds"
				},
				"5": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"6": {
				  "name": "punctuation.section.arguments.begin.bracket.round.operator.sizeof.variadic.ds"
				}
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.arguments.end.bracket.round.operator.sizeof.variadic.ds"
				}
			  },
			  "contentName": "meta.arguments.operator.sizeof.variadic",
			  "patterns": [
				{
				  "include": "#evaluation_context"
				}
			  ]
			},
			{
			  "match": "--",
			  "name": "keyword.operator.decrement.ds"
			},
			{
			  "match": "\\+\\+",
			  "name": "keyword.operator.increment.ds"
			},
			{
			  "match": "%=|\\+=|-=|\\*=|(?<!\\()\\/=",
			  "name": "keyword.operator.assignment.compound.ds"
			},
			{
			  "match": "&=|\\^=|<<=|>>=|\\|=",
			  "name": "keyword.operator.assignment.compound.bitwise.ds"
			},
			{
			  "match": "<<|>>",
			  "name": "keyword.operator.bitwise.shift.ds"
			},
			{
			  "match": "!=|<=|>=|==|<|>",
			  "name": "keyword.operator.comparison.ds"
			},
			{
			  "match": "&&|!|\\|\\|",
			  "name": "keyword.operator.logical.ds"
			},
			{
			  "match": "&|\\||\\^|~",
			  "name": "keyword.operator.ds"
			},
			{
			  "include": "#assignment_operator"
			},
			{
			  "match": "%|\\*|\\/|-|\\+",
			  "name": "keyword.operator.ds"
			},
			{
			  "include": "#ternary_operator"
			}
		  ]
		},
		"over_qualified_types": {
		  "patterns": [
			{
			  "match": "(struct)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?((?:(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))?)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:\\[((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\]((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?(?=,|\\)|\\n)",
			  "captures": {
				"1": {
				  "name": "storage.type.struct.parameter.ds"
				},
				"2": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"3": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"4": {
				  "name": "entity.name.type.struct.parameter.ds"
				},
				"5": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"6": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"7": {
				  "patterns": [
					{
					  "match": "\\*",
					  "name": "storage.modifier.pointer.ds"
					},
					{
					  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
					  "captures": {
						"1": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"2": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"3": {
						  "name": "comment.block.ds"
						},
						"4": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  },
					  "name": "invalid.illegal.reference-type.ds"
					},
					{
					  "match": "\\&",
					  "name": "storage.modifier.reference.ds"
					}
				  ]
				},
				"8": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"9": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"10": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"11": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"12": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"13": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"14": {
				  "name": "variable.other.object.declare.ds"
				},
				"15": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"16": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"17": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"18": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"19": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"20": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				}
			  }
			},
			{
			  "match": "(enum)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?((?:(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))?)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:\\[((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\]((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?(?=,|\\)|\\n)",
			  "captures": {
				"1": {
				  "name": "storage.type.enum.parameter.ds"
				},
				"2": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"3": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"4": {
				  "name": "entity.name.type.enum.parameter.ds"
				},
				"5": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"6": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"7": {
				  "patterns": [
					{
					  "match": "\\*",
					  "name": "storage.modifier.pointer.ds"
					},
					{
					  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
					  "captures": {
						"1": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"2": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"3": {
						  "name": "comment.block.ds"
						},
						"4": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  },
					  "name": "invalid.illegal.reference-type.ds"
					},
					{
					  "match": "\\&",
					  "name": "storage.modifier.reference.ds"
					}
				  ]
				},
				"8": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"9": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"10": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"11": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"12": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"13": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"14": {
				  "name": "variable.other.object.declare.ds"
				},
				"15": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"16": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"17": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"18": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"19": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"20": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				}
			  }
			},
			{
			  "match": "(union)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?((?:(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))?)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:\\[((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\]((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?(?=,|\\)|\\n)",
			  "captures": {
				"1": {
				  "name": "storage.type.union.parameter.ds"
				},
				"2": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"3": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"4": {
				  "name": "entity.name.type.union.parameter.ds"
				},
				"5": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"6": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"7": {
				  "patterns": [
					{
					  "match": "\\*",
					  "name": "storage.modifier.pointer.ds"
					},
					{
					  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
					  "captures": {
						"1": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"2": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"3": {
						  "name": "comment.block.ds"
						},
						"4": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  },
					  "name": "invalid.illegal.reference-type.ds"
					},
					{
					  "match": "\\&",
					  "name": "storage.modifier.reference.ds"
					}
				  ]
				},
				"8": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"9": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"10": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"11": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"12": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"13": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"14": {
				  "name": "variable.other.object.declare.ds"
				},
				"15": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"16": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"17": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"18": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"19": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"20": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				}
			  }
			},
			{
			  "match": "(class)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?((?:(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))?)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:\\[((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\]((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?(?=,|\\)|\\n)",
			  "captures": {
				"1": {
				  "name": "storage.type.class.parameter.ds"
				},
				"2": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"3": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"4": {
				  "name": "entity.name.type.class.parameter.ds"
				},
				"5": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"6": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"7": {
				  "patterns": [
					{
					  "match": "\\*",
					  "name": "storage.modifier.pointer.ds"
					},
					{
					  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
					  "captures": {
						"1": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"2": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"3": {
						  "name": "comment.block.ds"
						},
						"4": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  },
					  "name": "invalid.illegal.reference-type.ds"
					},
					{
					  "match": "\\&",
					  "name": "storage.modifier.reference.ds"
					}
				  ]
				},
				"8": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"9": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"10": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"11": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"12": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"13": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"14": {
				  "name": "variable.other.object.declare.ds"
				},
				"15": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"16": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"17": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"18": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"19": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"20": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				}
			  }
			}
		  ]
		},
		"parameter": {
		  "begin": "((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=\\w)",
		  "end": "(?:(?=\\))|(,))",
		  "beginCaptures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"3": {
			  "name": "comment.block.ds"
			},
			"4": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			}
		  },
		  "endCaptures": {
			"1": {
			  "name": "punctuation.separator.delimiter.comma.ds"
			}
		  },
		  "name": "meta.parameter.ds",
		  "patterns": [
			{
			  "include": "#ever_present_context"
			},
			{
			  "include": "#function_pointer_parameter"
			},
			{
			  "include": "#decltype"
			},
			{
			  "include": "#vararg_ellipses"
			},
			{
			  "match": "((?:((?:(?:volatile)|(?:register)|(?:restrict)|(?:static)|(?:extern)|(?:const)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))+)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:\\s)*+(?<!\\w)(?:(?:(?:((?:(?:unsigned)|(?:wchar_t)|(?:double)|(?:signed)|(?:short)|(?:float)|(?:auto)|(?:void)|(?:long)|(?:char)|(?:bool)|(?:int)))|((?:(?:uint_least32_t)|(?:uint_least64_t)|(?:uint_least16_t)|(?:uint_fast64_t)|(?:uint_least8_t)|(?:int_least64_t)|(?:int_least32_t)|(?:int_least16_t)|(?:uint_fast16_t)|(?:uint_fast32_t)|(?:int_least8_t)|(?:int_fast16_t)|(?:int_fast32_t)|(?:int_fast64_t)|(?:uint_fast8_t)|(?:int_fast8_t)|(?:suseconds_t)|(?:useconds_t)|(?:uintmax_t)|(?:uintmax_t)|(?:in_port_t)|(?:uintmax_t)|(?:in_addr_t)|(?:blksize_t)|(?:uintptr_t)|(?:intmax_t)|(?:intptr_t)|(?:blkcnt_t)|(?:intmax_t)|(?:u_quad_t)|(?:uint16_t)|(?:uint32_t)|(?:uint64_t)|(?:ssize_t)|(?:fixpt_t)|(?:qaddr_t)|(?:u_short)|(?:int16_t)|(?:int32_t)|(?:int64_t)|(?:uint8_t)|(?:daddr_t)|(?:caddr_t)|(?:swblk_t)|(?:clock_t)|(?:segsz_t)|(?:nlink_t)|(?:time_t)|(?:u_long)|(?:ushort)|(?:quad_t)|(?:mode_t)|(?:size_t)|(?:u_char)|(?:int8_t)|(?:u_int)|(?:uid_t)|(?:off_t)|(?:pid_t)|(?:gid_t)|(?:dev_t)|(?:div_t)|(?:key_t)|(?:ino_t)|(?:id_t)|(?:id_t)|(?:uint))))|((?:(?:pthread_rwlockattr_t)|(?:pthread_mutexattr_t)|(?:pthread_condattr_t)|(?:pthread_rwlock_t)|(?:pthread_mutex_t)|(?:pthread_cond_t)|(?:pthread_attr_t)|(?:pthread_once_t)|(?:pthread_key_t)|(?:pthread_t))))|([a-zA-Z_](?:\\w)*_t))(?!\\w)|((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\b\\b(?<!\\Wvolatile|^volatile|\\Wregister|^register|\\Wrestrict|^restrict|\\Wstatic|^static|\\Wextern|^extern|\\Wconst|^const)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=,|\\)|=)",
			  "captures": {
				"1": {
				  "patterns": [
					{
					  "include": "#storage_types"
					}
				  ]
				},
				"2": {
				  "name": "storage.modifier.specifier.parameter.ds"
				},
				"3": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"4": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"5": {
				  "name": "comment.block.ds"
				},
				"6": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"7": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"8": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"9": {
				  "name": "comment.block.ds"
				},
				"10": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"11": {
				  "name": "storage.type.primitive.ds storage.type.built-in.primitive.ds"
				},
				"12": {
				  "name": "storage.type.ds storage.type.built-in.ds"
				},
				"13": {
				  "name": "support.type.posix-reserved.pthread.ds support.type.built-in.posix-reserved.pthread.ds"
				},
				"14": {
				  "name": "support.type.posix-reserved.ds support.type.built-in.posix-reserved.ds"
				},
				"15": {
				  "name": "entity.name.type.parameter.ds"
				},
				"16": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"17": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"18": {
				  "name": "comment.block.ds"
				},
				"19": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				}
			  }
			},
			{
			  "include": "#storage_types"
			},
			{
			  "include": "#scope_resolution_parameter_inner_generated"
			},
			{
			  "match": "(?:(?:struct)|(?:class)|(?:union)|(?:enum))",
			  "name": "storage.type.$0.ds"
			},
			{
			  "begin": "(?<==)",
			  "end": "(?:(?=\\))|(,))",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"1": {
				  "name": "punctuation.separator.delimiter.comma.ds"
				}
			  },
			  "patterns": [
				{
				  "include": "#evaluation_context"
				}
			  ]
			},
			{
			  "match": "\\=",
			  "name": "keyword.operator.assignment.ds"
			},
			{
			  "match": "(?<!\\s|\\(|,|:)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=\\)|,|\\[|=|\\n)",
			  "captures": {
				"1": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"2": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"3": {
				  "name": "comment.block.ds"
				},
				"4": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"5": {
				  "name": "variable.parameter.ds"
				},
				"6": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"7": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"8": {
				  "name": "comment.block.ds"
				},
				"9": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				}
			  }
			},
			{
			  "include": "#attributes_context"
			},
			{
			  "begin": "\\[",
			  "end": "\\]",
			  "beginCaptures": {
				"0": {
				  "name": "punctuation.definition.begin.bracket.square.array.type.ds"
				}
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.definition.end.bracket.square.array.type.ds"
				}
			  },
			  "name": "meta.bracket.square.array.ds",
			  "patterns": [
				{
				  "include": "#evaluation_context"
				}
			  ]
			},
			{
			  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*\\b(?<!\\Wstruct|^struct|\\Wclass|^class|\\Wunion|^union|\\Wenum|^enum)",
			  "name": "entity.name.type.parameter.ds"
			},
			{
			  "include": "#template_call_range"
			},
			{
			  "match": "((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*))",
			  "captures": {
				"0": {
				  "patterns": [
					{
					  "match": "\\*",
					  "name": "storage.modifier.pointer.ds"
					},
					{
					  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
					  "captures": {
						"1": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"2": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"3": {
						  "name": "comment.block.ds"
						},
						"4": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  },
					  "name": "invalid.illegal.reference-type.ds"
					},
					{
					  "match": "\\&",
					  "name": "storage.modifier.reference.ds"
					}
				  ]
				},
				"1": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"2": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"3": {
				  "name": "comment.block.ds"
				},
				"4": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"5": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"6": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"7": {
				  "name": "comment.block.ds"
				},
				"8": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				}
			  }
			}
		  ]
		},
		"parameter_class": {
		  "match": "(class)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?((?:(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))?)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:\\[((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\]((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?(?=,|\\)|\\n)",
		  "captures": {
			"1": {
			  "name": "storage.type.class.parameter.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"4": {
			  "name": "entity.name.type.class.parameter.ds"
			},
			"5": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"6": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "match": "\\*",
				  "name": "storage.modifier.pointer.ds"
				},
				{
				  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  },
				  "name": "invalid.illegal.reference-type.ds"
				},
				{
				  "match": "\\&",
				  "name": "storage.modifier.reference.ds"
				}
			  ]
			},
			"8": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"9": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"10": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"12": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"13": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"14": {
			  "name": "variable.other.object.declare.ds"
			},
			"15": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"16": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"17": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"18": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"19": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"20": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			}
		  }
		},
		"parameter_enum": {
		  "match": "(enum)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?((?:(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))?)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:\\[((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\]((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?(?=,|\\)|\\n)",
		  "captures": {
			"1": {
			  "name": "storage.type.enum.parameter.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"4": {
			  "name": "entity.name.type.enum.parameter.ds"
			},
			"5": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"6": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "match": "\\*",
				  "name": "storage.modifier.pointer.ds"
				},
				{
				  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  },
				  "name": "invalid.illegal.reference-type.ds"
				},
				{
				  "match": "\\&",
				  "name": "storage.modifier.reference.ds"
				}
			  ]
			},
			"8": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"9": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"10": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"12": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"13": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"14": {
			  "name": "variable.other.object.declare.ds"
			},
			"15": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"16": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"17": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"18": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"19": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"20": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			}
		  }
		},
		"parameter_or_maybe_value": {
		  "begin": "((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=\\w)",
		  "end": "(?:(?=\\))|(,))",
		  "beginCaptures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"3": {
			  "name": "comment.block.ds"
			},
			"4": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			}
		  },
		  "endCaptures": {
			"1": {
			  "name": "punctuation.separator.delimiter.comma.ds"
			}
		  },
		  "name": "meta.parameter.ds",
		  "patterns": [
			{
			  "include": "#ever_present_context"
			},
			{
			  "include": "#function_pointer_parameter"
			},
			{
			  "include": "#memory_operators"
			},
			{
			  "include": "#builtin_storage_type_initilizer"
			},
			{
			  "include": "#curly_initializer"
			},
			{
			  "include": "#decltype"
			},
			{
			  "include": "#vararg_ellipses"
			},
			{
			  "match": "((?:((?:(?:volatile)|(?:register)|(?:restrict)|(?:static)|(?:extern)|(?:const)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))+)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:\\s)*+(?<!\\w)(?:(?:(?:((?:(?:unsigned)|(?:wchar_t)|(?:double)|(?:signed)|(?:short)|(?:float)|(?:auto)|(?:void)|(?:long)|(?:char)|(?:bool)|(?:int)))|((?:(?:uint_least32_t)|(?:uint_least64_t)|(?:uint_least16_t)|(?:uint_fast64_t)|(?:uint_least8_t)|(?:int_least64_t)|(?:int_least32_t)|(?:int_least16_t)|(?:uint_fast16_t)|(?:uint_fast32_t)|(?:int_least8_t)|(?:int_fast16_t)|(?:int_fast32_t)|(?:int_fast64_t)|(?:uint_fast8_t)|(?:int_fast8_t)|(?:suseconds_t)|(?:useconds_t)|(?:uintmax_t)|(?:uintmax_t)|(?:in_port_t)|(?:uintmax_t)|(?:in_addr_t)|(?:blksize_t)|(?:uintptr_t)|(?:intmax_t)|(?:intptr_t)|(?:blkcnt_t)|(?:intmax_t)|(?:u_quad_t)|(?:uint16_t)|(?:uint32_t)|(?:uint64_t)|(?:ssize_t)|(?:fixpt_t)|(?:qaddr_t)|(?:u_short)|(?:int16_t)|(?:int32_t)|(?:int64_t)|(?:uint8_t)|(?:daddr_t)|(?:caddr_t)|(?:swblk_t)|(?:clock_t)|(?:segsz_t)|(?:nlink_t)|(?:time_t)|(?:u_long)|(?:ushort)|(?:quad_t)|(?:mode_t)|(?:size_t)|(?:u_char)|(?:int8_t)|(?:u_int)|(?:uid_t)|(?:off_t)|(?:pid_t)|(?:gid_t)|(?:dev_t)|(?:div_t)|(?:key_t)|(?:ino_t)|(?:id_t)|(?:id_t)|(?:uint))))|((?:(?:pthread_rwlockattr_t)|(?:pthread_mutexattr_t)|(?:pthread_condattr_t)|(?:pthread_rwlock_t)|(?:pthread_mutex_t)|(?:pthread_cond_t)|(?:pthread_attr_t)|(?:pthread_once_t)|(?:pthread_key_t)|(?:pthread_t))))|([a-zA-Z_](?:\\w)*_t))(?!\\w)|((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\b\\b(?<!\\Wvolatile|^volatile|\\Wregister|^register|\\Wrestrict|^restrict|\\Wstatic|^static|\\Wextern|^extern|\\Wconst|^const)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=,|\\)|=)",
			  "captures": {
				"1": {
				  "patterns": [
					{
					  "include": "#storage_types"
					}
				  ]
				},
				"2": {
				  "name": "storage.modifier.specifier.parameter.ds"
				},
				"3": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"4": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"5": {
				  "name": "comment.block.ds"
				},
				"6": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"7": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"8": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"9": {
				  "name": "comment.block.ds"
				},
				"10": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"11": {
				  "name": "storage.type.primitive.ds storage.type.built-in.primitive.ds"
				},
				"12": {
				  "name": "storage.type.ds storage.type.built-in.ds"
				},
				"13": {
				  "name": "support.type.posix-reserved.pthread.ds support.type.built-in.posix-reserved.pthread.ds"
				},
				"14": {
				  "name": "support.type.posix-reserved.ds support.type.built-in.posix-reserved.ds"
				},
				"15": {
				  "name": "entity.name.type.parameter.ds"
				},
				"16": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"17": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"18": {
				  "name": "comment.block.ds"
				},
				"19": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				}
			  }
			},
			{
			  "include": "#storage_types"
			},
			{
			  "include": "#function_call"
			},
			{
			  "include": "#scope_resolution_parameter_inner_generated"
			},
			{
			  "match": "(?:(?:struct)|(?:class)|(?:union)|(?:enum))",
			  "name": "storage.type.$0.ds"
			},
			{
			  "begin": "(?<==)",
			  "end": "(?:(?=\\))|(,))",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"1": {
				  "name": "punctuation.separator.delimiter.comma.ds"
				}
			  },
			  "patterns": [
				{
				  "include": "#evaluation_context"
				}
			  ]
			},
			{
			  "match": "(?<!\\s|\\(|,|:)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=(?:\\)|,|\\[|=|\\/\\/|(?:(?:\\n)|$)))",
			  "captures": {
				"1": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"2": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"3": {
				  "name": "comment.block.ds"
				},
				"4": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"5": {
				  "name": "variable.parameter.ds"
				},
				"6": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"7": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"8": {
				  "name": "comment.block.ds"
				},
				"9": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				}
			  }
			},
			{
			  "include": "#attributes_context"
			},
			{
			  "begin": "\\[",
			  "end": "\\]",
			  "beginCaptures": {
				"0": {
				  "name": "punctuation.definition.begin.bracket.square.array.type.ds"
				}
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.definition.end.bracket.square.array.type.ds"
				}
			  },
			  "name": "meta.bracket.square.array.ds",
			  "patterns": [
				{
				  "include": "#evaluation_context"
				}
			  ]
			},
			{
			  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*\\b(?<!\\Wstruct|^struct|\\Wclass|^class|\\Wunion|^union|\\Wenum|^enum)",
			  "name": "entity.name.type.parameter.ds"
			},
			{
			  "include": "#template_call_range"
			},
			{
			  "match": "((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*))",
			  "captures": {
				"0": {
				  "patterns": [
					{
					  "match": "\\*",
					  "name": "storage.modifier.pointer.ds"
					},
					{
					  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
					  "captures": {
						"1": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"2": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"3": {
						  "name": "comment.block.ds"
						},
						"4": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  },
					  "name": "invalid.illegal.reference-type.ds"
					},
					{
					  "match": "\\&",
					  "name": "storage.modifier.reference.ds"
					}
				  ]
				},
				"1": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"2": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"3": {
				  "name": "comment.block.ds"
				},
				"4": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"5": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"6": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"7": {
				  "name": "comment.block.ds"
				},
				"8": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				}
			  }
			},
			{
			  "include": "#evaluation_context"
			}
		  ]
		},
		"parameter_struct": {
		  "match": "(struct)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?((?:(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))?)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:\\[((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\]((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?(?=,|\\)|\\n)",
		  "captures": {
			"1": {
			  "name": "storage.type.struct.parameter.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"4": {
			  "name": "entity.name.type.struct.parameter.ds"
			},
			"5": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"6": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "match": "\\*",
				  "name": "storage.modifier.pointer.ds"
				},
				{
				  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  },
				  "name": "invalid.illegal.reference-type.ds"
				},
				{
				  "match": "\\&",
				  "name": "storage.modifier.reference.ds"
				}
			  ]
			},
			"8": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"9": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"10": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"12": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"13": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"14": {
			  "name": "variable.other.object.declare.ds"
			},
			"15": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"16": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"17": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"18": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"19": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"20": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			}
		  }
		},
		"parameter_union": {
		  "match": "(union)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?((?:(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))?)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:\\[((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\]((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?(?=,|\\)|\\n)",
		  "captures": {
			"1": {
			  "name": "storage.type.union.parameter.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"4": {
			  "name": "entity.name.type.union.parameter.ds"
			},
			"5": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"6": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "match": "\\*",
				  "name": "storage.modifier.pointer.ds"
				},
				{
				  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  },
				  "name": "invalid.illegal.reference-type.ds"
				},
				{
				  "match": "\\&",
				  "name": "storage.modifier.reference.ds"
				}
			  ]
			},
			"8": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"9": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"10": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"12": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"13": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"14": {
			  "name": "variable.other.object.declare.ds"
			},
			"15": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"16": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"17": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"18": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"19": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"20": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			}
		  }
		},
		"parentheses": {
		  "begin": "\\(",
		  "end": "\\)",
		  "beginCaptures": {
			"0": {
			  "name": "punctuation.section.parens.begin.bracket.round.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.parens.end.bracket.round.ds"
			}
		  },
		  "name": "meta.parens.ds",
		  "patterns": [
			{
			  "include": "#over_qualified_types"
			},
			{
			  "match": "(?<!:):(?!:)",
			  "name": "punctuation.separator.colon.range-based.ds"
			},
			{
			  "include": "#evaluation_context"
			}
		  ]
		},
		"pragma": {
		  "begin": "^((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(#)(?:(?:\\s)+)?pragma\\b",
		  "end": "(?<!\\\\)(?=\\n)",
		  "beginCaptures": {
			"0": {
			  "name": "keyword.control.directive.pragma.ds"
			},
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"3": {
			  "name": "comment.block.ds"
			},
			"4": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"5": {
			  "name": "punctuation.definition.directive.ds"
			}
		  },
		  "endCaptures": {
		  },
		  "name": "meta.preprocessor.pragma.ds",
		  "patterns": [
			{
			  "include": "#comments"
			},
			{
			  "include": "#string_context"
			},
			{
			  "match": "[a-zA-Z_$][\\w\\-$]*",
			  "name": "entity.other.attribute-name.pragma.preprocessor.ds"
			},
			{
			  "include": "#preprocessor_number_literal"
			},
			{
			  "include": "#line_continuation_character"
			}
		  ]
		},
		"pragma_mark": {
		  "match": "(^((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(#)(?:(?:\\s)+)?pragma(?:\\s)+mark)(?:\\s)+(.*)",
		  "captures": {
			"1": {
			  "name": "keyword.control.directive.pragma.pragma-mark.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"4": {
			  "name": "punctuation.definition.directive.ds"
			},
			"5": {
			  "name": "entity.name.tag.pragma-mark.ds"
			}
		  },
		  "name": "meta.preprocessor.pragma.ds"
		},
		"predefined_macros": {
		  "patterns": [
			{
			  "match": "\\b(__DS_VERSION__|__cplusplus|__DATE__|__FILE__|__LINE__|__STDC__|__STDC_HOSTED__|__STDC_NO_COMPLEX__|__STDC_VERSION__|__STDCPP_THREADS__|__TIME__|NDEBUG|__OBJC__|__ASSEMBLER__|__ATOM__|__AVX__|__AVX2__|_CHAR_UNSIGNED|__CLR_VER|_CONTROL_FLOW_GUARD|__COUNTER__|__cplusplus_cli|__cplusplus_winrt|_CPPRTTI|_CPPUNWIND|_DEBUG|_DLL|__FUNCDNAME__|__FUNCSIG__|__FUNCTION__|_INTEGRAL_MAX_BITS|__INTELLISENSE__|_ISO_VOLATILE|_KERNEL_MODE|_M_AMD64|_M_ARM|_M_ARM_ARMV7VE|_M_ARM_FP|_M_ARM64|_M_CEE|_M_CEE_PURE|_M_CEE_SAFE|_M_FP_EXCEPT|_M_FP_FAST|_M_FP_PRECISE|_M_FP_STRICT|_M_IX86|_M_IX86_FP|_M_X64|_MANAGED|_MSC_BUILD|_MSC_EXTENSIONS|_MSC_FULL_VER|_MSC_VER|_MSVC_LANG|__MSVC_RUNTIME_CHECKS|_MT|_NATIVE_WCHAR_T_DEFINED|_OPENMP|_PREFAST|__TIMESTAMP__|_VC_NO_DEFAULTLIB|_WCHAR_T_DEFINED|_WIN32|_WIN64|_WINRT_DLL|_ATL_VER|_MFC_VER|__GFORTRAN__|__GNUC__|__GNUC_MINOR__|__GNUC_PATCHLEVEL__|__GNUG__|__STRICT_ANSI__|__BASE_FILE__|__INCLUDE_LEVEL__|__ELF__|__VERSION__|__OPTIMIZE__|__OPTIMIZE_SIZE__|__NO_INLINE__|__GNUC_STDC_INLINE__|__CHAR_UNSIGNED__|__WCHAR_UNSIGNED__|__REGISTER_PREFIX__|__REGISTER_PREFIX__|__SIZE_TYPE__|__PTRDIFF_TYPE__|__WCHAR_TYPE__|__WINT_TYPE__|__INTMAX_TYPE__|__UINTMAX_TYPE__|__SIG_ATOMIC_TYPE__|__INT8_TYPE__|__INT16_TYPE__|__INT32_TYPE__|__INT64_TYPE__|__UINT8_TYPE__|__UINT16_TYPE__|__UINT32_TYPE__|__UINT64_TYPE__|__INT_LEAST8_TYPE__|__INT_LEAST16_TYPE__|__INT_LEAST32_TYPE__|__INT_LEAST64_TYPE__|__UINT_LEAST8_TYPE__|__UINT_LEAST16_TYPE__|__UINT_LEAST32_TYPE__|__UINT_LEAST64_TYPE__|__INT_FAST8_TYPE__|__INT_FAST16_TYPE__|__INT_FAST32_TYPE__|__INT_FAST64_TYPE__|__UINT_FAST8_TYPE__|__UINT_FAST16_TYPE__|__UINT_FAST32_TYPE__|__UINT_FAST64_TYPE__|__INTPTR_TYPE__|__UINTPTR_TYPE__|__CHAR_BIT__|__SCHAR_MAX__|__WCHAR_MAX__|__SHRT_MAX__|__INT_MAX__|__LONG_MAX__|__LONG_LONG_MAX__|__WINT_MAX__|__SIZE_MAX__|__PTRDIFF_MAX__|__INTMAX_MAX__|__UINTMAX_MAX__|__SIG_ATOMIC_MAX__|__INT8_MAX__|__INT16_MAX__|__INT32_MAX__|__INT64_MAX__|__UINT8_MAX__|__UINT16_MAX__|__UINT32_MAX__|__UINT64_MAX__|__INT_LEAST8_MAX__|__INT_LEAST16_MAX__|__INT_LEAST32_MAX__|__INT_LEAST64_MAX__|__UINT_LEAST8_MAX__|__UINT_LEAST16_MAX__|__UINT_LEAST32_MAX__|__UINT_LEAST64_MAX__|__INT_FAST8_MAX__|__INT_FAST16_MAX__|__INT_FAST32_MAX__|__INT_FAST64_MAX__|__UINT_FAST8_MAX__|__UINT_FAST16_MAX__|__UINT_FAST32_MAX__|__UINT_FAST64_MAX__|__INTPTR_MAX__|__UINTPTR_MAX__|__WCHAR_MIN__|__WINT_MIN__|__SIG_ATOMIC_MIN__|__SCHAR_WIDTH__|__SHRT_WIDTH__|__INT_WIDTH__|__LONG_WIDTH__|__LONG_LONG_WIDTH__|__PTRDIFF_WIDTH__|__SIG_ATOMIC_WIDTH__|__SIZE_WIDTH__|__WCHAR_WIDTH__|__WINT_WIDTH__|__INT_LEAST8_WIDTH__|__INT_LEAST16_WIDTH__|__INT_LEAST32_WIDTH__|__INT_LEAST64_WIDTH__|__INT_FAST8_WIDTH__|__INT_FAST16_WIDTH__|__INT_FAST32_WIDTH__|__INT_FAST64_WIDTH__|__INTPTR_WIDTH__|__INTMAX_WIDTH__|__SIZEOF_INT__|__SIZEOF_LONG__|__SIZEOF_LONG_LONG__|__SIZEOF_SHORT__|__SIZEOF_POINTER__|__SIZEOF_FLOAT__|__SIZEOF_DOUBLE__|__SIZEOF_LONG_DOUBLE__|__SIZEOF_SIZE_T__|__SIZEOF_WCHAR_T__|__SIZEOF_WINT_T__|__SIZEOF_PTRDIFF_T__|__BYTE_ORDER__|__ORDER_LITTLE_ENDIAN__|__ORDER_BIG_ENDIAN__|__ORDER_PDP_ENDIAN__|__FLOAT_WORD_ORDER__|__DEPRECATED|__EXCEPTIONS|__GXX_RTTI|__USING_SJLJ_EXCEPTIONS__|__GXX_EXPERIMENTAL_CXX0X__|__GXX_WEAK__|__NEXT_RUNTIME__|__LP64__|_LP64|__SSP__|__SSP_ALL__|__SSP_STRONG__|__SSP_EXPLICIT__|__SANITIZE_ADDRESS__|__SANITIZE_THREAD__|__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1|__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2|__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4|__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8|__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16|__HAVE_SPECULATION_SAFE_VALUE|__GCC_HAVE_DWARF2_CFI_ASM|__FP_FAST_FMA|__FP_FAST_FMAF|__FP_FAST_FMAL|__FP_FAST_FMAF16|__FP_FAST_FMAF32|__FP_FAST_FMAF64|__FP_FAST_FMAF128|__FP_FAST_FMAF32X|__FP_FAST_FMAF64X|__FP_FAST_FMAF128X|__GCC_IEC_559|__GCC_IEC_559_COMPLEX|__NO_MATH_ERRNO__|__has_builtin|__has_feature|__has_extension|__has_cpp_attribute|__has_c_attribute|__has_attribute|__has_declspec_attribute|__is_identifier|__has_include|__has_include_next|__has_warning|__BASE_FILE__|__FILE_NAME__|__clang__|__clang_major__|__clang_minor__|__clang_patchlevel__|__clang_version__|__fp16|_Float16)\\b",
			  "captures": {
				"1": {
				  "name": "entity.name.other.preprocessor.macro.predefined.$1.ds"
				}
			  }
			},
			{
			  "match": "\\b__([A-Z_]+)__\\b",
			  "name": "entity.name.other.preprocessor.macro.predefined.probably.$1.ds"
			}
		  ]
		},
		"preprocessor_conditional_context": {
		  "patterns": [
			{
			  "include": "#preprocessor_conditional_defined"
			},
			{
			  "include": "#comments"
			},
			{
			  "include": "#language_constants"
			},
			{
			  "include": "#string_context"
			},
			{
			  "include": "#d9bc4796b0b_preprocessor_number_literal"
			},
			{
			  "include": "#operators"
			},
			{
			  "include": "#predefined_macros"
			},
			{
			  "include": "#macro_name"
			},
			{
			  "include": "#line_continuation_character"
			}
		  ]
		},
		"preprocessor_conditional_defined": {
		  "begin": "((?<!\\w)defined(?!\\w))(\\()",
		  "end": "(?:\\)|(?<!\\\\)(?=\\n))",
		  "beginCaptures": {
			"1": {
			  "name": "keyword.control.directive.conditional.defined.ds"
			},
			"2": {
			  "name": "punctuation.section.parens.control.defined.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.parens.control.defined.ds"
			}
		  },
		  "patterns": [
			{
			  "include": "#macro_name"
			}
		  ]
		},
		"preprocessor_conditional_parentheses": {
		  "begin": "\\(",
		  "end": "\\)",
		  "beginCaptures": {
			"0": {
			  "name": "punctuation.section.parens.begin.bracket.round.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.parens.end.bracket.round.ds"
			}
		  },
		  "name": "meta.parens.preprocessor.conditional.ds"
		},
		"preprocessor_conditional_range": {
		  "begin": "^((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(#)(?:(?:\\s)+)?((?:(?:ifndef|ifdef)|if))",
		  "end": "^(?!\\s*+#\\s*(?:else|endif))",
		  "beginCaptures": {
			"0": {
			  "name": "keyword.control.directive.conditional.$6.ds"
			},
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"3": {
			  "name": "comment.block.ds"
			},
			"4": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"5": {
			  "name": "punctuation.definition.directive.ds"
			},
			"6": {
			}
		  },
		  "endCaptures": {
		  },
		  "patterns": [
			{
			  "begin": "\\G(?<=ifndef|ifdef|if)",
			  "end": "(?<!\\\\)(?=\\n)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "name": "meta.preprocessor.conditional.ds",
			  "patterns": [
				{
				  "include": "#preprocessor_conditional_context"
				}
			  ]
			},
			{
			  "include": "$self"
			}
		  ]
		},
		"preprocessor_conditional_standalone": {
		  "match": "^((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(#)(?:(?:\\s)+)?((?<!\\w)(?:endif|else|elif)(?!\\w))",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"3": {
			  "name": "punctuation.definition.directive.ds"
			}
		  },
		  "name": "keyword.control.directive.$4.ds"
		},
		"preprocessor_context": {
		  "patterns": [
			{
			  "include": "#pragma_mark"
			},
			{
			  "include": "#pragma"
			},
			{
			  "include": "#include"
			},
			{
			  "include": "#line"
			},
			{
			  "include": "#diagnostic"
			},
			{
			  "include": "#undef"
			},
			{
			  "include": "#preprocessor_conditional_range"
			},
			{
			  "include": "#single_line_macro"
			},
			{
			  "include": "#macro"
			},
			{
			  "include": "#preprocessor_conditional_standalone"
			},
			{
			  "include": "#macro_argument"
			}
		  ]
		},
		"qualified_type": {
		  "match": "\\s*+((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:(?:unsigned)|(?:signed)|(?:short)|(?:long))|(?:(?:struct)|(?:class)|(?:union)|(?:enum)))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*((?:::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<11>?)+>)(?:\\s)*+)?::)*+)?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?!(?:(?:transaction_safe_dynamic)|(?:__has_cpp_attribute)|(?:reinterpret_cast)|(?:transaction_safe)|(?:atomic_noexcept)|(?:atomic_commit)|(?:atomic_cancel)|(?:__has_include)|(?:dynamic_cast)|(?:synchronized)|(?:thread_local)|(?:static_cast)|(?:const_cast)|(?:constexpr)|(?:consteval)|(?:co_return)|(?:co_return)|(?:constexpr)|(?:protected)|(?:constexpr)|(?:namespace)|(?:noexcept)|(?:typename)|(?:decltype)|(?:template)|(?:operator)|(?:noexcept)|(?:co_yield)|(?:co_await)|(?:continue)|(?:co_await)|(?:co_yield)|(?:volatile)|(?:register)|(?:restrict)|(?:explicit)|(?:override)|(?:volatile)|(?:reflexpr)|(?:noexcept)|(?:requires)|(?:alignas)|(?:typedef)|(?:nullptr)|(?:alignof)|(?:mutable)|(?:concept)|(?:virtual)|(?:defined)|(?:__asm__)|(?:include)|(?:_Pragma)|(?:mutable)|(?:default)|(?:warning)|(?:private)|(?:module)|(?:return)|(?:not_eq)|(?:xor_eq)|(?:and_eq)|(?:ifndef)|(?:pragma)|(?:export)|(?:import)|(?:sizeof)|(?:static)|(?:delete)|(?:public)|(?:define)|(?:extern)|(?:inline)|(?:typeid)|(?:switch)|(?:friend)|(?:bitand)|(?:false)|(?:compl)|(?:bitor)|(?:throw)|(?:or_eq)|(?:while)|(?:catch)|(?:break)|(?:const)|(?:final)|(?:const)|(?:endif)|(?:ifdef)|(?:undef)|(?:error)|(?:using)|(?:audit)|(?:axiom)|(?:line)|(?:else)|(?:elif)|(?:true)|(?:NULL)|(?:case)|(?:goto)|(?:else)|(?:this)|(?:new)|(?:asm)|(?:not)|(?:and)|(?:xor)|(?:try)|(?:for)|(?:if)|(?:do)|(?:or)|(?:if))\\b)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*\\b((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<11>?)+>)?(?![\\w<:.])",
		  "captures": {
			"0": {
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.ds"
				},
				{
				  "match": "(?<!\\w)(?:(?:struct)|(?:class)|(?:union)|(?:enum))(?!\\w)",
				  "name": "storage.type.$0.ds"
				},
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#storage_types"
				},
				{
				  "include": "#number_literal"
				},
				{
				  "include": "#string_context"
				},
				{
				  "include": "#comma"
				},
				{
				  "include": "#scope_resolution_inner_generated"
				},
				{
				  "begin": "<",
				  "end": ">",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.begin.template.call.ds"
					}
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.end.template.call.ds"
					}
				  },
				  "name": "meta.template.call.ds",
				  "patterns": [
					{
					  "include": "#template_call_context"
					}
				  ]
				},
				{
				  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
				  "name": "entity.name.type.ds"
				}
			  ]
			},
			"1": {
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#number_literal"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"4": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"5": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"6": {
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.type.ds"
				},
				{
				  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
				  "name": "entity.name.scope-resolution.type.ds"
				},
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"9": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"10": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			}
		  },
		  "name": "meta.qualified_type.ds"
		},
		"qualifiers_and_specifiers_post_parameters": {
		  "match": "((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?:((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?<!\\w)(?:(?:override)|(?:volatile)|(?:noexcept)|(?:final)|(?:const))(?!\\w))+(?=\\s*(?:(?:\\{|;)|[\\n\\r])))",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"3": {
			  "name": "storage.modifier.specifier.functional.post-parameters.$3.ds"
			},
			"4": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"5": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			}
		  }
		},
		"scope_resolution": {
		  "match": "(::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<3>?)+>)(?:\\s)*+)?::)*\\s*+",
		  "captures": {
			"0": {
			  "patterns": [
				{
				  "include": "#scope_resolution_inner_generated"
				}
			  ]
			},
			"1": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			}
		  }
		},
		"scope_resolution_function_call": {
		  "match": "(::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<3>?)+>)(?:\\s)*+)?::)*\\s*+",
		  "captures": {
			"0": {
			  "patterns": [
				{
				  "include": "#scope_resolution_function_call_inner_generated"
				}
			  ]
			},
			"1": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.function.call.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			}
		  }
		},
		"scope_resolution_function_call_inner_generated": {
		  "match": "((::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?::)*\\s*+)((?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?(::)",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#scope_resolution_function_call_inner_generated"
				}
			  ]
			},
			"2": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.function.call.ds"
			},
			"3": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"4": {
			},
			"5": {
			  "name": "entity.name.scope-resolution.function.call.ds"
			},
			"6": {
			  "name": "meta.template.call.ds",
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"7": {
			},
			"8": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.function.call.ds"
			}
		  }
		},
		"scope_resolution_function_definition": {
		  "match": "(::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<3>?)+>)(?:\\s)*+)?::)*\\s*+",
		  "captures": {
			"0": {
			  "patterns": [
				{
				  "include": "#scope_resolution_function_definition_inner_generated"
				}
			  ]
			},
			"1": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.function.definition.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			}
		  }
		},
		"scope_resolution_function_definition_inner_generated": {
		  "match": "((::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?::)*\\s*+)((?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?(::)",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#scope_resolution_function_definition_inner_generated"
				}
			  ]
			},
			"2": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.function.definition.ds"
			},
			"3": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"4": {
			},
			"5": {
			  "name": "entity.name.scope-resolution.function.definition.ds"
			},
			"6": {
			  "name": "meta.template.call.ds",
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"7": {
			},
			"8": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.function.definition.ds"
			}
		  }
		},
		"scope_resolution_function_definition_operator_overload": {
		  "match": "(::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<3>?)+>)(?:\\s)*+)?::)*\\s*+",
		  "captures": {
			"0": {
			  "patterns": [
				{
				  "include": "#scope_resolution_function_definition_operator_overload_inner_generated"
				}
			  ]
			},
			"1": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.function.definition.operator-overload.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			}
		  }
		},
		"scope_resolution_function_definition_operator_overload_inner_generated": {
		  "match": "((::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?::)*\\s*+)((?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?(::)",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#scope_resolution_function_definition_operator_overload_inner_generated"
				}
			  ]
			},
			"2": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.function.definition.operator-overload.ds"
			},
			"3": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"4": {
			},
			"5": {
			  "name": "entity.name.scope-resolution.function.definition.operator-overload.ds"
			},
			"6": {
			  "name": "meta.template.call.ds",
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"7": {
			},
			"8": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.function.definition.operator-overload.ds"
			}
		  }
		},
		"scope_resolution_inner_generated": {
		  "match": "((::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?::)*\\s*+)((?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?(::)",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#scope_resolution_inner_generated"
				}
			  ]
			},
			"2": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.ds"
			},
			"3": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"4": {
			},
			"5": {
			  "name": "entity.name.scope-resolution.ds"
			},
			"6": {
			  "name": "meta.template.call.ds",
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"7": {
			},
			"8": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.ds"
			}
		  }
		},
		"scope_resolution_namespace_alias": {
		  "match": "(::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<3>?)+>)(?:\\s)*+)?::)*\\s*+",
		  "captures": {
			"0": {
			  "patterns": [
				{
				  "include": "#scope_resolution_namespace_alias_inner_generated"
				}
			  ]
			},
			"1": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.namespace.alias.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			}
		  }
		},
		"scope_resolution_namespace_alias_inner_generated": {
		  "match": "((::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?::)*\\s*+)((?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?(::)",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#scope_resolution_namespace_alias_inner_generated"
				}
			  ]
			},
			"2": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.namespace.alias.ds"
			},
			"3": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"4": {
			},
			"5": {
			  "name": "entity.name.scope-resolution.namespace.alias.ds"
			},
			"6": {
			  "name": "meta.template.call.ds",
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"7": {
			},
			"8": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.namespace.alias.ds"
			}
		  }
		},
		"scope_resolution_namespace_block": {
		  "match": "(::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<3>?)+>)(?:\\s)*+)?::)*\\s*+",
		  "captures": {
			"0": {
			  "patterns": [
				{
				  "include": "#scope_resolution_namespace_block_inner_generated"
				}
			  ]
			},
			"1": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.namespace.block.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			}
		  }
		},
		"scope_resolution_namespace_block_inner_generated": {
		  "match": "((::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?::)*\\s*+)((?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?(::)",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#scope_resolution_namespace_block_inner_generated"
				}
			  ]
			},
			"2": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.namespace.block.ds"
			},
			"3": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"4": {
			},
			"5": {
			  "name": "entity.name.scope-resolution.namespace.block.ds"
			},
			"6": {
			  "name": "meta.template.call.ds",
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"7": {
			},
			"8": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.namespace.block.ds"
			}
		  }
		},
		"scope_resolution_namespace_using": {
		  "match": "(::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<3>?)+>)(?:\\s)*+)?::)*\\s*+",
		  "captures": {
			"0": {
			  "patterns": [
				{
				  "include": "#scope_resolution_namespace_using_inner_generated"
				}
			  ]
			},
			"1": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.namespace.using.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			}
		  }
		},
		"scope_resolution_namespace_using_inner_generated": {
		  "match": "((::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?::)*\\s*+)((?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?(::)",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#scope_resolution_namespace_using_inner_generated"
				}
			  ]
			},
			"2": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.namespace.using.ds"
			},
			"3": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"4": {
			},
			"5": {
			  "name": "entity.name.scope-resolution.namespace.using.ds"
			},
			"6": {
			  "name": "meta.template.call.ds",
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"7": {
			},
			"8": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.namespace.using.ds"
			}
		  }
		},
		"scope_resolution_parameter": {
		  "match": "(::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<3>?)+>)(?:\\s)*+)?::)*\\s*+",
		  "captures": {
			"0": {
			  "patterns": [
				{
				  "include": "#scope_resolution_parameter_inner_generated"
				}
			  ]
			},
			"1": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.parameter.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			}
		  }
		},
		"scope_resolution_parameter_inner_generated": {
		  "match": "((::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?::)*\\s*+)((?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?(::)",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#scope_resolution_parameter_inner_generated"
				}
			  ]
			},
			"2": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.parameter.ds"
			},
			"3": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"4": {
			},
			"5": {
			  "name": "entity.name.scope-resolution.parameter.ds"
			},
			"6": {
			  "name": "meta.template.call.ds",
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"7": {
			},
			"8": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.parameter.ds"
			}
		  }
		},
		"scope_resolution_template_call": {
		  "match": "(::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<3>?)+>)(?:\\s)*+)?::)*\\s*+",
		  "captures": {
			"0": {
			  "patterns": [
				{
				  "include": "#scope_resolution_template_call_inner_generated"
				}
			  ]
			},
			"1": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.template.call.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			}
		  }
		},
		"scope_resolution_template_call_inner_generated": {
		  "match": "((::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?::)*\\s*+)((?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?(::)",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#scope_resolution_template_call_inner_generated"
				}
			  ]
			},
			"2": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.template.call.ds"
			},
			"3": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"4": {
			},
			"5": {
			  "name": "entity.name.scope-resolution.template.call.ds"
			},
			"6": {
			  "name": "meta.template.call.ds",
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"7": {
			},
			"8": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.template.call.ds"
			}
		  }
		},
		"scope_resolution_template_definition": {
		  "match": "(::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<3>?)+>)(?:\\s)*+)?::)*\\s*+",
		  "captures": {
			"0": {
			  "patterns": [
				{
				  "include": "#scope_resolution_template_definition_inner_generated"
				}
			  ]
			},
			"1": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.template.definition.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			}
		  }
		},
		"scope_resolution_template_definition_inner_generated": {
		  "match": "((::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?::)*\\s*+)((?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<7>?)+>)(?:\\s)*+)?(::)",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#scope_resolution_template_definition_inner_generated"
				}
			  ]
			},
			"2": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.template.definition.ds"
			},
			"3": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"4": {
			},
			"5": {
			  "name": "entity.name.scope-resolution.template.definition.ds"
			},
			"6": {
			  "name": "meta.template.call.ds",
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"7": {
			},
			"8": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.template.definition.ds"
			}
		  }
		},
		"semicolon": {
		  "match": ";",
		  "name": "punctuation.terminator.statement.ds"
		},
		"simple_type": {
		  "match": "(\\s*+((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:(?:unsigned)|(?:signed)|(?:short)|(?:long))|(?:(?:struct)|(?:class)|(?:union)|(?:enum)))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*((?:::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<12>?)+>)(?:\\s)*+)?::)*+)?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?!(?:(?:transaction_safe_dynamic)|(?:__has_cpp_attribute)|(?:reinterpret_cast)|(?:transaction_safe)|(?:atomic_noexcept)|(?:atomic_commit)|(?:atomic_cancel)|(?:__has_include)|(?:dynamic_cast)|(?:synchronized)|(?:thread_local)|(?:static_cast)|(?:const_cast)|(?:constexpr)|(?:consteval)|(?:co_return)|(?:co_return)|(?:constexpr)|(?:protected)|(?:constexpr)|(?:namespace)|(?:noexcept)|(?:typename)|(?:decltype)|(?:template)|(?:operator)|(?:noexcept)|(?:co_yield)|(?:co_await)|(?:continue)|(?:co_await)|(?:co_yield)|(?:volatile)|(?:register)|(?:restrict)|(?:explicit)|(?:override)|(?:volatile)|(?:reflexpr)|(?:noexcept)|(?:requires)|(?:alignas)|(?:typedef)|(?:nullptr)|(?:alignof)|(?:mutable)|(?:concept)|(?:virtual)|(?:defined)|(?:__asm__)|(?:include)|(?:_Pragma)|(?:mutable)|(?:default)|(?:warning)|(?:private)|(?:module)|(?:return)|(?:not_eq)|(?:xor_eq)|(?:and_eq)|(?:ifndef)|(?:pragma)|(?:export)|(?:import)|(?:sizeof)|(?:static)|(?:delete)|(?:public)|(?:define)|(?:extern)|(?:inline)|(?:typeid)|(?:switch)|(?:friend)|(?:bitand)|(?:false)|(?:compl)|(?:bitor)|(?:throw)|(?:or_eq)|(?:while)|(?:catch)|(?:break)|(?:const)|(?:final)|(?:const)|(?:endif)|(?:ifdef)|(?:undef)|(?:error)|(?:using)|(?:audit)|(?:axiom)|(?:line)|(?:else)|(?:elif)|(?:true)|(?:NULL)|(?:case)|(?:goto)|(?:else)|(?:this)|(?:new)|(?:asm)|(?:not)|(?:and)|(?:xor)|(?:try)|(?:for)|(?:if)|(?:do)|(?:or)|(?:if))\\b)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*\\b((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<12>?)+>)?(?![\\w<:.]))(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))?",
		  "captures": {
			"1": {
			  "name": "meta.qualified_type.ds",
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.ds"
				},
				{
				  "match": "(?<!\\w)(?:(?:struct)|(?:class)|(?:union)|(?:enum))(?!\\w)",
				  "name": "storage.type.$0.ds"
				},
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#storage_types"
				},
				{
				  "include": "#number_literal"
				},
				{
				  "include": "#string_context"
				},
				{
				  "include": "#comma"
				},
				{
				  "include": "#scope_resolution_inner_generated"
				},
				{
				  "begin": "<",
				  "end": ">",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.begin.template.call.ds"
					}
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.end.template.call.ds"
					}
				  },
				  "name": "meta.template.call.ds",
				  "patterns": [
					{
					  "include": "#template_call_context"
					}
				  ]
				},
				{
				  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
				  "name": "entity.name.type.ds"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#number_literal"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"4": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"5": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"6": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.type.ds"
				},
				{
				  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
				  "name": "entity.name.scope-resolution.type.ds"
				},
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"8": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"9": {
			},
			"10": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"12": {
			},
			"13": {
			  "patterns": [
				{
				  "match": "\\*",
				  "name": "storage.modifier.pointer.ds"
				},
				{
				  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  },
				  "name": "invalid.illegal.reference-type.ds"
				},
				{
				  "match": "\\&",
				  "name": "storage.modifier.reference.ds"
				}
			  ]
			},
			"14": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"15": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"16": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"17": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			}
		  }
		},
		"single_line_macro": {
		  "match": "^((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))#define.*(?<![\\\\])(?:(?:\\n)|$)",
		  "captures": {
			"0": {
			  "patterns": [
				{
				  "include": "#macro"
				},
				{
				  "include": "#comments"
				}
			  ]
			},
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			}
		  }
		},
		"sizeof_operator": {
		  "begin": "((?<!\\w)sizeof(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()",
		  "end": "\\)",
		  "beginCaptures": {
			"1": {
			  "name": "keyword.operator.functionlike.ds keyword.operator.sizeof.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"4": {
			  "name": "comment.block.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"6": {
			  "name": "punctuation.section.arguments.begin.bracket.round.operator.sizeof.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.arguments.end.bracket.round.operator.sizeof.ds"
			}
		  },
		  "contentName": "meta.arguments.operator.sizeof",
		  "patterns": [
			{
			  "include": "#evaluation_context"
			}
		  ]
		},
		"sizeof_variadic_operator": {
		  "begin": "(\\bsizeof\\.\\.\\.)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()",
		  "end": "\\)",
		  "beginCaptures": {
			"1": {
			  "name": "keyword.operator.functionlike.ds keyword.operator.sizeof.variadic.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"4": {
			  "name": "comment.block.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"6": {
			  "name": "punctuation.section.arguments.begin.bracket.round.operator.sizeof.variadic.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.arguments.end.bracket.round.operator.sizeof.variadic.ds"
			}
		  },
		  "contentName": "meta.arguments.operator.sizeof.variadic",
		  "patterns": [
			{
			  "include": "#evaluation_context"
			}
		  ]
		},
		"square_brackets": {
		  "name": "meta.bracket.square.access",
		  "begin": "([a-zA-Z_][a-zA-Z_0-9]*|(?<=[\\]\\)]))?(\\[)(?!\\])",
		  "beginCaptures": {
			"1": {
			  "name": "variable.other.object"
			},
			"2": {
			  "name": "punctuation.definition.begin.bracket.square"
			}
		  },
		  "end": "\\]",
		  "endCaptures": {
			"0": {
			  "name": "punctuation.definition.end.bracket.square"
			}
		  },
		  "patterns": [
			{
			  "include": "#evaluation_context"
			}
		  ]
		},
		"standard_declares": {
		  "patterns": [
			{
			  "match": "((?<!\\w)struct(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\b(?!override\\W|override\\$|final\\W|final\\$)((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=\\S)(?![:{a-zA-Z])",
			  "captures": {
				"1": {
				  "name": "storage.type.struct.declare.ds"
				},
				"2": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"3": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"4": {
				  "name": "entity.name.type.struct.ds"
				},
				"5": {
				  "patterns": [
					{
					  "match": "\\*",
					  "name": "storage.modifier.pointer.ds"
					},
					{
					  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
					  "captures": {
						"1": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"2": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"3": {
						  "name": "comment.block.ds"
						},
						"4": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  },
					  "name": "invalid.illegal.reference-type.ds"
					},
					{
					  "match": "\\&",
					  "name": "storage.modifier.reference.ds"
					}
				  ]
				},
				"6": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"7": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"8": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"9": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"10": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"11": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"12": {
				  "name": "variable.other.object.declare.ds"
				},
				"13": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"14": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				}
			  }
			},
			{
			  "match": "((?<!\\w)union(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\b(?!override\\W|override\\$|final\\W|final\\$)((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=\\S)(?![:{a-zA-Z])",
			  "captures": {
				"1": {
				  "name": "storage.type.union.declare.ds"
				},
				"2": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"3": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"4": {
				  "name": "entity.name.type.union.ds"
				},
				"5": {
				  "patterns": [
					{
					  "match": "\\*",
					  "name": "storage.modifier.pointer.ds"
					},
					{
					  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
					  "captures": {
						"1": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"2": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"3": {
						  "name": "comment.block.ds"
						},
						"4": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  },
					  "name": "invalid.illegal.reference-type.ds"
					},
					{
					  "match": "\\&",
					  "name": "storage.modifier.reference.ds"
					}
				  ]
				},
				"6": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"7": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"8": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"9": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"10": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"11": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"12": {
				  "name": "variable.other.object.declare.ds"
				},
				"13": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"14": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				}
			  }
			},
			{
			  "match": "((?<!\\w)enum(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\b(?!override\\W|override\\$|final\\W|final\\$)((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=\\S)(?![:{a-zA-Z])",
			  "captures": {
				"1": {
				  "name": "storage.type.enum.declare.ds"
				},
				"2": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"3": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"4": {
				  "name": "entity.name.type.enum.ds"
				},
				"5": {
				  "patterns": [
					{
					  "match": "\\*",
					  "name": "storage.modifier.pointer.ds"
					},
					{
					  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
					  "captures": {
						"1": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"2": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"3": {
						  "name": "comment.block.ds"
						},
						"4": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  },
					  "name": "invalid.illegal.reference-type.ds"
					},
					{
					  "match": "\\&",
					  "name": "storage.modifier.reference.ds"
					}
				  ]
				},
				"6": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"7": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"8": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"9": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"10": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"11": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"12": {
				  "name": "variable.other.object.declare.ds"
				},
				"13": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"14": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				}
			  }
			},
			{
			  "match": "((?<!\\w)class(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\b(?!override\\W|override\\$|final\\W|final\\$)((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=\\S)(?![:{a-zA-Z])",
			  "captures": {
				"1": {
				  "name": "storage.type.class.declare.ds"
				},
				"2": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"3": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"4": {
				  "name": "entity.name.type.class.ds"
				},
				"5": {
				  "patterns": [
					{
					  "match": "\\*",
					  "name": "storage.modifier.pointer.ds"
					},
					{
					  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
					  "captures": {
						"1": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"2": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"3": {
						  "name": "comment.block.ds"
						},
						"4": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  },
					  "name": "invalid.illegal.reference-type.ds"
					},
					{
					  "match": "\\&",
					  "name": "storage.modifier.reference.ds"
					}
				  ]
				},
				"6": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"7": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"8": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"9": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"10": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"11": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				},
				"12": {
				  "name": "variable.other.object.declare.ds"
				},
				"13": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"14": {
				  "patterns": [
					{
					  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
					  "captures": {
						"1": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"2": {
						  "name": "comment.block.ds"
						},
						"3": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					}
				  ]
				}
			  }
			}
		  ]
		},
		"static_assert": {
		  "begin": "((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)static_assert|_Static_assert(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()",
		  "end": "\\)",
		  "beginCaptures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"3": {
			  "name": "comment.block.ds"
			},
			"4": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"5": {
			  "name": "keyword.other.static_assert.ds"
			},
			"6": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"7": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"8": {
			  "name": "comment.block.ds"
			},
			"9": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"10": {
			  "name": "punctuation.section.arguments.begin.bracket.round.static_assert.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.arguments.end.bracket.round.static_assert.ds"
			}
		  },
		  "patterns": [
			{
			  "begin": "(,)(?:(?:\\s)+)?(?=(?:L|u8|u|U(?:(?:\\s)+)?\\\")?)",
			  "end": "(?=\\))",
			  "beginCaptures": {
				"1": {
				  "name": "punctuation.separator.delimiter.comma.ds"
				}
			  },
			  "endCaptures": {
			  },
			  "name": "meta.static_assert.message.ds",
			  "patterns": [
				{
				  "include": "#string_context"
				}
			  ]
			},
			{
			  "include": "#evaluation_context"
			}
		  ]
		},
		"std_space": {
		  "match": "(?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))",
		  "captures": {
			"0": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"1": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			}
		  }
		},
		"storage_specifiers": {
		  "match": "((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:(?:volatile)|(?:register)|(?:restrict)|(?:static)|(?:extern)|(?:const))(?!\\w))",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"3": {
			  "name": "storage.modifier.specifier.$3.ds"
			}
		  }
		},
		"storage_types": {
		  "patterns": [
			{
			  "include": "#storage_specifiers"
			},
			{
			  "include": "#inline_builtin_storage_type"
			},
			{
			  "include": "#decltype"
			},
			{
			  "include": "#typename"
			}
		  ]
		},
		"string_context": {
		  "patterns": [
			{
			  "begin": "((?:u|u8|U|L)?)\"",
			  "end": "\"",
			  "beginCaptures": {
				"0": {
				  "name": "punctuation.definition.string.begin.ds"
				},
				"1": {
				  "name": "meta.encoding.ds"
				}
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.definition.string.end.ds"
				}
			  },
			  "name": "string.quoted.double.ds",
			  "patterns": [
				{
				  "match": "(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8})",
				  "name": "constant.character.escape.ds"
				},
				{
				  "match": "\\\\['\"?\\\\abfnrtv]",
				  "name": "constant.character.escape.ds"
				},
				{
				  "match": "\\\\[0-7]{1,3}",
				  "name": "constant.character.escape.ds"
				},
				{
				  "match": "(?:(\\\\x0*[0-9a-fA-F]{2}(?![0-9a-fA-F]))|((?:\\\\x[0-9a-fA-F]*|\\\\x)))",
				  "captures": {
					"1": {
					  "name": "constant.character.escape.ds"
					},
					"2": {
					  "name": "invalid.illegal.unknown-escape.ds"
					}
				  }
				},
				{
				  "include": "#string_escapes_context_c"
				}
			  ]
			},
			{
			  "begin": "(?<![0-9A-Fa-f])((?:u|u8|U|L)?)'",
			  "end": "'",
			  "beginCaptures": {
				"0": {
				  "name": "punctuation.definition.string.begin.ds"
				},
				"1": {
				  "name": "meta.encoding.ds"
				}
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.definition.string.end.ds"
				}
			  },
			  "name": "string.quoted.single.ds",
			  "patterns": [
				{
				  "match": "(?:(\\\\x0*[0-9a-fA-F]{2}(?![0-9a-fA-F]))|((?:\\\\x[0-9a-fA-F]*|\\\\x)))",
				  "captures": {
					"1": {
					  "name": "constant.character.escape.ds"
					},
					"2": {
					  "name": "invalid.illegal.unknown-escape.ds"
					}
				  }
				},
				{
				  "include": "#string_escapes_context_c"
				},
				{
				  "include": "#line_continuation_character"
				}
			  ]
			},
			{
			  "begin": "((?:[uUL]8?)?R)\\\"(?:(?:_r|re)|regex)\\(",
			  "end": "\\)(?:(?:_r|re)|regex)\\\"",
			  "beginCaptures": {
				"0": {
				  "name": "punctuation.definition.string.begin.ds"
				},
				"1": {
				  "name": "meta.encoding.ds"
				}
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.definition.string.end.ds"
				}
			  },
			  "name": "string.quoted.double.raw.regex.ds",
			  "patterns": [
				{
				  "include": "source.regexp.python"
				}
			  ]
			},
			{
			  "begin": "((?:[uUL]8?)?R)\\\"(?:glsl|GLSL)\\(",
			  "end": "\\)(?:glsl|GLSL)\\\"",
			  "beginCaptures": {
				"0": {
				  "name": "punctuation.definition.string.begin.ds"
				},
				"1": {
				  "name": "meta.encoding.ds"
				}
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.definition.string.end.ds"
				}
			  },
			  "name": "meta.string.quoted.double.raw.glsl.ds",
			  "patterns": [
				{
				  "include": "source.glsl"
				}
			  ]
			},
			{
			  "begin": "((?:[uUL]8?)?R)\\\"(?:[pP]?(?:sql|SQL)|d[dm]l)\\(",
			  "end": "\\)(?:[pP]?(?:sql|SQL)|d[dm]l)\\\"",
			  "beginCaptures": {
				"0": {
				  "name": "punctuation.definition.string.begin.ds"
				},
				"1": {
				  "name": "meta.encoding.ds"
				}
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.definition.string.end.ds"
				}
			  },
			  "name": "meta.string.quoted.double.raw.sql.ds",
			  "patterns": [
				{
				  "include": "source.sql"
				}
			  ]
			},
			{
			  "begin": "((?:u|u8|U|L)?R)\"(?:([^ ()\\\\\\t]{0,16})|([^ ()\\\\\\t]*))\\(",
			  "beginCaptures": {
				"0": {
				  "name": "punctuation.definition.string.begin"
				},
				"1": {
				  "name": "meta.encoding"
				},
				"3": {
				  "name": "invalid.illegal.delimiter-too-long"
				}
			  },
			  "end": "\\)\\2(\\3)\"",
			  "endCaptures": {
				"0": {
				  "name": "punctuation.definition.string.end"
				},
				"1": {
				  "name": "invalid.illegal.delimiter-too-long"
				}
			  },
			  "name": "string.quoted.double.raw"
			}
		  ]
		},
		"string_escapes_context_c": {
		  "patterns": [
			{
			  "match": "(?x)\\\\ (\n\\\\\t\t\t |\n[abefnprtv'\"?]   |\n[0-3][0-7]{,2}\t |\n[4-7]\\d?\t\t|\nx[a-fA-F0-9]{,2} |\nu[a-fA-F0-9]{,4} |\nU[a-fA-F0-9]{,8} )",
			  "name": "constant.character.escape"
			},
			{
			  "match": "\\\\.",
			  "name": "invalid.illegal.unknown-escape"
			},
			{
			  "match": "(?x) (?!%')(?!%\")%\n(\\d+\\$)?\t\t\t\t\t\t   # field (argument #)\n[#0\\- +']*\t\t\t\t\t\t  # flags\n[,;:_]?\t\t\t\t\t\t\t  # separator character (AltiVec)\n((-?\\d+)|\\*(-?\\d+\\$)?)?\t\t  # minimum field width\n(\\.((-?\\d+)|\\*(-?\\d+\\$)?)?)?\t# precision\n(hh|h|ll|l|j|t|z|q|L|vh|vl|v|hv|hl)? # length modifier\n[diouxXDOUeEfFgGaACcSspn%]\t\t   # conversion type",
			  "name": "constant.other.placeholder"
			}
		  ]
		},
		"struct_block": {
		  "begin": "((?<!\\w)struct(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?={)|(?:((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?((?:(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*+)?(?:((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(:(?!:)))?)",
		  "end": "(?:(?:(?<=\\}|%>|\\?\\?>)(?:(?:\\s)+)?(;)|(;))|(?=[;>\\[\\]=]))",
		  "beginCaptures": {
			"0": {
			  "name": "meta.head.struct.ds"
			},
			"1": {
			  "name": "storage.type.$1.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"4": {
			  "name": "comment.block.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"6": {
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#number_literal"
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"8": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"9": {
			  "name": "comment.block.ds"
			},
			"10": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "match": "((?<!\\w)final(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))",
				  "captures": {
					"1": {
					  "name": "storage.type.modifier.final.ds"
					},
					"2": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"3": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"4": {
					  "name": "comment.block.ds"
					},
					"5": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				},
				{
				  "match": "((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:((?<!\\w)final(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?(?=:|{|$)",
				  "captures": {
					"1": {
					  "name": "entity.name.type.struct.ds"
					},
					"2": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"3": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"4": {
					  "name": "comment.block.ds"
					},
					"5": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					},
					"6": {
					  "name": "storage.type.modifier.final.ds"
					},
					"7": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"8": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"9": {
					  "name": "comment.block.ds"
					},
					"10": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				},
				{
				  "match": "DLLEXPORT",
				  "name": "entity.name.other.preprocessor.macro.predefined.DLLEXPORT.ds"
				},
				{
				  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
				  "name": "entity.name.other.preprocessor.macro.predefined.probably.$0.ds"
				}
			  ]
			},
			"12": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"13": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"14": {
			  "name": "comment.block.ds"
			},
			"15": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"16": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"17": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"18": {
			  "name": "comment.block.ds"
			},
			"19": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"20": {
			  "name": "punctuation.separator.colon.inheritance.ds"
			}
		  },
		  "endCaptures": {
			"1": {
			  "name": "punctuation.terminator.statement.ds"
			},
			"2": {
			  "name": "punctuation.terminator.statement.ds"
			}
		  },
		  "name": "meta.block.struct.ds",
		  "patterns": [
			{
			  "begin": "\\G ?",
			  "end": "(?:\\{|<%|\\?\\?<|(?=;))",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.begin.bracket.curly.struct.ds"
				}
			  },
			  "name": "meta.head.struct.ds",
			  "patterns": [
				{
				  "include": "#ever_present_context"
				},
				{
				  "include": "#inheritance_context"
				},
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			{
			  "begin": "(?<=\\{|<%|\\?\\?<)",
			  "end": "\\}|%>|\\?\\?>",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.end.bracket.curly.struct.ds"
				}
			  },
			  "name": "meta.body.struct.ds",
			  "patterns": [
				{
				  "include": "#function_pointer"
				},
				{
				  "include": "#static_assert"
				},
				{
				  "include": "#constructor_inline"
				},
				{
				  "include": "#destructor_inline"
				},
				{
				  "include": "$self"
				}
			  ]
			},
			{
			  "begin": "(?<=\\}|%>|\\?\\?>)[\\s]*",
			  "end": "[\\s]*(?=;)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "name": "meta.tail.struct.ds",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ]
			}
		  ]
		},
		"struct_declare": {
		  "match": "((?<!\\w)struct(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\b(?!override\\W|override\\$|final\\W|final\\$)((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=\\S)(?![:{a-zA-Z])",
		  "captures": {
			"1": {
			  "name": "storage.type.struct.declare.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"4": {
			  "name": "entity.name.type.struct.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*",
				  "name": "storage.modifier.pointer.ds"
				},
				{
				  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  },
				  "name": "invalid.illegal.reference-type.ds"
				},
				{
				  "match": "\\&",
				  "name": "storage.modifier.reference.ds"
				}
			  ]
			},
			"6": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"8": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"9": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"10": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"12": {
			  "name": "variable.other.object.declare.ds"
			},
			"13": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"14": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			}
		  }
		},
		"switch_conditional_parentheses": {
		  "begin": "((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()",
		  "end": "\\)",
		  "beginCaptures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"3": {
			  "name": "comment.block.ds"
			},
			"4": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"5": {
			  "name": "punctuation.section.parens.begin.bracket.round.conditional.switch.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.parens.end.bracket.round.conditional.switch.ds"
			}
		  },
		  "name": "meta.conditional.switch.ds",
		  "patterns": [
			{
			  "include": "#evaluation_context"
			},
			{
			  "include": "#c_conditional_context"
			}
		  ]
		},
		"switch_statement": {
		  "begin": "((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)switch(?!\\w))",
		  "end": "(?:(?<=\\}|%>|\\?\\?>)|(?=[;>\\[\\]=]))",
		  "beginCaptures": {
			"0": {
			  "name": "meta.head.switch.ds"
			},
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"3": {
			  "name": "comment.block.ds"
			},
			"4": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"5": {
			  "name": "keyword.control.switch.ds"
			}
		  },
		  "endCaptures": {
		  },
		  "name": "meta.block.switch.ds",
		  "patterns": [
			{
			  "begin": "\\G ?",
			  "end": "(?:\\{|<%|\\?\\?<|(?=;))",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.begin.bracket.curly.switch.ds"
				}
			  },
			  "name": "meta.head.switch.ds",
			  "patterns": [
				{
				  "include": "#switch_conditional_parentheses"
				},
				{
				  "include": "$self"
				}
			  ]
			},
			{
			  "begin": "(?<=\\{|<%|\\?\\?<)",
			  "end": "\\}|%>|\\?\\?>",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.end.bracket.curly.switch.ds"
				}
			  },
			  "name": "meta.body.switch.ds",
			  "patterns": [
				{
				  "include": "#default_statement"
				},
				{
				  "include": "#case_statement"
				},
				{
				  "include": "$self"
				},
				{
				  "include": "#block_innards"
				}
			  ]
			},
			{
			  "begin": "(?<=\\}|%>|\\?\\?>)[\\s]*",
			  "end": "[\\s]*(?=;)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "name": "meta.tail.switch.ds",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ]
			}
		  ]
		},
		"template_argument_defaulted": {
		  "match": "(?<=<|,)(?:(?:\\s)+)?((?:(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?:\\s)+)*)((?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*)(?:(?:\\s)+)?([=])",
		  "captures": {
			"1": {
			  "name": "storage.type.template.ds"
			},
			"2": {
			  "name": "entity.name.type.template.ds"
			},
			"3": {
			  "name": "keyword.operator.assignment.ds"
			}
		  }
		},
		"template_call_context": {
		  "patterns": [
			{
			  "include": "#ever_present_context"
			},
			{
			  "include": "#template_call_range"
			},
			{
			  "include": "#storage_types"
			},
			{
			  "include": "#language_constants"
			},
			{
			  "include": "#scope_resolution_template_call_inner_generated"
			},
			{
			  "include": "#operators"
			},
			{
			  "include": "#number_literal"
			},
			{
			  "include": "#string_context"
			},
			{
			  "include": "#comma_in_template_argument"
			},
			{
			  "include": "#qualified_type"
			}
		  ]
		},
		"template_call_innards": {
		  "match": "((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<1>?)+>)(?:\\s)*+",
		  "captures": {
			"0": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			}
		  },
		  "name": "meta.template.call.ds"
		},
		"template_call_range": {
		  "begin": "<",
		  "end": ">",
		  "beginCaptures": {
			"0": {
			  "name": "punctuation.section.angle-brackets.begin.template.call.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.angle-brackets.end.template.call.ds"
			}
		  },
		  "name": "meta.template.call.ds",
		  "patterns": [
			{
			  "include": "#template_call_context"
			}
		  ]
		},
		"template_definition": {
		  "begin": "(?<!\\w)(template)(?:(?:\\s)+)?(<)",
		  "end": ">",
		  "beginCaptures": {
			"1": {
			  "name": "storage.type.template.ds"
			},
			"2": {
			  "name": "punctuation.section.angle-brackets.start.template.definition.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.angle-brackets.end.template.definition.ds"
			}
		  },
		  "name": "meta.template.definition.ds",
		  "patterns": [
			{
			  "begin": "(?<=\\w)(?:(?:\\s)+)?<",
			  "end": ">",
			  "beginCaptures": {
				"0": {
				  "name": "punctuation.section.angle-brackets.begin.template.call.ds"
				}
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.angle-brackets.begin.template.call.ds"
				}
			  },
			  "patterns": [
				{
				  "include": "#template_call_context"
				}
			  ]
			},
			{
			  "include": "#template_definition_context"
			}
		  ]
		},
		"template_definition_argument": {
		  "match": "((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:((?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*)|((?:(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?:\\s)+)+)((?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*))|((?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*)(?:(?:\\s)+)?(\\.\\.\\.)(?:(?:\\s)+)?((?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*))(?:(?:\\s)+)?(?:(,)|(?=>|$))",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"3": {
			  "name": "storage.type.template.argument.$3.ds"
			},
			"4": {
			  "patterns": [
				{
				  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
				  "name": "storage.type.template.argument.$0.ds"
				}
			  ]
			},
			"5": {
			  "name": "entity.name.type.template.ds"
			},
			"6": {
			  "name": "storage.type.template.ds"
			},
			"7": {
			  "name": "punctuation.vararg-ellipses.template.definition.ds"
			},
			"8": {
			  "name": "entity.name.type.template.ds"
			},
			"9": {
			  "name": "punctuation.separator.delimiter.comma.template.argument.ds"
			}
		  }
		},
		"template_definition_context": {
		  "patterns": [
			{
			  "include": "#scope_resolution_template_definition_inner_generated"
			},
			{
			  "include": "#template_definition_argument"
			},
			{
			  "include": "#template_argument_defaulted"
			},
			{
			  "include": "#template_call_innards"
			},
			{
			  "include": "#evaluation_context"
			}
		  ]
		},
		"template_isolated_definition": {
		  "match": "(?<!\\w)(template)(?:(?:\\s)+)?(<)(.*)(>(?:(?:\\s)+)?$)",
		  "captures": {
			"1": {
			  "name": "storage.type.template.ds"
			},
			"2": {
			  "name": "punctuation.section.angle-brackets.start.template.definition.ds"
			},
			"3": {
			  "name": "meta.template.definition.ds",
			  "patterns": [
				{
				  "include": "#template_definition_context"
				}
			  ]
			},
			"4": {
			  "name": "punctuation.section.angle-brackets.end.template.definition.ds"
			}
		  }
		},
		"ternary_operator": {
		  "begin": "\\?",
		  "end": ":",
		  "beginCaptures": {
			"0": {
			  "name": "keyword.operator.ternary.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "keyword.operator.ternary.ds"
			}
		  },
		  "patterns": [
			{
			  "include": "#ever_present_context"
			},
			{
			  "include": "#string_context"
			},
			{
			  "include": "#number_literal"
			},
			{
			  "include": "#method_access"
			},
			{
			  "include": "#member_access"
			},
			{
			  "include": "#predefined_macros"
			},
			{
			  "include": "#operators"
			},
			{
			  "include": "#memory_operators"
			},
			{
			  "include": "#wordlike_operators"
			},
			{
			  "include": "#type_casting_operators"
			},
			{
			  "include": "#control_flow_keywords"
			},
			{
			  "include": "#exception_keywords"
			},
			{
			  "include": "#the_this_keyword"
			},
			{
			  "include": "#language_constants"
			},
			{
			  "include": "#builtin_storage_type_initilizer"
			},
			{
			  "include": "#qualifiers_and_specifiers_post_parameters"
			},
			{
			  "include": "#functional_specifiers_pre_parameters"
			},
			{
			  "include": "#storage_types"
			},
			{
			  "include": "#lambdas"
			},
			{
			  "include": "#attributes_context"
			},
			{
			  "include": "#parentheses"
			},
			{
			  "include": "#function_call"
			},
			{
			  "include": "#scope_resolution_inner_generated"
			},
			{
			  "include": "#square_brackets"
			},
			{
			  "include": "#semicolon"
			},
			{
			  "include": "#comma"
			}
		  ],
		  "applyEndPatternLast": 1
		},
		"the_this_keyword": {
		  "match": "((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)this(?!\\w))",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"3": {
			  "name": "variable.language.this.ds"
			}
		  }
		},
		"type_alias": {
		  "match": "(using)(?:(?:\\s)+)?(?!namespace)(\\s*+((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:(?:unsigned)|(?:signed)|(?:short)|(?:long))|(?:(?:struct)|(?:class)|(?:union)|(?:enum)))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*((?:::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<29>?)+>)(?:\\s)*+)?::)*+)?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?!(?:(?:transaction_safe_dynamic)|(?:__has_cpp_attribute)|(?:reinterpret_cast)|(?:transaction_safe)|(?:atomic_noexcept)|(?:atomic_commit)|(?:atomic_cancel)|(?:__has_include)|(?:dynamic_cast)|(?:synchronized)|(?:thread_local)|(?:static_cast)|(?:const_cast)|(?:constexpr)|(?:consteval)|(?:co_return)|(?:co_return)|(?:constexpr)|(?:protected)|(?:constexpr)|(?:namespace)|(?:noexcept)|(?:typename)|(?:decltype)|(?:template)|(?:operator)|(?:noexcept)|(?:co_yield)|(?:co_await)|(?:continue)|(?:co_await)|(?:co_yield)|(?:volatile)|(?:register)|(?:restrict)|(?:explicit)|(?:override)|(?:volatile)|(?:reflexpr)|(?:noexcept)|(?:requires)|(?:alignas)|(?:typedef)|(?:nullptr)|(?:alignof)|(?:mutable)|(?:concept)|(?:virtual)|(?:defined)|(?:__asm__)|(?:include)|(?:_Pragma)|(?:mutable)|(?:default)|(?:warning)|(?:private)|(?:module)|(?:return)|(?:not_eq)|(?:xor_eq)|(?:and_eq)|(?:ifndef)|(?:pragma)|(?:export)|(?:import)|(?:sizeof)|(?:static)|(?:delete)|(?:public)|(?:define)|(?:extern)|(?:inline)|(?:typeid)|(?:switch)|(?:friend)|(?:bitand)|(?:false)|(?:compl)|(?:bitor)|(?:throw)|(?:or_eq)|(?:while)|(?:catch)|(?:break)|(?:const)|(?:final)|(?:const)|(?:endif)|(?:ifdef)|(?:undef)|(?:error)|(?:using)|(?:audit)|(?:axiom)|(?:line)|(?:else)|(?:elif)|(?:true)|(?:NULL)|(?:case)|(?:goto)|(?:else)|(?:this)|(?:new)|(?:asm)|(?:not)|(?:and)|(?:xor)|(?:try)|(?:for)|(?:if)|(?:do)|(?:or)|(?:if))\\b)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*\\b((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<29>?)+>)?(?![\\w<:.]))(?:(?:\\s)+)?(\\=)(?:(?:\\s)+)?((?:typename)?)(?:(?:\\s)+)?((?:(?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))(?<!\\w)(?:(?:volatile)|(?:register)|(?:restrict)|(?:static)|(?:extern)|(?:const))(?!\\w)(?:\\s)+)+)?(?:(\\s*+((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:(?:unsigned)|(?:signed)|(?:short)|(?:long))|(?:(?:struct)|(?:class)|(?:union)|(?:enum)))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*((?:::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<29>?)+>)(?:\\s)*+)?::)*+)?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?!(?:(?:transaction_safe_dynamic)|(?:__has_cpp_attribute)|(?:reinterpret_cast)|(?:transaction_safe)|(?:atomic_noexcept)|(?:atomic_commit)|(?:atomic_cancel)|(?:__has_include)|(?:dynamic_cast)|(?:synchronized)|(?:thread_local)|(?:static_cast)|(?:const_cast)|(?:constexpr)|(?:consteval)|(?:co_return)|(?:co_return)|(?:constexpr)|(?:protected)|(?:constexpr)|(?:namespace)|(?:noexcept)|(?:typename)|(?:decltype)|(?:template)|(?:operator)|(?:noexcept)|(?:co_yield)|(?:co_await)|(?:continue)|(?:co_await)|(?:co_yield)|(?:volatile)|(?:register)|(?:restrict)|(?:explicit)|(?:override)|(?:volatile)|(?:reflexpr)|(?:noexcept)|(?:requires)|(?:alignas)|(?:typedef)|(?:nullptr)|(?:alignof)|(?:mutable)|(?:concept)|(?:virtual)|(?:defined)|(?:__asm__)|(?:include)|(?:_Pragma)|(?:mutable)|(?:default)|(?:warning)|(?:private)|(?:module)|(?:return)|(?:not_eq)|(?:xor_eq)|(?:and_eq)|(?:ifndef)|(?:pragma)|(?:export)|(?:import)|(?:sizeof)|(?:static)|(?:delete)|(?:public)|(?:define)|(?:extern)|(?:inline)|(?:typeid)|(?:switch)|(?:friend)|(?:bitand)|(?:false)|(?:compl)|(?:bitor)|(?:throw)|(?:or_eq)|(?:while)|(?:catch)|(?:break)|(?:const)|(?:final)|(?:const)|(?:endif)|(?:ifdef)|(?:undef)|(?:error)|(?:using)|(?:audit)|(?:axiom)|(?:line)|(?:else)|(?:elif)|(?:true)|(?:NULL)|(?:case)|(?:goto)|(?:else)|(?:this)|(?:new)|(?:asm)|(?:not)|(?:and)|(?:xor)|(?:try)|(?:for)|(?:if)|(?:do)|(?:or)|(?:if))\\b)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*\\b((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<29>?)+>)?(?![\\w<:.]))|(.*(?<!;)))(?:(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?(?:(\\[)(\\w*)(\\])(?:(?:\\s)+)?)?(?:(?:\\s)+)?(?:(;)|\\n)",
		  "captures": {
			"1": {
			  "name": "keyword.other.using.directive.ds"
			},
			"2": {
			  "name": "meta.qualified_type.ds",
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.ds"
				},
				{
				  "match": "(?<!\\w)(?:(?:struct)|(?:class)|(?:union)|(?:enum))(?!\\w)",
				  "name": "storage.type.$0.ds"
				},
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#storage_types"
				},
				{
				  "include": "#number_literal"
				},
				{
				  "include": "#string_context"
				},
				{
				  "include": "#comma"
				},
				{
				  "include": "#scope_resolution_inner_generated"
				},
				{
				  "begin": "<",
				  "end": ">",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.begin.template.call.ds"
					}
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.end.template.call.ds"
					}
				  },
				  "name": "meta.template.call.ds",
				  "patterns": [
					{
					  "include": "#template_call_context"
					}
				  ]
				},
				{
				  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
				  "name": "entity.name.type.ds"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#number_literal"
				}
			  ]
			},
			"4": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"5": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"6": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"8": {
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.type.ds"
				},
				{
				  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
				  "name": "entity.name.scope-resolution.type.ds"
				},
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"9": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"12": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"14": {
			  "name": "keyword.operator.assignment.ds"
			},
			"15": {
			  "name": "keyword.other.typename.ds"
			},
			"16": {
			  "patterns": [
				{
				  "include": "#storage_specifiers"
				}
			  ]
			},
			"17": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"18": {
			  "name": "meta.qualified_type.ds",
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.ds"
				},
				{
				  "match": "(?<!\\w)(?:(?:struct)|(?:class)|(?:union)|(?:enum))(?!\\w)",
				  "name": "storage.type.$0.ds"
				},
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#storage_types"
				},
				{
				  "include": "#number_literal"
				},
				{
				  "include": "#string_context"
				},
				{
				  "include": "#comma"
				},
				{
				  "include": "#scope_resolution_inner_generated"
				},
				{
				  "begin": "<",
				  "end": ">",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.begin.template.call.ds"
					}
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.end.template.call.ds"
					}
				  },
				  "name": "meta.template.call.ds",
				  "patterns": [
					{
					  "include": "#template_call_context"
					}
				  ]
				},
				{
				  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
				  "name": "entity.name.type.ds"
				}
			  ]
			},
			"19": {
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#number_literal"
				}
			  ]
			},
			"20": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"21": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"22": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"23": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"24": {
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.type.ds"
				},
				{
				  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
				  "name": "entity.name.scope-resolution.type.ds"
				},
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"25": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"27": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"28": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"30": {
			  "name": "meta.declaration.type.alias.value.unknown.ds",
			  "patterns": [
				{
				  "include": "#evaluation_context"
				}
			  ]
			},
			"31": {
			  "patterns": [
				{
				  "match": "\\*",
				  "name": "storage.modifier.pointer.ds"
				},
				{
				  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  },
				  "name": "invalid.illegal.reference-type.ds"
				},
				{
				  "match": "\\&",
				  "name": "storage.modifier.reference.ds"
				}
			  ]
			},
			"32": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"33": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"34": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"35": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"36": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"37": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"38": {
			  "name": "punctuation.definition.begin.bracket.square.ds"
			},
			"39": {
			  "patterns": [
				{
				  "include": "#evaluation_context"
				}
			  ]
			},
			"40": {
			  "name": "punctuation.definition.end.bracket.square.ds"
			},
			"41": {
			  "name": "punctuation.terminator.statement.ds"
			}
		  },
		  "name": "meta.declaration.type.alias.ds"
		},
		"type_casting_operators": {
		  "match": "((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:(?:reinterpret_cast)|(?:dynamic_cast)|(?:static_cast)|(?:const_cast))(?!\\w))",
		  "captures": {
			"1": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"2": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"3": {
			  "name": "keyword.operator.wordlike.ds keyword.operator.cast.$3.ds"
			}
		  }
		},
		"typedef_class": {
		  "begin": "((?<!\\w)typedef(?!\\w))(?:(?:\\s)+)?(?=(?<!\\w)class(?!\\w))",
		  "end": "(?<=;)",
		  "beginCaptures": {
			"1": {
			  "name": "keyword.other.typedef.ds"
			}
		  },
		  "endCaptures": {
		  },
		  "patterns": [
			{
			  "begin": "((?<!\\w)class(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?={)|(?:((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?((?:(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*+)?(?:((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(:(?!:)))?)",
			  "end": "(?:(?:(?<=\\}|%>|\\?\\?>)(?:(?:\\s)+)?(;)|(;))|(?=[;>\\[\\]=]))",
			  "beginCaptures": {
				"0": {
				  "name": "meta.head.class.ds"
				},
				"1": {
				  "name": "storage.type.$1.ds"
				},
				"2": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"3": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"4": {
				  "name": "comment.block.ds"
				},
				"5": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"6": {
				  "patterns": [
					{
					  "include": "#attributes_context"
					},
					{
					  "include": "#number_literal"
					}
				  ]
				},
				"7": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"8": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"9": {
				  "name": "comment.block.ds"
				},
				"10": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"11": {
				  "patterns": [
					{
					  "match": "((?<!\\w)final(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))",
					  "captures": {
						"1": {
						  "name": "storage.type.modifier.final.ds"
						},
						"2": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"3": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"4": {
						  "name": "comment.block.ds"
						},
						"5": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					},
					{
					  "match": "((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:((?<!\\w)final(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?(?=:|{|$)",
					  "captures": {
						"1": {
						  "name": "entity.name.type.class.ds"
						},
						"2": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"3": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"4": {
						  "name": "comment.block.ds"
						},
						"5": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						},
						"6": {
						  "name": "storage.type.modifier.final.ds"
						},
						"7": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"8": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"9": {
						  "name": "comment.block.ds"
						},
						"10": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					},
					{
					  "match": "DLLEXPORT",
					  "name": "entity.name.other.preprocessor.macro.predefined.DLLEXPORT.ds"
					},
					{
					  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
					  "name": "entity.name.other.preprocessor.macro.predefined.probably.$0.ds"
					}
				  ]
				},
				"12": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"13": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"14": {
				  "name": "comment.block.ds"
				},
				"15": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"16": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"17": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"18": {
				  "name": "comment.block.ds"
				},
				"19": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"20": {
				  "name": "punctuation.separator.colon.inheritance.ds"
				}
			  },
			  "endCaptures": {
				"1": {
				  "name": "punctuation.terminator.statement.ds"
				},
				"2": {
				  "name": "punctuation.terminator.statement.ds"
				}
			  },
			  "name": "meta.block.class.ds",
			  "patterns": [
				{
				  "begin": "\\G ?",
				  "end": "(?:\\{|<%|\\?\\?<|(?=;))",
				  "beginCaptures": {
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.block.begin.bracket.curly.class.ds"
					}
				  },
				  "name": "meta.head.class.ds",
				  "patterns": [
					{
					  "include": "#ever_present_context"
					},
					{
					  "include": "#inheritance_context"
					},
					{
					  "include": "#template_call_range"
					}
				  ]
				},
				{
				  "begin": "(?<=\\{|<%|\\?\\?<)",
				  "end": "\\}|%>|\\?\\?>",
				  "beginCaptures": {
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.block.end.bracket.curly.class.ds"
					}
				  },
				  "name": "meta.body.class.ds",
				  "patterns": [
					{
					  "include": "#function_pointer"
					},
					{
					  "include": "#static_assert"
					},
					{
					  "include": "#constructor_inline"
					},
					{
					  "include": "#destructor_inline"
					},
					{
					  "include": "$self"
					}
				  ]
				},
				{
				  "begin": "(?<=\\}|%>|\\?\\?>)[\\s]*",
				  "end": "[\\s]*(?=;)",
				  "beginCaptures": {
				  },
				  "endCaptures": {
				  },
				  "name": "meta.tail.class.ds",
				  "patterns": [
					{
					  "match": "(((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))",
					  "captures": {
						"1": {
						  "patterns": [
							{
							  "match": "\\*",
							  "name": "storage.modifier.pointer.ds"
							},
							{
							  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
							  "captures": {
								"1": {
								  "patterns": [
									{
									  "include": "#inline_comment"
									}
								  ]
								},
								"2": {
								  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
								},
								"3": {
								  "name": "comment.block.ds"
								},
								"4": {
								  "patterns": [
									{
									  "match": "\\*\\/",
									  "name": "comment.block.ds punctuation.definition.comment.end.ds"
									},
									{
									  "match": "\\*",
									  "name": "comment.block.ds"
									}
								  ]
								}
							  },
							  "name": "invalid.illegal.reference-type.ds"
							},
							{
							  "match": "\\&",
							  "name": "storage.modifier.reference.ds"
							}
						  ]
						},
						"2": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"3": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"4": {
						  "name": "comment.block.ds"
						},
						"5": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						},
						"6": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"7": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"8": {
						  "name": "comment.block.ds"
						},
						"9": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						},
						"10": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"11": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"12": {
						  "name": "comment.block.ds"
						},
						"13": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						},
						"14": {
						  "name": "entity.name.type.alias.ds"
						}
					  }
					},
					{
					  "match": ","
					}
				  ]
				}
			  ]
			}
		  ]
		},
		"typedef_function_pointer": {
		  "begin": "((?<!\\w)typedef(?!\\w))(?:(?:\\s)+)?(?=.*\\(\\*\\s*(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*\\s*\\))",
		  "end": "(?<=;)",
		  "beginCaptures": {
			"1": {
			  "name": "keyword.other.typedef.ds"
			}
		  },
		  "endCaptures": {
		  },
		  "patterns": [
			{
			  "begin": "(\\s*+((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:(?:unsigned)|(?:signed)|(?:short)|(?:long))|(?:(?:struct)|(?:class)|(?:union)|(?:enum)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*((?:::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<18>?)+>)(?:\\s)*+)?::)*+)?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?!(?:(?:transaction_safe_dynamic)|(?:__has_cpp_attribute)|(?:reinterpret_cast)|(?:transaction_safe)|(?:atomic_noexcept)|(?:atomic_commit)|(?:atomic_cancel)|(?:__has_include)|(?:dynamic_cast)|(?:synchronized)|(?:thread_local)|(?:static_cast)|(?:const_cast)|(?:constexpr)|(?:consteval)|(?:co_return)|(?:co_return)|(?:constexpr)|(?:protected)|(?:constexpr)|(?:namespace)|(?:noexcept)|(?:typename)|(?:decltype)|(?:template)|(?:operator)|(?:noexcept)|(?:co_yield)|(?:co_await)|(?:continue)|(?:co_await)|(?:co_yield)|(?:volatile)|(?:register)|(?:restrict)|(?:explicit)|(?:override)|(?:volatile)|(?:reflexpr)|(?:noexcept)|(?:requires)|(?:alignas)|(?:typedef)|(?:nullptr)|(?:alignof)|(?:mutable)|(?:concept)|(?:virtual)|(?:defined)|(?:__asm__)|(?:include)|(?:_Pragma)|(?:mutable)|(?:default)|(?:warning)|(?:private)|(?:module)|(?:return)|(?:not_eq)|(?:xor_eq)|(?:and_eq)|(?:ifndef)|(?:pragma)|(?:export)|(?:import)|(?:sizeof)|(?:static)|(?:delete)|(?:public)|(?:define)|(?:extern)|(?:inline)|(?:typeid)|(?:switch)|(?:friend)|(?:bitand)|(?:false)|(?:compl)|(?:bitor)|(?:throw)|(?:or_eq)|(?:while)|(?:catch)|(?:break)|(?:const)|(?:final)|(?:const)|(?:endif)|(?:ifdef)|(?:undef)|(?:error)|(?:using)|(?:audit)|(?:axiom)|(?:line)|(?:else)|(?:elif)|(?:true)|(?:NULL)|(?:case)|(?:goto)|(?:else)|(?:this)|(?:new)|(?:asm)|(?:not)|(?:and)|(?:xor)|(?:try)|(?:for)|(?:if)|(?:do)|(?:or)|(?:if))\\b)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*\\b((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<18>?)+>)?(?![\\w<:.]))(((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()(\\*)(?:(?:\\s)+)?((?:(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*)?)(?:(?:\\s)+)?(?:(\\[)(\\w*)(\\])(?:(?:\\s)+)?)*(\\))(?:(?:\\s)+)?(\\()",
			  "end": "(\\))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=[{=,);>]|\\n)(?!\\()",
			  "beginCaptures": {
				"1": {
				  "name": "meta.qualified_type.ds",
				  "patterns": [
					{
					  "match": "::",
					  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.ds"
					},
					{
					  "match": "(?<!\\w)(?:(?:struct)|(?:class)|(?:union)|(?:enum))(?!\\w)",
					  "name": "storage.type.$0.ds"
					},
					{
					  "include": "#attributes_context"
					},
					{
					  "include": "#storage_types"
					},
					{
					  "include": "#number_literal"
					},
					{
					  "include": "#string_context"
					},
					{
					  "include": "#comma"
					},
					{
					  "include": "#scope_resolution_inner_generated"
					},
					{
					  "begin": "<",
					  "end": ">",
					  "beginCaptures": {
						"0": {
						  "name": "punctuation.section.angle-brackets.begin.template.call.ds"
						}
					  },
					  "endCaptures": {
						"0": {
						  "name": "punctuation.section.angle-brackets.end.template.call.ds"
						}
					  },
					  "name": "meta.template.call.ds",
					  "patterns": [
						{
						  "include": "#template_call_context"
						}
					  ]
					},
					{
					  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
					  "name": "entity.name.type.ds"
					}
				  ]
				},
				"2": {
				  "patterns": [
					{
					  "include": "#attributes_context"
					},
					{
					  "include": "#number_literal"
					}
				  ]
				},
				"3": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"4": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"5": {
				  "name": "comment.block.ds"
				},
				"6": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"7": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"8": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"9": {
				  "name": "comment.block.ds"
				},
				"10": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"11": {
				  "patterns": [
					{
					  "match": "::",
					  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.type.ds"
					},
					{
					  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
					  "name": "entity.name.scope-resolution.type.ds"
					},
					{
					  "include": "#template_call_range"
					}
				  ]
				},
				"12": {
				  "patterns": [
					{
					  "include": "#template_call_range"
					}
				  ]
				},
				"13": {
				},
				"14": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"15": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"16": {
				  "name": "comment.block.ds"
				},
				"17": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"18": {
				},
				"19": {
				  "patterns": [
					{
					  "match": "\\*",
					  "name": "storage.modifier.pointer.ds"
					},
					{
					  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
					  "captures": {
						"1": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"2": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"3": {
						  "name": "comment.block.ds"
						},
						"4": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  },
					  "name": "invalid.illegal.reference-type.ds"
					},
					{
					  "match": "\\&",
					  "name": "storage.modifier.reference.ds"
					}
				  ]
				},
				"20": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"21": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"22": {
				  "name": "comment.block.ds"
				},
				"23": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"24": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"25": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"26": {
				  "name": "comment.block.ds"
				},
				"27": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"28": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"29": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"30": {
				  "name": "comment.block.ds"
				},
				"31": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"32": {
				  "name": "punctuation.section.parens.begin.bracket.round.function.pointer.ds"
				},
				"33": {
				  "name": "punctuation.definition.function.pointer.dereference.ds"
				},
				"34": {
				  "name": "entity.name.type.alias.ds entity.name.type.pointer.function.ds"
				},
				"35": {
				  "name": "punctuation.definition.begin.bracket.square.ds"
				},
				"36": {
				  "patterns": [
					{
					  "include": "#evaluation_context"
					}
				  ]
				},
				"37": {
				  "name": "punctuation.definition.end.bracket.square.ds"
				},
				"38": {
				  "name": "punctuation.section.parens.end.bracket.round.function.pointer.ds"
				},
				"39": {
				  "name": "punctuation.section.parameters.begin.bracket.round.function.pointer.ds"
				}
			  },
			  "endCaptures": {
				"1": {
				  "name": "punctuation.section.parameters.end.bracket.round.function.pointer.ds"
				},
				"2": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"3": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"4": {
				  "name": "comment.block.ds"
				},
				"5": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				}
			  },
			  "patterns": [
				{
				  "include": "#function_parameter_context"
				}
			  ]
			}
		  ]
		},
		"typedef_struct": {
		  "begin": "((?<!\\w)typedef(?!\\w))(?:(?:\\s)+)?(?=(?<!\\w)struct(?!\\w))",
		  "end": "(?<=;)",
		  "beginCaptures": {
			"1": {
			  "name": "keyword.other.typedef.ds"
			}
		  },
		  "endCaptures": {
		  },
		  "patterns": [
			{
			  "begin": "((?<!\\w)struct(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?={)|(?:((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?((?:(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*+)?(?:((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(:(?!:)))?)",
			  "end": "(?:(?:(?<=\\}|%>|\\?\\?>)(?:(?:\\s)+)?(;)|(;))|(?=[;>\\[\\]=]))",
			  "beginCaptures": {
				"0": {
				  "name": "meta.head.struct.ds"
				},
				"1": {
				  "name": "storage.type.$1.ds"
				},
				"2": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"3": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"4": {
				  "name": "comment.block.ds"
				},
				"5": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"6": {
				  "patterns": [
					{
					  "include": "#attributes_context"
					},
					{
					  "include": "#number_literal"
					}
				  ]
				},
				"7": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"8": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"9": {
				  "name": "comment.block.ds"
				},
				"10": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"11": {
				  "patterns": [
					{
					  "match": "((?<!\\w)final(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))",
					  "captures": {
						"1": {
						  "name": "storage.type.modifier.final.ds"
						},
						"2": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"3": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"4": {
						  "name": "comment.block.ds"
						},
						"5": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					},
					{
					  "match": "((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:((?<!\\w)final(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?(?=:|{|$)",
					  "captures": {
						"1": {
						  "name": "entity.name.type.struct.ds"
						},
						"2": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"3": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"4": {
						  "name": "comment.block.ds"
						},
						"5": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						},
						"6": {
						  "name": "storage.type.modifier.final.ds"
						},
						"7": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"8": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"9": {
						  "name": "comment.block.ds"
						},
						"10": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					},
					{
					  "match": "DLLEXPORT",
					  "name": "entity.name.other.preprocessor.macro.predefined.DLLEXPORT.ds"
					},
					{
					  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
					  "name": "entity.name.other.preprocessor.macro.predefined.probably.$0.ds"
					}
				  ]
				},
				"12": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"13": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"14": {
				  "name": "comment.block.ds"
				},
				"15": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"16": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"17": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"18": {
				  "name": "comment.block.ds"
				},
				"19": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"20": {
				  "name": "punctuation.separator.colon.inheritance.ds"
				}
			  },
			  "endCaptures": {
				"1": {
				  "name": "punctuation.terminator.statement.ds"
				},
				"2": {
				  "name": "punctuation.terminator.statement.ds"
				}
			  },
			  "name": "meta.block.struct.ds",
			  "patterns": [
				{
				  "begin": "\\G ?",
				  "end": "(?:\\{|<%|\\?\\?<|(?=;))",
				  "beginCaptures": {
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.block.begin.bracket.curly.struct.ds"
					}
				  },
				  "name": "meta.head.struct.ds",
				  "patterns": [
					{
					  "include": "#ever_present_context"
					},
					{
					  "include": "#inheritance_context"
					},
					{
					  "include": "#template_call_range"
					}
				  ]
				},
				{
				  "begin": "(?<=\\{|<%|\\?\\?<)",
				  "end": "\\}|%>|\\?\\?>",
				  "beginCaptures": {
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.block.end.bracket.curly.struct.ds"
					}
				  },
				  "name": "meta.body.struct.ds",
				  "patterns": [
					{
					  "include": "#function_pointer"
					},
					{
					  "include": "#static_assert"
					},
					{
					  "include": "#constructor_inline"
					},
					{
					  "include": "#destructor_inline"
					},
					{
					  "include": "$self"
					}
				  ]
				},
				{
				  "begin": "(?<=\\}|%>|\\?\\?>)[\\s]*",
				  "end": "[\\s]*(?=;)",
				  "beginCaptures": {
				  },
				  "endCaptures": {
				  },
				  "name": "meta.tail.struct.ds",
				  "patterns": [
					{
					  "match": "(((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))",
					  "captures": {
						"1": {
						  "patterns": [
							{
							  "match": "\\*",
							  "name": "storage.modifier.pointer.ds"
							},
							{
							  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
							  "captures": {
								"1": {
								  "patterns": [
									{
									  "include": "#inline_comment"
									}
								  ]
								},
								"2": {
								  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
								},
								"3": {
								  "name": "comment.block.ds"
								},
								"4": {
								  "patterns": [
									{
									  "match": "\\*\\/",
									  "name": "comment.block.ds punctuation.definition.comment.end.ds"
									},
									{
									  "match": "\\*",
									  "name": "comment.block.ds"
									}
								  ]
								}
							  },
							  "name": "invalid.illegal.reference-type.ds"
							},
							{
							  "match": "\\&",
							  "name": "storage.modifier.reference.ds"
							}
						  ]
						},
						"2": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"3": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"4": {
						  "name": "comment.block.ds"
						},
						"5": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						},
						"6": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"7": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"8": {
						  "name": "comment.block.ds"
						},
						"9": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						},
						"10": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"11": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"12": {
						  "name": "comment.block.ds"
						},
						"13": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						},
						"14": {
						  "name": "entity.name.type.alias.ds"
						}
					  }
					},
					{
					  "match": ","
					}
				  ]
				}
			  ]
			}
		  ]
		},
		"typedef_union": {
		  "begin": "((?<!\\w)typedef(?!\\w))(?:(?:\\s)+)?(?=(?<!\\w)union(?!\\w))",
		  "end": "(?<=;)",
		  "beginCaptures": {
			"1": {
			  "name": "keyword.other.typedef.ds"
			}
		  },
		  "endCaptures": {
		  },
		  "patterns": [
			{
			  "begin": "((?<!\\w)union(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?={)|(?:((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?((?:(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*+)?(?:((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(:(?!:)))?)",
			  "end": "(?:(?:(?<=\\}|%>|\\?\\?>)(?:(?:\\s)+)?(;)|(;))|(?=[;>\\[\\]=]))",
			  "beginCaptures": {
				"0": {
				  "name": "meta.head.union.ds"
				},
				"1": {
				  "name": "storage.type.$1.ds"
				},
				"2": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"3": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"4": {
				  "name": "comment.block.ds"
				},
				"5": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"6": {
				  "patterns": [
					{
					  "include": "#attributes_context"
					},
					{
					  "include": "#number_literal"
					}
				  ]
				},
				"7": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"8": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"9": {
				  "name": "comment.block.ds"
				},
				"10": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"11": {
				  "patterns": [
					{
					  "match": "((?<!\\w)final(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))",
					  "captures": {
						"1": {
						  "name": "storage.type.modifier.final.ds"
						},
						"2": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"3": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"4": {
						  "name": "comment.block.ds"
						},
						"5": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					},
					{
					  "match": "((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:((?<!\\w)final(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?(?=:|{|$)",
					  "captures": {
						"1": {
						  "name": "entity.name.type.union.ds"
						},
						"2": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"3": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"4": {
						  "name": "comment.block.ds"
						},
						"5": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						},
						"6": {
						  "name": "storage.type.modifier.final.ds"
						},
						"7": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"8": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"9": {
						  "name": "comment.block.ds"
						},
						"10": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						}
					  }
					},
					{
					  "match": "DLLEXPORT",
					  "name": "entity.name.other.preprocessor.macro.predefined.DLLEXPORT.ds"
					},
					{
					  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
					  "name": "entity.name.other.preprocessor.macro.predefined.probably.$0.ds"
					}
				  ]
				},
				"12": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"13": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"14": {
				  "name": "comment.block.ds"
				},
				"15": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"16": {
				  "patterns": [
					{
					  "include": "#inline_comment"
					}
				  ]
				},
				"17": {
				  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
				},
				"18": {
				  "name": "comment.block.ds"
				},
				"19": {
				  "patterns": [
					{
					  "match": "\\*\\/",
					  "name": "comment.block.ds punctuation.definition.comment.end.ds"
					},
					{
					  "match": "\\*",
					  "name": "comment.block.ds"
					}
				  ]
				},
				"20": {
				  "name": "punctuation.separator.colon.inheritance.ds"
				}
			  },
			  "endCaptures": {
				"1": {
				  "name": "punctuation.terminator.statement.ds"
				},
				"2": {
				  "name": "punctuation.terminator.statement.ds"
				}
			  },
			  "name": "meta.block.union.ds",
			  "patterns": [
				{
				  "begin": "\\G ?",
				  "end": "(?:\\{|<%|\\?\\?<|(?=;))",
				  "beginCaptures": {
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.block.begin.bracket.curly.union.ds"
					}
				  },
				  "name": "meta.head.union.ds",
				  "patterns": [
					{
					  "include": "#ever_present_context"
					},
					{
					  "include": "#inheritance_context"
					},
					{
					  "include": "#template_call_range"
					}
				  ]
				},
				{
				  "begin": "(?<=\\{|<%|\\?\\?<)",
				  "end": "\\}|%>|\\?\\?>",
				  "beginCaptures": {
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.block.end.bracket.curly.union.ds"
					}
				  },
				  "name": "meta.body.union.ds",
				  "patterns": [
					{
					  "include": "#function_pointer"
					},
					{
					  "include": "#static_assert"
					},
					{
					  "include": "#constructor_inline"
					},
					{
					  "include": "#destructor_inline"
					},
					{
					  "include": "$self"
					}
				  ]
				},
				{
				  "begin": "(?<=\\}|%>|\\?\\?>)[\\s]*",
				  "end": "[\\s]*(?=;)",
				  "beginCaptures": {
				  },
				  "endCaptures": {
				  },
				  "name": "meta.tail.union.ds",
				  "patterns": [
					{
					  "match": "(((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))?((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))",
					  "captures": {
						"1": {
						  "patterns": [
							{
							  "match": "\\*",
							  "name": "storage.modifier.pointer.ds"
							},
							{
							  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
							  "captures": {
								"1": {
								  "patterns": [
									{
									  "include": "#inline_comment"
									}
								  ]
								},
								"2": {
								  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
								},
								"3": {
								  "name": "comment.block.ds"
								},
								"4": {
								  "patterns": [
									{
									  "match": "\\*\\/",
									  "name": "comment.block.ds punctuation.definition.comment.end.ds"
									},
									{
									  "match": "\\*",
									  "name": "comment.block.ds"
									}
								  ]
								}
							  },
							  "name": "invalid.illegal.reference-type.ds"
							},
							{
							  "match": "\\&",
							  "name": "storage.modifier.reference.ds"
							}
						  ]
						},
						"2": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"3": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"4": {
						  "name": "comment.block.ds"
						},
						"5": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						},
						"6": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"7": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"8": {
						  "name": "comment.block.ds"
						},
						"9": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						},
						"10": {
						  "patterns": [
							{
							  "include": "#inline_comment"
							}
						  ]
						},
						"11": {
						  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
						},
						"12": {
						  "name": "comment.block.ds"
						},
						"13": {
						  "patterns": [
							{
							  "match": "\\*\\/",
							  "name": "comment.block.ds punctuation.definition.comment.end.ds"
							},
							{
							  "match": "\\*",
							  "name": "comment.block.ds"
							}
						  ]
						},
						"14": {
						  "name": "entity.name.type.alias.ds"
						}
					  }
					},
					{
					  "match": ","
					}
				  ]
				}
			  ]
			}
		  ]
		},
		"typeid_operator": {
		  "begin": "((?<!\\w)typeid(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\()",
		  "end": "\\)",
		  "beginCaptures": {
			"1": {
			  "name": "keyword.operator.functionlike.ds keyword.operator.typeid.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"4": {
			  "name": "comment.block.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"6": {
			  "name": "punctuation.section.arguments.begin.bracket.round.operator.typeid.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.section.arguments.end.bracket.round.operator.typeid.ds"
			}
		  },
		  "contentName": "meta.arguments.operator.typeid",
		  "patterns": [
			{
			  "include": "#evaluation_context"
			}
		  ]
		},
		"typename": {
		  "match": "(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?<!\\w)typename(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(\\s*+((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?:(?:(?:unsigned)|(?:signed)|(?:short)|(?:long))|(?:(?:struct)|(?:class)|(?:union)|(?:enum)))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*((?:::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<17>?)+>)(?:\\s)*+)?::)*+)?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?!(?:(?:transaction_safe_dynamic)|(?:__has_cpp_attribute)|(?:reinterpret_cast)|(?:transaction_safe)|(?:atomic_noexcept)|(?:atomic_commit)|(?:atomic_cancel)|(?:__has_include)|(?:dynamic_cast)|(?:synchronized)|(?:thread_local)|(?:static_cast)|(?:const_cast)|(?:constexpr)|(?:consteval)|(?:co_return)|(?:co_return)|(?:constexpr)|(?:protected)|(?:constexpr)|(?:namespace)|(?:noexcept)|(?:typename)|(?:decltype)|(?:template)|(?:operator)|(?:noexcept)|(?:co_yield)|(?:co_await)|(?:continue)|(?:co_await)|(?:co_yield)|(?:volatile)|(?:register)|(?:restrict)|(?:explicit)|(?:override)|(?:volatile)|(?:reflexpr)|(?:noexcept)|(?:requires)|(?:alignas)|(?:typedef)|(?:nullptr)|(?:alignof)|(?:mutable)|(?:concept)|(?:virtual)|(?:defined)|(?:__asm__)|(?:include)|(?:_Pragma)|(?:mutable)|(?:default)|(?:warning)|(?:private)|(?:module)|(?:return)|(?:not_eq)|(?:xor_eq)|(?:and_eq)|(?:ifndef)|(?:pragma)|(?:export)|(?:import)|(?:sizeof)|(?:static)|(?:delete)|(?:public)|(?:define)|(?:extern)|(?:inline)|(?:typeid)|(?:switch)|(?:friend)|(?:bitand)|(?:false)|(?:compl)|(?:bitor)|(?:throw)|(?:or_eq)|(?:while)|(?:catch)|(?:break)|(?:const)|(?:final)|(?:const)|(?:endif)|(?:ifdef)|(?:undef)|(?:error)|(?:using)|(?:audit)|(?:axiom)|(?:line)|(?:else)|(?:elif)|(?:true)|(?:NULL)|(?:case)|(?:goto)|(?:else)|(?:this)|(?:new)|(?:asm)|(?:not)|(?:and)|(?:xor)|(?:try)|(?:for)|(?:if)|(?:do)|(?:or)|(?:if))\\b)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*\\b((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<17>?)+>)?(?![\\w<:.]))",
		  "captures": {
			"1": {
			  "name": "storage.modifier.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"4": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"5": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"6": {
			  "name": "meta.qualified_type.ds",
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.ds"
				},
				{
				  "match": "(?<!\\w)(?:(?:struct)|(?:class)|(?:union)|(?:enum))(?!\\w)",
				  "name": "storage.type.$0.ds"
				},
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#storage_types"
				},
				{
				  "include": "#number_literal"
				},
				{
				  "include": "#string_context"
				},
				{
				  "include": "#comma"
				},
				{
				  "include": "#scope_resolution_inner_generated"
				},
				{
				  "begin": "<",
				  "end": ">",
				  "beginCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.begin.template.call.ds"
					}
				  },
				  "endCaptures": {
					"0": {
					  "name": "punctuation.section.angle-brackets.end.template.call.ds"
					}
				  },
				  "name": "meta.template.call.ds",
				  "patterns": [
					{
					  "include": "#template_call_context"
					}
				  ]
				},
				{
				  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
				  "name": "entity.name.type.ds"
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#number_literal"
				}
			  ]
			},
			"8": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"9": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"10": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"12": {
			  "patterns": [
				{
				  "match": "::",
				  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.type.ds"
				},
				{
				  "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
				  "name": "entity.name.scope-resolution.type.ds"
				},
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"13": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"14": {
			},
			"15": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"16": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"17": {
			}
		  }
		},
		"undef": {
		  "match": "(^((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(#)(?:(?:\\s)+)?undef\\b)((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))",
		  "captures": {
			"1": {
			  "name": "keyword.control.directive.undef.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"4": {
			  "name": "punctuation.definition.directive.ds"
			},
			"5": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"6": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"7": {
			  "name": "entity.name.function.preprocessor.ds"
			}
		  },
		  "name": "meta.preprocessor.undef.ds"
		},
		"union_block": {
		  "begin": "((?<!\\w)union(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:(?={)|(?:((?:(?:(?:\\[\\[.*?\\]\\]|__attribute(?:__)?\\s*\\(\\s*\\(.*?\\)\\s*\\))|__declspec\\(.*?\\))|alignas\\(.*?\\))(?!\\)))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?((?:(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*+)?(?:((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(:(?!:)))?)",
		  "end": "(?:(?:(?<=\\}|%>|\\?\\?>)(?:(?:\\s)+)?(;)|(;))|(?=[;>\\[\\]=]))",
		  "beginCaptures": {
			"0": {
			  "name": "meta.head.union.ds"
			},
			"1": {
			  "name": "storage.type.$1.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"4": {
			  "name": "comment.block.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"6": {
			  "patterns": [
				{
				  "include": "#attributes_context"
				},
				{
				  "include": "#number_literal"
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"8": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"9": {
			  "name": "comment.block.ds"
			},
			"10": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "match": "((?<!\\w)final(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))",
				  "captures": {
					"1": {
					  "name": "storage.type.modifier.final.ds"
					},
					"2": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"3": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"4": {
					  "name": "comment.block.ds"
					},
					"5": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				},
				{
				  "match": "((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?:((?<!\\w)final(?!\\w))((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))?(?=:|{|$)",
				  "captures": {
					"1": {
					  "name": "entity.name.type.union.ds"
					},
					"2": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"3": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"4": {
					  "name": "comment.block.ds"
					},
					"5": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					},
					"6": {
					  "name": "storage.type.modifier.final.ds"
					},
					"7": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"8": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"9": {
					  "name": "comment.block.ds"
					},
					"10": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				},
				{
				  "match": "DLLEXPORT",
				  "name": "entity.name.other.preprocessor.macro.predefined.DLLEXPORT.ds"
				},
				{
				  "match": "(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*",
				  "name": "entity.name.other.preprocessor.macro.predefined.probably.$0.ds"
				}
			  ]
			},
			"12": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"13": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"14": {
			  "name": "comment.block.ds"
			},
			"15": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"16": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"17": {
			  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
			},
			"18": {
			  "name": "comment.block.ds"
			},
			"19": {
			  "patterns": [
				{
				  "match": "\\*\\/",
				  "name": "comment.block.ds punctuation.definition.comment.end.ds"
				},
				{
				  "match": "\\*",
				  "name": "comment.block.ds"
				}
			  ]
			},
			"20": {
			  "name": "punctuation.separator.colon.inheritance.ds"
			}
		  },
		  "endCaptures": {
			"1": {
			  "name": "punctuation.terminator.statement.ds"
			},
			"2": {
			  "name": "punctuation.terminator.statement.ds"
			}
		  },
		  "name": "meta.block.union.ds",
		  "patterns": [
			{
			  "begin": "\\G ?",
			  "end": "(?:\\{|<%|\\?\\?<|(?=;))",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.begin.bracket.curly.union.ds"
				}
			  },
			  "name": "meta.head.union.ds",
			  "patterns": [
				{
				  "include": "#ever_present_context"
				},
				{
				  "include": "#inheritance_context"
				},
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			{
			  "begin": "(?<=\\{|<%|\\?\\?<)",
			  "end": "\\}|%>|\\?\\?>",
			  "beginCaptures": {
			  },
			  "endCaptures": {
				"0": {
				  "name": "punctuation.section.block.end.bracket.curly.union.ds"
				}
			  },
			  "name": "meta.body.union.ds",
			  "patterns": [
				{
				  "include": "#function_pointer"
				},
				{
				  "include": "#static_assert"
				},
				{
				  "include": "#constructor_inline"
				},
				{
				  "include": "#destructor_inline"
				},
				{
				  "include": "$self"
				}
			  ]
			},
			{
			  "begin": "(?<=\\}|%>|\\?\\?>)[\\s]*",
			  "end": "[\\s]*(?=;)",
			  "beginCaptures": {
			  },
			  "endCaptures": {
			  },
			  "name": "meta.tail.union.ds",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ]
			}
		  ]
		},
		"union_declare": {
		  "match": "((?<!\\w)union(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))(((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))?(?:(?:&|(?:\\*))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z))))*(?:&|(?:\\*)))?((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))\\b(?!override\\W|override\\$|final\\W|final\\$)((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))((?:((?:(?>(?:\\s)+)|\\/\\*(?:[^\\*]|(?:\\*)++[^\\/])*+(?:\\*)++\\/)+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))(?=\\S)(?![:{a-zA-Z])",
		  "captures": {
			"1": {
			  "name": "storage.type.union.declare.ds"
			},
			"2": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"3": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"4": {
			  "name": "entity.name.type.union.ds"
			},
			"5": {
			  "patterns": [
				{
				  "match": "\\*",
				  "name": "storage.modifier.pointer.ds"
				},
				{
				  "match": "(?:\\&((?:(?:(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))+)|(?:\\b)|(?=\\W)|(?<=\\W)|(?:\\A)|(?:\\Z)))){2,}\\&",
				  "captures": {
					"1": {
					  "patterns": [
						{
						  "include": "#inline_comment"
						}
					  ]
					},
					"2": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"3": {
					  "name": "comment.block.ds"
					},
					"4": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  },
				  "name": "invalid.illegal.reference-type.ds"
				},
				{
				  "match": "\\&",
				  "name": "storage.modifier.reference.ds"
				}
			  ]
			},
			"6": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"7": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"8": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"9": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"10": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"11": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			},
			"12": {
			  "name": "variable.other.object.declare.ds"
			},
			"13": {
			  "patterns": [
				{
				  "include": "#inline_comment"
				}
			  ]
			},
			"14": {
			  "patterns": [
				{
				  "match": "(?:(?>(?:\\s)+)|(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/)))",
				  "captures": {
					"1": {
					  "name": "comment.block.ds punctuation.definition.comment.begin.ds"
					},
					"2": {
					  "name": "comment.block.ds"
					},
					"3": {
					  "patterns": [
						{
						  "match": "\\*\\/",
						  "name": "comment.block.ds punctuation.definition.comment.end.ds"
						},
						{
						  "match": "\\*",
						  "name": "comment.block.ds"
						}
					  ]
					}
				  }
				}
			  ]
			}
		  }
		},
		"using_name": {
		  "match": "(using)(?:\\s)+(?!namespace\\b)",
		  "captures": {
			"1": {
			  "name": "keyword.other.using.directive.ds"
			}
		  }
		},
		"using_namespace": {
		  "begin": "(?<!\\w)(using)(?:\\s)+(namespace)(?:\\s)+((::)?(?:(?!\\b(?:__has_cpp_attribute|reinterpret_cast|atomic_noexcept|atomic_commit|atomic_cancel|__has_include|synchronized|dynamic_cast|thread_local|static_cast|const_cast|co_return|constexpr|constexpr|constexpr|co_return|protected|namespace|consteval|noexcept|decltype|template|operator|noexcept|co_yield|co_await|reflexpr|continue|co_await|co_yield|requires|volatile|register|restrict|explicit|volatile|noexcept|typename|default|_Pragma|mutable|include|concept|alignas|virtual|alignof|__asm__|defined|mutable|typedef|warning|private|and_eq|define|pragma|typeid|switch|bitand|return|ifndef|export|struct|sizeof|module|static|public|extern|inline|friend|delete|xor_eq|import|not_eq|class|compl|bitor|throw|or_eq|while|catch|break|union|const|const|endif|ifdef|undef|error|using|else|line|goto|else|elif|this|enum|case|new|asm|not|try|for|and|xor|or|if|do|if)\\b)(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)\\s*+(((?<!<)<(?!<)(?:(?:(?:[^'\"<>]*+|\"(?:[^\"]*|\\\\\")\")|'(?:[^']*|\\\\')')\\g<6>?)+>)(?:\\s)*+)?::)*\\s*+)?((?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w))(?=;|\\n)",
		  "end": ";",
		  "beginCaptures": {
			"1": {
			  "name": "keyword.other.using.directive.ds"
			},
			"2": {
			  "name": "keyword.other.namespace.directive.ds storage.type.namespace.directive.ds"
			},
			"3": {
			  "patterns": [
				{
				  "include": "#scope_resolution_namespace_using_inner_generated"
				}
			  ]
			},
			"4": {
			  "name": "punctuation.separator.namespace.access.ds punctuation.separator.scope-resolution.namespace.using.ds"
			},
			"5": {
			  "patterns": [
				{
				  "include": "#template_call_range"
				}
			  ]
			},
			"6": {
			},
			"7": {
			  "name": "entity.name.namespace.ds"
			}
		  },
		  "endCaptures": {
			"0": {
			  "name": "punctuation.terminator.statement.ds"
			}
		  },
		  "name": "meta.using-namespace.ds"
		},
		"vararg_ellipses": {
		  "match": "(?<!\\.)\\.\\.\\.(?!\\.)",
		  "name": "punctuation.vararg-ellipses.ds"
		},
		"wordlike_operators": {
		  "patterns": [
			{
			  "match": "(?<!\\w)(?:(?:noexcept)|(?:xor_eq)|(?:and_eq)|(?:delete)|(?:not_eq)|(?:bitand)|(?:bitor)|(?:compl)|(?:or_eq)|(?:not)|(?:xor)|(?:new)|(?:and)|(?:or))(?!\\w)",
			  "name": "keyword.operator.wordlike.ds keyword.operator.$0.ds"
			}
		  ]
		}
	}
}
